{"version":3,"sources":["config/constants/types.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useActiveWeb3React.ts","state/mint/actions.ts","components/Layout/Row.tsx","state/swap/actions.ts","utils/bigNumber.ts","utils/formatBalance.ts","config/constants/tokens.ts","components/Layout/Column.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","utils/index.ts","config/index.ts","config/constants/index.ts","state/user/actions.ts","utils/contractHelpers.ts","components/Balance.tsx","hooks/useContract.ts","state/user/hooks/index.tsx","utils/multicall.ts","utils/wrappedCurrency.ts","views/Pools/helpers.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/user/hooks/helpers.ts","state/multicall/hooks.ts","state/types.ts","state/predictions/helpers.ts","state/predictions/config.ts","state/predictions/queries.ts","state/predictions/index.ts","state/voting/helpers.ts","state/voting/index.tsx","config/constants/lottery.ts","state/lottery/helpers.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","state/info/actions.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","config/constants/lists.ts","state/lists/hooks.ts","components/QuestionHelper/index.tsx","utils/apr.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/actions.ts","utils/prices.ts","state/multicall/actions.ts","hooks/useTheme.ts","config/constants/pools.ts","hooks/useToast.ts","utils/providers.ts","config/constants/endpoints.ts","state/farms/hooks.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/block/hooks.ts","state/wallet/hooks.ts","hooks/usePairs.ts","components/ConnectWalletButton.tsx","state/transactions/hooks.tsx","state/transactions/actions.ts","components/Card/index.tsx","utils/compoundApyHelpers.ts","utils/getGasPrice.ts","config/localization/languages.ts","state/profile/helpers.ts","state/profile/index.tsx","hooks/useRefresh.ts","utils/farmHelpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/swap/hooks.ts","hooks/useParsedQueryString.ts","hooks/useCallWithGasPrice.ts","hooks/useTokenBalance.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","utils/isZero.ts","contexts/Localization/helpers.ts","utils/truncateHash.ts","hooks/useDebounce.ts","hooks/useAuth.ts","utils/wallet.ts","utils/currencyId.ts","utils/uriToHttp.ts","state/teams/index.tsx","config/constants/nfts/collections.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","state/profile/hooks.ts","config/constants/meta.ts","hooks/useBUSDPrice.ts","components/Layout/Page.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","utils/calls/farms.ts","utils/getRpcUrl.ts","config/constants/nfts/types.ts","utils/ENS/parseENSAddress.ts","utils/web3React.ts","components/Loader/CircleLoader.tsx","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","config/constants/campaigns.ts","components/SearchModal/filtering.ts","components/Loader/Dots.tsx","utils/collectibles.ts","hooks/useTotalSupply.ts","state/teams/helpers.ts","config/constants/teams.ts","state/user/hooks/useUserAddedTokens.ts","components/Layout/Container.tsx","components/Menu/Footer.tsx","components/Menu/SubNav.tsx","views/Page.tsx","config/constants/ifo.ts","hooks/useLastUpdated.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/pools/helpers.ts","hooks/useIsWindowVisible.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","hooks/usePreviousValue.ts","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","utils/achievements.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","components/PositionCard/index.tsx","state/achievements/helpers.ts","state/achievements/index.ts","config/constants/nfts/pancakeBunnies.ts","config/constants/nfts/index.ts","state/collectibles/index.ts","components/Loader/PageLoader.tsx","utils/getTimePeriods.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/PageHeader/PageHeader.tsx","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","components/DatePicker/DatePickerPortal.tsx","style/Global.tsx","components/Menu/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","routerHistory.ts","components/Menu/UserMenu/ProfileUserMenutItem.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","hooks/useIntersectionObserver.ts","state/pools/hooks.ts","utils/latinise.ts","components/Layout/Flex.tsx","components/SearchInput/SearchInput.tsx","components/Select/Select.tsx","components/Loading.tsx","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","components/Tags.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","components/TokenImage/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","hooks/useDelayedUnmount.ts","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["PoolIds","PoolCategory","LotteryStatus","AuctionStatus","initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","process","Field","typeInput","createAction","resetMintState","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","MAINNET","ChainId","TESTNET","mainnetTokens","wbnb","Token","bnb","cake","tlos","stephero","qbt","cvp","bscdefi","busd","dai","usdt","btcb","ust","eth","usdc","kalm","hotcross","belt","watch","bry","wsote","helmet","ten","ditto","blink","syrup","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","ada","band","dot","eos","link","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","testnetTokens","tokens","reduce","accum","serializeTokens","unserializedTokens","serializeToken","Column","ColumnCenter","AutoColumn","getAddress","address","getMasterChefAddress","addresses","getMulticallAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","config","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","IPFS_GATEWAY","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","FarmStakedOnly","ViewMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","poolsConfig","find","pool","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","useERC20","useMemo","useCake","useBunnyFactory","useProfile","useMasterchef","useSousChef","usePointCenterIfoContract","useClaimRefundContract","useCakeVaultContract","useFarmAuctionContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserPoolStakedOnly","userPoolStakedOnly","stakedOnly","useUserPoolsViewMode","userPoolsViewMode","viewMode","useUserExpertModeAcknowledgementShow","userExpertModeAcknowledgementShow","showAcknowledgement","useUserUsernameVisibility","userUsernameVisibility","usernameVisibility","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","performanceFee","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","Math","max","blocksRemaining","hasPoolStarted","blocksToDisplay","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbol","symbolBytes32","loading","useCurrency","currencyId","isBNB","toUpperCase","GAS_PRICE","projectLink","default","parseUnits","fast","instant","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","blocksPerFetch","Infinity","useCallsData","callResults","serializedCallKeys","JSON","stringify","c","toCallKey","sort","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","contract","methodName","callInputs","getFunction","results","inputs","callData","useBlock","useMultipleContractSingleData","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","Result","ROUNDS_PER_PAGE","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","hash","block","parseFloat","position","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getBetHistory","where","first","skip","request","GRAPH_API_PREDICTION","gql","response","getLedgerData","epochs","ledgerCalls","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","claimableResponse","index","claimable","getPredictionData","staticCalls","method","currentEpoch","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","LIVE","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","fetchUsersRoundsLength","getUserRoundsLength","fetchUserRounds","cursor","getUserRounds","INITIAL","isLoading","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","lastOraclePrice","history","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","loadingState","filters","timePeriod","hasMoreResults","addressResults","initializePredictions","createAsyncThunk","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","merge","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","page","userRoundsLength","emptyResult","maxPages","lte","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","getState","predictions","predictionsSlice","createSlice","reducers","setLeaderboardFilter","action","payload","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","extraReducers","builder","addCase","pending","IDLE","LOADING","fulfilled","rejected","newestRound","maxBy","futureRound","futureRounds","currentRound","push","actions","getProposals","ACTIVE","SNAPSHOT_API","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","getBlockNumber","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","fetch","SNAPSHOT_VOTING_API","headers","body","ok","statusText","json","isValid","getAllVotes","proposalId","votesPerChunk","Promise","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","voting","votingSlice","_inValid","TICKET_LIMIT_PER_REQUEST","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","PENDING","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","roundId","hasRoundBeenClaimed","tickets","ticket","applyNodeDataToLotteriesGraphResponse","nodeData","graphResponse","nodeRound","ticketPrice","totalTickets","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","slice","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","splice","getGraphLotteries","GRAPH_API_LOTTERY","lotteries","getLotteriesData","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","fetchUserTicketsForMultipleRounds","idsToCheck","ticketsForMultipleRounds","ticketsForRound","userTickets","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","ticketDataForRound","roundTickets","userNodeRound","userGraphRound","getGraphLotteryUser","blankUser","totalCake","userRes","lottery","getUserLotteryData","idsForTicketsNodeCall","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","updateProtocolData","updateProtocolChartData","updateProtocolTransactions","updatePoolData","addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTokenData","addTokenKeys","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","protocol","overview","chartData","transactions","pools","byAddress","createReducer","protocolData","poolData","poolAddresses","poolAddress","tokenData","tokenAddresses","priceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","userFarmStakedOnly","ON_FINISHED","TABLE","userFarmsViewMode","userPredictionAcceptedRisk","userPredictionChartDisclaimerShow","watchlistTokens","watchlistPools","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","userAcceptedRisk","userShowDisclaimer","tokenWatchlist","newTokens","poolsWatchlist","newPools","now","addTransaction","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","requestId","url","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farms","farmsReducer","poolsReducer","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","votingReducer","lotteryReducer","info","infoReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useAppDispatch","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","estimatedGas","gasLimit","then","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","QuestionWrapper","QuestionHelper","text","placement","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","getPoolApr","stakingTokenPrice","rewardTokenPrice","totalStaked","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","all","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","lastDepositedTime","lastUserActionTime","userDataLoaded","cakeVault","fees","userData","fetchPoolsPublicDataAsync","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","earningToken","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","livePoolsData","livePoolData","userPoolData","findIndex","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","split","useTheme","theme","StyledThemeContext","serializedTokens","CORE","harvest","sortOrder","enableEmergencyWithdraw","COMMUNITY","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","GRAPH_API_PROFILE","SNAPSHOT_BASE_URL","API_PROFILE","deserializeFarmUserData","farm","tokenBalance","earnings","deserializeFarm","lpAddresses","lpSymbol","pid","dual","multiplier","isCommunity","quoteTokenPriceBusd","tokenPriceBusd","quoteToken","tokenAmountTotal","lpTotalInQuoteToken","lpTotalSupply","tokenPriceVsQuote","poolWeight","usePollFarmsPublicData","includeArchive","useRefresh","slowRefresh","pids","farmsConfig","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","usePollCoreFarmData","fastRefresh","useFarmFromPid","f","usePriceCakeBusd","cakePriceBusdAsString","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","sm","Toast","toast","onRemove","ttl","timer","removeHandler","title","description","handleRemove","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","DescriptionWithTx","txHash","as","external","href","truncateHash","usePollBlockNumber","isWindowVisible","useIsWindowVisible","setInterval","setBlock","clearInterval","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","useAllTransactions","isTransactionRecent","allTransactions","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","days","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","getGasPrice","code","languageList","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","isActive","points","profileContract","getUsername","username","getProfileAvatar","hasRegistered","getUserProfile","getNftByTokenId","nft","getProfile","getTeam","team","Cookies","avatar","images","domain","secure","expires","isInitialized","profileAvatars","fetchProfileAvatar","fetchProfileUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","profileClear","addPoints","fetchProfile","RefreshContext","slow","isArchivedPid","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","quoteTokenAmountMc","masterchefABI","totalAllocPoint","allocPoint","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","serializedFarm","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","FetchStatus","NOT_FETCHED","FAILED","fetchStatus","balanceState","setBalanceState","balanceOf","prev","fetchBalance","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","setBalance","useGetBnbBalance","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","refresh","useGetCakeBalance","getTokenLogoURL","StyledLogo","uriLocations","isZero","hexNumberString","getItem","startLength","endLength","substring","useDebounce","delay","debouncedValue","setDebouncedValue","handler","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","uriToHttp","uri","substr","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","collections","CollectionKey","PANCAKE","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","fontSize","bold","small","textAlign","TransactionSubmittedContent","onDismiss","currencyToAdd","strokeWidth","isMetaMask","mt","asset","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","justifyContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","useFetchProfile","hasProfile","DEFAULT_META","BUSD_MAINNET","WBNB","useBUSDPrice","wrapped","tokenPairs","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","price","priceOf","Price","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","quote","greaterThan","ethBusdPrice","currencyEthPrice","busdPrice","StyledPage","Container","lg","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","startsWith","getCustomMeta","pageTitle","join","property","Page","TransactionState","primary","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","mb","scale","Transactions","useModal","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","alignItems","mr","Link","show","GlobalSettings","BodyWrapper","AppBody","blockSlice","initialBlock","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getNodeUrl","sample","parseENSAddress","ensAddress","ensPath","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","textSubtle","inputRegex","Input","React","placeholder","onChange","event","nextUserInput","target","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","className","val","campaigns","badge","campaignMap","campaign","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","Dots","span","getTokenUrl","tokenUri","getBunnyNftAddress","collectionKey","fetchCachedUriData","tokenUrl","localUriData","uriDataResponse","uriData","getTokenUriData","tokenURI","nfts","pancake","identifier","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","md","ipfs","textColor","serializedTokensMap","px","maxWidth","BubbleWrapper","Footer","flexGrow","StyledNav","nav","Nav","location","activeIndex","gradients","bubblegum","xs","SubNav","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","setStateLastUpdated","previousLastUpdated","usePreviousValue","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","transformPool","quoteTokenAddress","toLocaleLowerCase","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","src","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","gridGap","outline","startIcon","checked","userSelect","disabled","maxAmountSpend","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","e","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","onBack","prompt","GasSettings","setGasPrice","PancakeToggleWrapper","SettingsModal","showConfirmExpertModal","showExpertModeAcknowledgement","setSingleHopOnly","overflowY","pb","textTransform","borderTop","TransactionSettings","onPresentSettingsModal","height","ens","resolvedContentHash","useENSContentHash","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","ZERO","useMintState","ConfirmAddModalBottom","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","currencyAAmount","currencyBAmount","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","Nfts","video","webm","mp4","blur","pancakeBunnies","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","balanceOfResponse","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","Outer","Inner","PageHeader","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","GlobalStyle","createGlobalStyle","icon","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","cakeFetchStatus","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","minHeight","EditingCurrency","CalculatorMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","createBrowserHistory","Dot","ProfileUserMenuItem","handleClick","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","globalMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","useIntersectionObserver","observerRef","intersectionObserverRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","IntersectionObserver","rootMargin","threshold","observe","disconnect","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","Latinise","latin_map","τ","Τ","latinise","FlexLayout","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","onOptionChange","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","option","selectedIndex","Loading","BulletList","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","expanded","gridTemplateColumns","gridRowGap","compoundTimes","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","fadeOut","RoiCard","earningTokenSymbol","calculatorState","onEnterEditing","currentTarget","ArrowContainer","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","RoiCalculatorModal","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","currencyValue","innerRef","switchEditingUnits","onFocus","toLocaleUpperCase","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","ManualPoolTag","CompoundingPoolTag","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","units","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","fullDecimalStakeAmount","userNotEnoughToken","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","onToggle","handleToggle","CARD","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseCell","CellContent","StyledCell","NameCell","isMobile","useMatchBreakpoints","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isDesktop","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","useFetchUserPools","poolsCurrentlyVisible","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","NaN","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","estimatedText","transactionRevertText","truncatedRecipient","recipientSentToText","postSentToText","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmWord","word","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","entries","warningTokenConfig","warningTokenData","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","FarmAuction","NotFound","Profile","Liquidity","PoolFinder","RemoveLiquidity","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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EFuB,MAAO,IAAIlB,IACTL,EACA,6CACA,GACA,QACA,mBACA,2BAEFwB,IAAK,IAAInB,IACPL,EACA,6CACA,GACA,MACA,cACA,yBAEFyB,MAAO,IAAIpB,IACTL,EACA,6CACA,GACA,QACA,gBACA,4BAEF0B,OAAQ,IAAIrB,IACVL,EACA,6CACA,GACA,SACA,eACA,8BAEF2B,IAAK,IAAItB,IACPL,EACA,6CACA,GACA,MACA,cACA,2BAEF4B,MAAO,IAAIvB,IACTL,EACA,6CACA,EACA,QACA,cACA,wBAEF6B,MAAO,IAAIxB,IACTL,EACA,6CACA,EACA,QACA,cACA,0BAEF8B,MAAO,IAAIzB,IACTL,EACA,6CACA,GACA,QACA,iBACA,gCAEF+B,IAAK,IAAI1B,IACPL,EACA,6CACA,GACA,MACA,cACA,yBAEFgC,SAAU,IAAI3B,IACZL,EACA,6CACA,GACA,WACA,kBACA,yBAEFiC,KAAM,IAAI5B,IACRL,EACA,6CACA,GACA,OACA,gBACA,wBAEFkC,KAAM,IAAI7B,IACRL,EACA,6CACA,GACA,OACA,iBACA,wBAEFmC,IAAK,IAAI9B,IACPL,EACA,6CACA,GACA,MACA,0BACA,mBAEFoC,KAAM,IAAI/B,IACRL,EACA,6CACA,GACA,OACA,oBACA,oCAEFqC,KAAM,IAAIhC,IACRL,EACA,6CACA,GACA,OACA,aACA,+BAEFsC,MAAO,IAAIjC,IACTL,EACA,6CACA,GACA,QACA,qBACA,gCAEFuC,GAAI,IAAIlC,IACNL,EACA,6CACA,GACA,KACA,2BACA,+BAEFwC,IAAK,IAAInC,IACPL,EACA,6CACA,GACA,MACA,sBACA,6BAEFyC,MAAO,IAAIpC,IACTL,EACA,6CACA,GACA,QACA,cACA,0BAEF0C,MAAO,IAAIrC,IACTL,EACA,6CACA,GACA,QACA,kBACA,yBAEF2C,QAAS,IAAItC,IACXL,EACA,6CACA,GACA,MACA,oBACA,4BAEF4C,KAAM,IAAIvC,IAAML,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjG6C,IAAK,IAAIxC,IACPL,EACA,6CACA,GACA,MACA,wBACA,4BAEF8C,IAAK,IAAIzC,IACPL,EACA,6CACA,GACA,MACA,qBACA,4BAEF+C,OAAQ,IAAI1C,IACVL,EACA,6CACA,GACA,SACA,eACA,uBAEFgD,OAAQ,IAAI3C,IACVL,EACA,6CACA,GACA,SACA,uBACA,iCAEFiD,KAAM,IAAI5C,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEFkD,IAAK,IAAI7C,IAAML,EAAS,6CAA8C,GAAI,MAAO,aAAc,qBAC/FmD,KAAM,IAAI9C,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFoD,IAAK,IAAI/C,IACPL,EACA,6CACA,GACA,MACA,kBACA,6BAEFqD,MAAO,IAAIhD,IACTL,EACA,6CACA,GACA,QACA,qBACA,iCAEFsD,MAAO,IAAIjD,IACTL,EACA,6CACA,EACA,QACA,0BACA,oCAEFuD,IAAK,IAAIlD,IACPL,EACA,6CACA,GACA,MACA,gBACA,6BAEFwD,IAAK,IAAInD,IACPL,EACA,6CACA,GACA,MACA,mBACA,kCAEFyD,KAAM,IAAIpD,IACRL,EACA,6CACA,EACA,OACA,aACA,wBAEF0D,KAAM,IAAIrD,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEF2D,IAAK,IAAItD,IACPL,EACA,6CACA,GACA,MACA,iBACA,qBAEF4D,KAAM,IAAIvD,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEF6D,IAAK,IAAIxD,IACPL,EACA,6CACA,GACA,MACA,uBACA,qBAEF8D,IAAK,IAAIzD,IACPL,EACA,6CACA,EACA,MACA,oBACA,gCAEF+D,MAAO,IAAI1D,IACTL,EACA,6CACA,EACA,QACA,2BACA,sCAEFgE,KAAM,IAAI3D,IACRL,EACA,6CACA,GACA,OACA,mBACA,+BAEFiE,KAAM,IAAI5D,IACRL,EACA,6CACA,GACA,OACA,kCACA,qBAEFkE,IAAK,IAAI7D,IACPL,EACA,6CACA,GACA,MACA,kBACA,8BAEFmE,MAAO,IAAI9D,IACTL,EACA,6CACA,GACA,QACA,wBACA,uBAEFoE,KAAM,IAAI/D,IACRL,EACA,6CACA,GACA,OACA,aACA,sBAEFqE,QAAS,IAAIhE,IACXL,EACA,6CACA,GACA,UACA,wBACA,4BAEFsE,IAAK,IAAIjE,IACPL,EACA,6CACA,GACA,MACA,iBACA,wBAEFuE,KAAM,IAAIlE,IACRL,EACA,6CACA,GACA,OACA,aACA,0BAEFwE,IAAK,IAAInE,IACPL,EACA,6CACA,GACA,MACA,YACA,0BAEFyE,IAAK,IAAIpE,IACPL,EACA,6CACA,GACA,MACA,gBACA,2BAEF0E,KAAM,IAAIrE,IACRL,EACA,6CACA,GACA,OACA,uBACA,2BAEF2E,IAAK,IAAItE,IACPL,EACA,6CACA,GACA,MACA,iBACA,6BAEF4E,KAAM,IAAIvE,IACRL,EACA,6CACA,EACA,OACA,eACA,2BAEF6E,IAAK,IAAIxE,IACPL,EACA,6CACA,GACA,MACA,gBACA,uBAEF8E,KAAM,IAAIzE,IACRL,EACA,6CACA,GACA,OACA,eACA,uBAEF+E,MAAO,IAAI1E,IACTL,EACA,6CACA,GACA,QACA,iBACA,yBAEFgF,MAAO,IAAI3E,IACTL,EACA,6CACA,GACA,QACA,4BACA,uBAEFiF,KAAM,IAAI5E,IACRL,EACA,6CACA,GACA,OACA,aACA,sBAEFkF,MAAO,IAAI7E,IACTL,EACA,6CACA,GACA,QACA,sBACA,6BAEFmF,IAAK,IAAI9E,IACPL,EACA,6CACA,EACA,MACA,gBACA,0BAEFoF,IAAK,IAAI/E,IACPL,EACA,6CACA,EACA,MACA,yBACA,0BAEFqF,GAAI,IAAIhF,IACNL,EACA,6CACA,EACA,KACA,gBACA,0BAEFsF,KAAM,IAAIjF,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFuF,IAAK,IAAIlF,IACPL,EACA,6CACA,EACA,MACA,iBACA,0BAEFwF,IAAK,IAAInF,IACPL,EACA,6CACA,EACA,MACA,4BACA,0BAEFyF,IAAK,IAAIpF,IACPL,EACA,6CACA,GACA,MACA,iBACA,8CAEF0F,KAAM,IAAIrF,IACRL,EACA,6CACA,GACA,OACA,aACA,6BAEF2F,IAAK,IAAItF,IACPL,EACA,6CACA,GACA,MACA,qBACA,4BAEF4F,KAAM,IAAIvF,IACRL,EACA,6CACA,EACA,OACA,aACA,wBAEF6F,QAAS,IAAIxF,IACXL,EACA,6CACA,GACA,UACA,eACA,sBAEF8F,KAAM,IAAIzF,IACRL,EACA,6CACA,GACA,OACA,gBACA,4BAEF+F,IAAK,IAAI1F,IACPL,EACA,6CACA,GACA,MACA,oBACA,4BAEFgG,IAAK,IAAI3F,IACPL,EACA,6CACA,GACA,MACA,iBACA,yBAEFiG,IAAK,IAAI5F,IACPL,EACA,6CACA,EACA,MACA,eACA,kCAEFkG,IAAK,IAAI7F,IACPL,EACA,6CACA,GACA,MACA,2BACA,kCAEFmG,IAAK,IAAI9F,IAAML,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGoG,MAAO,IAAI/F,IACTL,EACA,6CACA,GACA,QACA,sBACA,4BAEFqG,IAAK,IAAIhG,IAAML,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGsG,MAAO,IAAIjG,IACTL,EACA,6CACA,GACA,QACA,yBACA,sBAEFuG,KAAM,IAAIlG,IACRL,EACA,6CACA,GACA,OACA,yBACA,6BAEFwG,KAAM,IAAInG,IACRL,EACA,6CACA,GACA,OACA,sBACA,0BAEFyG,KAAM,IAAIpG,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEF0G,KAAM,IAAIrG,IACRL,EACA,6CACA,GACA,OACA,qBACA,8CAEF2G,MAAO,IAAItG,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEF4G,OAAQ,IAAIvG,IACVL,EACA,6CACA,GACA,SACA,6BACA,2BAEF6G,MAAO,IAAIxG,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEF8G,MAAO,IAAIzG,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEF+G,IAAK,IAAI1G,IACPL,EACA,6CACA,GACA,MACA,6BACA,yBAEFgH,IAAK,IAAI3G,IACPL,EACA,6CACA,GACA,MACA,6BACA,4BAEFiH,KAAM,IAAI5G,IACRL,EACA,6CACA,GACA,OACA,kCACA,6BAEFkH,IAAK,IAAI7G,IACPL,EACA,6CACA,GACA,MACA,6BACA,6BAEFmH,IAAK,IAAI9G,IACPL,EACA,6CACA,GACA,MACA,wBACA,mBAEFoH,KAAM,IAAI/G,IACRL,EACA,6CACA,GACA,OACA,8BACA,uBAEFqH,IAAK,IAAIhH,IACPL,EACA,6CACA,GACA,MACA,wBACA,2BAEFsH,KAAM,IAAIjH,IACRL,EACA,6CACA,GACA,OACA,2BACA,2BAEFuH,KAAM,IAAIlH,IACRL,EACA,6CACA,GACA,OACA,iCACA,wBAEFwH,IAAK,IAAInH,IACPL,EACA,6CACA,GACA,MACA,0BACA,0BAEFyH,IAAK,IAAIpH,IACPL,EACA,6CACA,GACA,MACA,iCACA,qBAEF0H,IAAK,IAAIrH,IACPL,EACA,6CACA,GACA,MACA,kCACA,0BAEF2H,IAAK,IAAItH,IACPL,EACA,6CACA,GACA,MACA,4BACA,wBAEF4H,IAAK,IAAIvH,IACPL,EACA,6CACA,GACA,MACA,6BACA,wBAEF6H,KAAM,IAAIxH,IACRL,EACA,6CACA,GACA,OACA,mBACA,+BAEF8H,OAAQ,IAAIzH,IACVL,EACA,6CACA,GACA,SACA,mBACA,2BAEF+H,MAAO,IAAI1H,IACTL,EACA,6CACA,GACA,QACA,yBACA,2BAEFgI,QAAS,IAAI3H,IACXL,EACA,6CACA,GACA,UACA,2BACA,2BAEFiI,MAAO,IAAI5H,IACTL,EACA,6CACA,GACA,QACA,iBACA,yBAEFkI,IAAK,IAAI7H,IACPL,EACA,6CACA,GACA,MACA,iBACA,uBAEFmI,IAAK,IAAI9H,IACPL,EACA,6CACA,GACA,MACA,wBACA,2BAEFoI,KAAM,IAAI/H,IACRL,EACA,6CACA,GACA,OACA,oBACA,uBAEFqI,IAAK,IAAIhI,IACPL,EACA,6CACA,GACA,MACA,oBACA,2BAEFsI,KAAM,IAAIjI,IACRL,EACA,6CACA,GACA,OACA,mBACA,kCAEFuI,IAAK,IAAIlI,IACPL,EACA,6CACA,GACA,MACA,gBACA,4BAEFwI,KAAM,IAAInI,IACRL,EACA,6CACA,EACA,OACA,qBACA,yBAEFyI,KAAM,IAAIpI,IACRL,EACA,6CACA,EACA,OACA,yBACA,6BAEF0I,IAAK,IAAIrI,IACPL,EACA,6CACA,GACA,MACA,gBACA,gCAEF2I,IAAK,IAAItI,IACPL,EACA,6CACA,GACA,MACA,sBACA,6BAEF4I,KAAM,IAAIvI,IACRL,EACA,6CACA,GACA,OACA,qBACA,iCAEF6I,IAAK,IAAIxI,IACPL,EACA,6CACA,GACA,MACA,sBACA,qBAEF8I,KAAM,IAAIzI,IACRL,EACA,6CACA,GACA,OACA,aACA,2BAEF+I,KAAM,IAAI1I,IAAML,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGgJ,IAAK,IAAI3I,IAAML,EAAS,6CAA8C,EAAG,MAAO,YAAa,oBAC7FiJ,KAAM,IAAI5I,IACRL,EACA,6CACA,GACA,OACA,iBACA,wBAEFkJ,OAAQ,IAAI7I,IACVL,EACA,6CACA,GACA,SACA,eACA,+BAEFmJ,IAAK,IAAI9I,IACPL,EACA,6CACA,GACA,MACA,mBACA,+BAEFoJ,KAAM,IAAI/I,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFqJ,KAAM,IAAIhJ,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEFsJ,IAAK,IAAIjJ,IACPL,EACA,6CACA,GACA,MACA,yBACA,6BAEFuJ,IAAK,IAAIlJ,IACPL,EACA,6CACA,GACA,MACA,wBACA,wBAEFwJ,IAAK,IAAInJ,IACPL,EACA,6CACA,EACA,MACA,6BACA,2BAEFyJ,KAAM,IAAIpJ,IACRL,EACA,6CACA,GACA,OACA,SACA,4BAEF0J,KAAM,IAAIrJ,IACRL,EACA,6CACA,GACA,OACA,YACA,4BAEF2J,IAAK,IAAItJ,IACPL,EACA,6CACA,GACA,MACA,yBACA,gCAEF4J,MAAO,IAAIvJ,IACTL,EACA,6CACA,GACA,QACA,iBACA,+BAEF6J,IAAK,IAAIxJ,IACPL,EACA,6CACA,GACA,MACA,oBACA,8BAEF8J,IAAK,IAAIzJ,IACPL,EACA,6CACA,GACA,MACA,YACA,oCAEF+J,MAAO,IAAI1J,IACTL,EACA,6CACA,GACA,QACA,cACA,0BAEFgK,IAAK,IAAI3J,IACPL,EACA,6CACA,GACA,MACA,gBACA,4BAEFiK,YAAM,IAAI5J,IACRL,EACA,6CACA,EACA,YACA,sBACA,8BAEFkK,OAAQ,IAAI7J,IACVL,EACA,6CACA,GACA,SACA,cACA,kCAEFmK,IAAK,IAAI9J,IACPL,EACA,6CACA,GACA,MACA,iBACA,yBAEFoK,IAAK,IAAI/J,IACPL,EACA,6CACA,GACA,MACA,qBACA,yBAEFqK,IAAK,IAAIhK,IACPL,EACA,6CACA,GACA,MACA,+BACA,+BAEFsK,IAAK,IAAIjK,IACPL,EACA,6CACA,GACA,MACA,aACA,yBAEFuK,IAAK,IAAIlK,IACPL,EACA,6CACA,GACA,MACA,YACA,yBAEFwK,MAAO,IAAInK,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEFyK,KAAM,IAAIpK,IACRL,EACA,6CACA,GACA,OACA,aACA,2BAEF0K,IAAK,IAAIrK,IACPL,EACA,6CACA,GACA,MACA,wBACA,0BAEF2K,IAAK,IAAItK,IACPL,EACA,6CACA,GACA,MACA,gCACA,0BAEF4K,KAAM,IAAIvK,IACRL,EACA,6CACA,GACA,OACA,aACA,uBAEF6K,IAAK,IAAIxK,IACPL,EACA,6CACA,EACA,MACA,mBACA,wBAEF8K,KAAM,IAAIzK,IACRL,EACA,6CACA,EACA,OACA,uBACA,yBAEF+K,KAAM,IAAI1K,IACRL,EACA,6CACA,GACA,OACA,kBACA,0BAEFgL,IAAK,IAAI3K,IACPL,EACA,6CACA,GACA,MACA,eACA,2BAEFiL,KAAM,IAAI5K,IACRL,EACA,6CACA,GACA,OACA,iBACA,yBAEFkL,aAAO,IAAI7K,IACTL,EACA,6CACA,EACA,aACA,iBACA,8BAEFmL,IAAK,IAAI9K,IACPL,EACA,6CACA,GACA,MACA,eACA,2BAEFoL,KAAM,IAAI/K,IACRL,EACA,6CACA,GACA,OACA,eACA,uBAEFqL,MAAO,IAAIhL,IACTL,EACA,6CACA,EACA,QACA,qBACA,2BAEFsL,KAAM,IAAIjL,IACRL,EACA,6CACA,GACA,OACA,aACA,8BAEFuL,KAAM,IAAIlL,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFwL,IAAK,IAAInL,IAAML,EAAS,6CAA8C,GAAI,MAAO,YAAa,wBAC9FyL,IAAK,IAAIpL,IACPL,EACA,6CACA,EACA,MACA,eACA,wBAEF0L,KAAM,IAAIrL,IACRL,EACA,6CACA,GACA,OACA,aACA,gCAEF2L,KAAM,IAAItL,IACRL,EACA,6CACA,GACA,OACA,gBACA,8BAEF4L,IAAK,IAAIvL,IACPL,EACA,6CACA,GACA,MACA,kBACA,0BAEF6L,OAAQ,IAAIxL,IACVL,EACA,6CACA,GACA,SACA,cACA,0BAEF8L,MAAO,IAAIzL,IACTL,EACA,6CACA,GACA,QACA,wBACA,uBAEF+L,GAAI,IAAI1L,IACNL,EACA,6CACA,GACA,KACA,gBACA,2BAEFgM,IAAK,IAAI3L,IACPL,EACA,6CACA,GACA,MACA,qBACA,qBAEFiM,KAAM,IAAI5L,IACRL,EACA,6CACA,GACA,OACA,4BACA,4BAEFkM,KAAM,IAAI7L,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFmM,IAAK,IAAI9L,IACPL,EACA,6CACA,GACA,MACA,gBACA,uBAEFoM,IAAK,IAAI/L,IACPL,EACA,6CACA,GACA,MACA,mBACA,0BAEFqM,KAAM,IAAIhM,IACRL,EACA,6CACA,GACA,OACA,oBACA,mCAEFsM,GAAI,IAAIjM,IAAML,EAAS,6CAA8C,GAAI,KAAM,WAAY,wBAC3FuM,IAAK,IAAIlM,IACPL,EACA,6CACA,GACA,MACA,iBACA,4BAEFwM,KAAM,IAAInM,IACRL,EACA,6CACA,GACA,OACA,cACA,2BAEFyM,OAAQ,IAAIpM,IACVL,EACA,6CACA,GACA,SACA,kBACA,8BAEF0M,MAAO,IAAIrM,IACTL,EACA,6CACA,GACA,QACA,kBACA,yBAEF2M,KAAM,IAAItM,IACRL,EACA,6CACA,EACA,OACA,aACA,+BAEF4M,GAAI,IAAIvM,IACNL,EACA,6CACA,GACA,KAC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","file":"static/js/main.c677a198.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { Token } from '@pancakeswap/sdk'\r\n\r\nexport type TranslatableText =\r\n  | string\r\n  | {\r\n      key: string\r\n      data?: {\r\n        [key: string]: string | number\r\n      }\r\n    }\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface SerializedToken {\r\n  chainId: number\r\n  address: string\r\n  decimals: number\r\n  symbol?: string\r\n  name?: string\r\n  projectLink?: string\r\n}\r\n\r\nexport enum PoolIds {\r\n  poolBasic = 'poolBasic',\r\n  poolUnlimited = 'poolUnlimited',\r\n}\r\n\r\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\r\n\r\ninterface IfoPoolInfo {\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  distributionRatio: number // Range [0-1]\r\n}\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  currency: Token\r\n  token: Token\r\n  releaseBlockNumber: number\r\n  articleUrl: string\r\n  campaignId: string\r\n  tokenOfferingPrice: number\r\n  version: number\r\n  [PoolIds.poolBasic]?: IfoPoolInfo\r\n  [PoolIds.poolUnlimited]: IfoPoolInfo\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n  'AUTO' = 'Auto',\r\n}\r\n\r\ninterface FarmConfigBaseProps {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  multiplier?: string\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface SerializedFarmConfig extends FarmConfigBaseProps {\r\n  token: SerializedToken\r\n  quoteToken: SerializedToken\r\n}\r\n\r\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\r\n  token: Token\r\n  quoteToken: Token\r\n}\r\n\r\ninterface PoolConfigBaseProps {\r\n  sousId: number\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  enableEmergencyWithdraw?: boolean\r\n}\r\n\r\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\r\n  earningToken: SerializedToken\r\n  stakingToken: SerializedToken\r\n}\r\n\r\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\r\n  earningToken: Token\r\n  stakingToken: Token\r\n}\r\n\r\nexport type Images = {\r\n  lg: string\r\n  md: string\r\n  sm: string\r\n  ipfs?: string\r\n}\r\n\r\nexport type TeamImages = {\r\n  alt: string\r\n} & Images\r\n\r\nexport type Team = {\r\n  id: number\r\n  name: string\r\n  description: string\r\n  isJoinable?: boolean\r\n  users: number\r\n  points: number\r\n  images: TeamImages\r\n  background: string\r\n  textColor: string\r\n}\r\n\r\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\r\n\r\nexport type Campaign = {\r\n  id: string\r\n  type: CampaignType\r\n  title?: TranslatableText\r\n  description?: TranslatableText\r\n  badge?: string\r\n}\r\n\r\nexport type PageMeta = {\r\n  title: string\r\n  description?: string\r\n  image?: string\r\n}\r\n\r\nexport enum LotteryStatus {\r\n  PENDING = 'pending',\r\n  OPEN = 'open',\r\n  CLOSE = 'close',\r\n  CLAIMABLE = 'claimable',\r\n}\r\n\r\nexport interface LotteryTicket {\r\n  id: string\r\n  number: string\r\n  status: boolean\r\n  rewardBracket?: number\r\n  roundId?: string\r\n  cakeReward?: string\r\n}\r\n\r\nexport interface LotteryTicketClaimData {\r\n  ticketsWithUnclaimedRewards: LotteryTicket[]\r\n  allWinningTickets: LotteryTicket[]\r\n  cakeTotal: BigNumber\r\n  roundId: string\r\n}\r\n\r\n// Farm Auction\r\nexport interface FarmAuctionBidderConfig {\r\n  account: string\r\n  farmName: string\r\n  tokenAddress: string\r\n  quoteToken: Token\r\n  tokenName: string\r\n  projectSite?: string\r\n  lpAddress?: string\r\n}\r\n\r\n// Note: this status is slightly different compared to 'status' comfing\r\n// from Farm Auction smart contract\r\nexport enum AuctionStatus {\r\n  ToBeAnnounced, // No specific dates/blocks to display\r\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\r\n  Open, // Auction is open for bids\r\n  Finished, // Auction end block is reached, bidding is not possible\r\n  Closed, // Auction was closed in smart contract\r\n}\r\n\r\nexport interface Auction {\r\n  id: number\r\n  status: AuctionStatus\r\n  startBlock: number\r\n  startDate: Date\r\n  endBlock: number\r\n  endDate: Date\r\n  auctionDuration: number\r\n  initialBidAmount: number\r\n  topLeaderboard: number\r\n  leaderboardThreshold: BigNumber\r\n}\r\n\r\nexport interface BidderAuction {\r\n  id: number\r\n  amount: BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport interface Bidder extends FarmAuctionBidderConfig {\r\n  position?: number\r\n  isTopPosition: boolean\r\n  samePositionAsAbove: boolean\r\n  amount: BigNumber\r\n}\r\n\r\nexport interface ConnectedBidder {\r\n  account: string\r\n  isWhitelisted: boolean\r\n  bidderData?: Bidder\r\n}\r\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { Language } from '@pancakeswap/uikit'\r\nimport { EN, languages } from 'config/localization/languages'\r\nimport translations from 'config/localization/translations.json'\r\nimport { ContextApi, ContextData, ProviderState } from './types'\r\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\r\n\r\nconst initialState: ProviderState = {\r\n  isFetching: true,\r\n  currentLanguage: EN,\r\n}\r\n\r\n// Export the translations directly\r\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\r\nlanguageMap.set(EN.locale, translations)\r\n\r\nexport const LanguageContext = createContext<ContextApi>(undefined)\r\n\r\nexport const LanguageProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<ProviderState>(() => {\r\n    const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n    return {\r\n      ...initialState,\r\n      currentLanguage: languages[codeFromStorage],\r\n    }\r\n  })\r\n  const { currentLanguage } = state\r\n\r\n  useEffect(() => {\r\n    const fetchInitialLocales = async () => {\r\n      const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n      if (codeFromStorage !== EN.locale) {\r\n        const enLocale = languageMap.get(EN.locale)\r\n        const currentLocale = await fetchLocale(codeFromStorage)\r\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\r\n      }\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n      }))\r\n    }\r\n\r\n    fetchInitialLocales()\r\n  }, [setState])\r\n\r\n  const setLanguage = async (language: Language) => {\r\n    if (!languageMap.has(language.locale)) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: true,\r\n      }))\r\n\r\n      const locale = await fetchLocale(language.locale)\r\n      const enLocale = languageMap.get(EN.locale)\r\n\r\n      // Merge the EN locale to ensure that any locale fetched has all the keys\r\n      languageMap.set(language.locale, { ...enLocale, ...locale })\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    } else {\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    }\r\n  }\r\n\r\n  const translate = useCallback(\r\n    (key: string, data?: ContextData) => {\r\n      const translationSet = languageMap.has(currentLanguage.locale)\r\n        ? languageMap.get(currentLanguage.locale)\r\n        : languageMap.get(EN.locale)\r\n      const translatedText = translationSet[key] || key\r\n\r\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\r\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\r\n\r\n      if (includesVariable && data) {\r\n        let interpolatedText = translatedText\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return translatedText\r\n    },\r\n    [currentLanguage],\r\n  )\r\n\r\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\r\n}\r\n","import { useContext } from 'react'\r\nimport { LanguageContext } from './Provider'\r\n\r\nconst useTranslation = () => {\r\n  const languageContext = useContext(LanguageContext)\r\n\r\n  if (languageContext === undefined) {\r\n    throw new Error('Language context is undefined')\r\n  }\r\n\r\n  return languageContext\r\n}\r\n\r\nexport default useTranslation\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\r\n\r\n/**\r\n * Provides a web3 provider with or without user's signer\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\r\n  const { library, chainId, ...web3React } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setprovider(library || simpleRpcProvider)\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\r\n}\r\n\r\nexport default useActiveWeb3React\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B',\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\r\nexport const resetMintState = createAction<void>('mint/resetMintState')\r\n","import styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst Row = styled(Box)<{\r\n  width?: string\r\n  align?: string\r\n  justify?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align ?? 'center'};\r\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  INPUT = 'INPUT',\r\n  OUTPUT = 'OUTPUT',\r\n}\r\n\r\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\r\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\r\nexport const replaceSwapState = createAction<{\r\n  field: Field\r\n  typedValue: string\r\n  inputCurrencyId?: string\r\n  outputCurrencyId?: string\r\n  recipient: string | null\r\n}>('swap/replaceSwapState')\r\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const BIG_ZERO = new BigNumber(0)\r\nexport const BIG_ONE = new BigNumber(1)\r\nexport const BIG_NINE = new BigNumber(9)\r\nexport const BIG_TEN = new BigNumber(10)\r\n\r\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\r\n  ethersToBigNumber(ethersBn).toJSON()\r\n\r\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\r\n}\r\n\r\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object\r\n * Note: does NOT round\r\n */\r\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\r\n  return formatUnits(number.sub(remainder), decimals)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\r\n * Note: rounds\r\n */\r\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const formattedString = formatUnits(number, decimals)\r\n  return (+formattedString).toFixed(displayDecimals)\r\n}\r\n\r\n/**\r\n * Formats a FixedNumber like BigNumber\r\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\r\n */\r\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\r\n  // Remove decimal\r\n  const [leftSide] = number.toString().split('.')\r\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\r\n}\r\n\r\nexport const formatLocalisedCompactNumber = (number: number): string => {\r\n  const codeFromStorage = getLanguageCodeFromLS()\r\n  return new Intl.NumberFormat(codeFromStorage, {\r\n    notation: 'compact',\r\n    compactDisplay: 'long',\r\n    maximumSignificantDigits: 2,\r\n  }).format(number)\r\n}\r\n\r\nexport default formatLocalisedCompactNumber\r\n","import { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { serializeToken } from 'state/user/hooks/helpers'\r\nimport { SerializedToken } from './types'\r\n\r\nconst { MAINNET, TESTNET } = ChainId\r\n\r\ninterface TokenList {\r\n  [symbol: string]: Token\r\n}\r\n\r\ninterface SerializedTokenList {\r\n  [symbol: string]: SerializedToken\r\n}\r\n\r\nexport const mainnetTokens = {\r\n  wbnb: new Token(\r\n    MAINNET,\r\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    18,\r\n    'WBNB',\r\n    'Wrapped BNB',\r\n    'https://www.binance.com/',\r\n  ),\r\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\r\n  bnb: new Token(MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'BNB', 'BNB', 'https://www.binance.com/'),\r\n  cake: new Token(\r\n    MAINNET,\r\n    '0xfc1C7aE28C07FBA0fD99DF0c3EA272C96B9293b5',\r\n    18,\r\n    'CAKE',\r\n    'PancakeSwap Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  tlos: new Token(MAINNET, '0xb6C53431608E626AC81a9776ac3e999c5556717c', 18, 'TLOS', 'Telos', 'https://www.telos.net/'),\r\n  stephero: new Token(\r\n    MAINNET,\r\n    '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545',\r\n    18,\r\n    'HERO',\r\n    'StepHero',\r\n    'https://stephero.io/',\r\n  ),\r\n  qbt: new Token(MAINNET, '0x17B7163cf1Dbd286E262ddc68b553D899B93f526', 18, 'QBT', 'Qubit Token', 'https://qbt.fi/'),\r\n  cvp: new Token(\r\n    MAINNET,\r\n    '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\r\n    18,\r\n    'CVP',\r\n    'Concentrated Voting Power Token',\r\n    'https://powerpool.finance/',\r\n  ),\r\n  bscdefi: new Token(\r\n    MAINNET,\r\n    '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\r\n    18,\r\n    'BSCDEFI',\r\n    'BSC Defi blue chips token',\r\n    'https://powerpool.finance/',\r\n  ),\r\n  busd: new Token(\r\n    MAINNET,\r\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n    18,\r\n    'BUSD',\r\n    'Binance USD',\r\n    'https://www.paxos.com/busd/',\r\n  ),\r\n  dai: new Token(\r\n    MAINNET,\r\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\r\n    18,\r\n    'DAI',\r\n    'Dai Stablecoin',\r\n    'https://www.makerdao.com/',\r\n  ),\r\n  usdt: new Token(\r\n    MAINNET,\r\n    '0x55d398326f99059fF775485246999027B3197955',\r\n    18,\r\n    'USDT',\r\n    'Tether USD',\r\n    'https://tether.to/',\r\n  ),\r\n  btcb: new Token(\r\n    MAINNET,\r\n    '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\r\n    18,\r\n    'BTCB',\r\n    'Binance BTC',\r\n    'https://bitcoin.org/',\r\n  ),\r\n  ust: new Token(\r\n    MAINNET,\r\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\r\n    18,\r\n    'UST',\r\n    'Wrapped UST Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  eth: new Token(\r\n    MAINNET,\r\n    '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n    18,\r\n    'ETH',\r\n    'Binance-Peg Ethereum Token',\r\n    'https://ethereum.org/en/',\r\n  ),\r\n  usdc: new Token(\r\n    MAINNET,\r\n    '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n    18,\r\n    'USDC',\r\n    'Binance-Peg USD Coin',\r\n    'https://www.centre.io/usdc',\r\n  ),\r\n  kalm: new Token(\r\n    MAINNET,\r\n    '0x4BA0057f784858a48fe351445C672FF2a3d43515',\r\n    18,\r\n    'KALM',\r\n    'Kalmar Token',\r\n    'https://kalmar.io/',\r\n  ),\r\n  hotcross: new Token(\r\n    MAINNET,\r\n    '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\r\n    18,\r\n    'HOTCROSS',\r\n    'Hotcross Token',\r\n    'https://www.hotcross.com/',\r\n  ),\r\n  belt: new Token(\r\n    MAINNET,\r\n    '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\r\n    18,\r\n    'BELT',\r\n    'Belt Token',\r\n    'https://beta.belt.fi/',\r\n  ),\r\n  watch: new Token(\r\n    MAINNET,\r\n    '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\r\n    18,\r\n    'WATCH',\r\n    'Yieldwatch Token',\r\n    'https://yieldwatch.net/',\r\n  ),\r\n  bry: new Token(\r\n    MAINNET,\r\n    '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\r\n    18,\r\n    'BRY',\r\n    'Berry Token',\r\n    'https://berrydata.co/',\r\n  ),\r\n  wsote: new Token(\r\n    MAINNET,\r\n    '0x541E619858737031A1244A5d0Cd47E5ef480342c',\r\n    18,\r\n    'wSOTE',\r\n    'Soteria Token',\r\n    'https://soteria.finance/',\r\n  ),\r\n  helmet: new Token(\r\n    MAINNET,\r\n    '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\r\n    18,\r\n    'Helmet',\r\n    'Helmet Token',\r\n    'https://www.helmet.insure/',\r\n  ),\r\n  ten: new Token(\r\n    MAINNET,\r\n    '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\r\n    18,\r\n    'TEN',\r\n    'Tenet Token',\r\n    'https://www.tenet.farm/',\r\n  ),\r\n  ditto: new Token(\r\n    MAINNET,\r\n    '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\r\n    9,\r\n    'DITTO',\r\n    'Ditto Token',\r\n    'https://ditto.money/',\r\n  ),\r\n  blink: new Token(\r\n    MAINNET,\r\n    '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\r\n    6,\r\n    'BLINK',\r\n    'Blink Token',\r\n    'https://blink.wink.org',\r\n  ),\r\n  syrup: new Token(\r\n    MAINNET,\r\n    '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\r\n    18,\r\n    'SYRUP',\r\n    'SyrupBar Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  pha: new Token(\r\n    MAINNET,\r\n    '0x0112e557d400474717056C4e6D40eDD846F38351',\r\n    18,\r\n    'PHA',\r\n    'Phala Token',\r\n    'https://phala.network',\r\n  ),\r\n  babycake: new Token(\r\n    MAINNET,\r\n    '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\r\n    18,\r\n    'BABYCAKE',\r\n    'Baby Cake Token',\r\n    'https://babycake.app/',\r\n  ),\r\n  bmon: new Token(\r\n    MAINNET,\r\n    '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\r\n    18,\r\n    'BMON',\r\n    'Binamon Token',\r\n    'https://binamon.org/',\r\n  ),\r\n  hero: new Token(\r\n    MAINNET,\r\n    '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\r\n    18,\r\n    'HERO',\r\n    'Metahero Token',\r\n    'https://metahero.io/',\r\n  ),\r\n  wsg: new Token(\r\n    MAINNET,\r\n    '0xA58950F05FeA2277d2608748412bf9F802eA4901',\r\n    18,\r\n    'WSG',\r\n    'Wall Street Games Token',\r\n    'https://wsg.gg/',\r\n  ),\r\n  mcrn: new Token(\r\n    MAINNET,\r\n    '0xacb2d47827C9813AE26De80965845D80935afd0B',\r\n    18,\r\n    'MCRN',\r\n    'Macaronswap Token',\r\n    'https://www.macaronswap.finance/',\r\n  ),\r\n  revv: new Token(\r\n    MAINNET,\r\n    '0x833F307aC507D47309fD8CDD1F835BeF8D702a93',\r\n    18,\r\n    'REVV',\r\n    'REVV Token',\r\n    'https://revvmotorsport.com/',\r\n  ),\r\n  skill: new Token(\r\n    MAINNET,\r\n    '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\r\n    18,\r\n    'SKILL',\r\n    'Cryptoblades Token',\r\n    'https://www.cryptoblades.io/',\r\n  ),\r\n  if: new Token(\r\n    MAINNET,\r\n    '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\r\n    18,\r\n    'IF',\r\n    'Impossible Finance Token',\r\n    'https://impossible.finance/',\r\n  ),\r\n  sps: new Token(\r\n    MAINNET,\r\n    '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\r\n    18,\r\n    'SPS',\r\n    'Splinterlands Token',\r\n    'https://splinterlands.com',\r\n  ),\r\n  chess: new Token(\r\n    MAINNET,\r\n    '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\r\n    18,\r\n    'CHESS',\r\n    'Chess Token',\r\n    'https://tranchess.com/',\r\n  ),\r\n  titan: new Token(\r\n    MAINNET,\r\n    '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\r\n    18,\r\n    'TITAN',\r\n    'Titanswap Token',\r\n    'https://titanswap.org',\r\n  ),\r\n  harmony: new Token(\r\n    MAINNET,\r\n    '0x03fF0ff224f904be3118461335064bB48Df47938',\r\n    18,\r\n    'ONE',\r\n    'Harmony ONE Token',\r\n    'https://www.harmony.one/',\r\n  ),\r\n  mask: new Token(MAINNET, '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3', 18, 'MASK', 'Mask Token', 'https://mask.io/'),\r\n  dvi: new Token(\r\n    MAINNET,\r\n    '0x758FB037A375F17c7e195CC634D77dA4F554255B',\r\n    18,\r\n    'DVI',\r\n    'Dvision Network Token',\r\n    'https://dvision.network/',\r\n  ),\r\n  adx: new Token(\r\n    MAINNET,\r\n    '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\r\n    18,\r\n    'ADX',\r\n    'Adex Network Token',\r\n    'https://www.adex.network',\r\n  ),\r\n  bscpad: new Token(\r\n    MAINNET,\r\n    '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\r\n    18,\r\n    'BSCPAD',\r\n    'Bscpad Token',\r\n    'https://bscpad.com/',\r\n  ),\r\n  rabbit: new Token(\r\n    MAINNET,\r\n    '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\r\n    18,\r\n    'RABBIT',\r\n    'Rabbit Finance Token',\r\n    'https://rabbitfinance.io/earn',\r\n  ),\r\n  form: new Token(\r\n    MAINNET,\r\n    '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\r\n    18,\r\n    'FORM',\r\n    'Formation Token',\r\n    'https://formation.fi/',\r\n  ),\r\n  txl: new Token(MAINNET, '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5', 18, 'TXL', 'Tixl Token', 'https://tixl.org/'),\r\n  orbs: new Token(\r\n    MAINNET,\r\n    '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\r\n    18,\r\n    'ORBS',\r\n    'Orbs Token',\r\n    'https://www.orbs.com/',\r\n  ),\r\n  cos: new Token(\r\n    MAINNET,\r\n    '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\r\n    18,\r\n    'COS',\r\n    'Contentos Token',\r\n    'https://www.contentos.io/',\r\n  ),\r\n  bunny: new Token(\r\n    MAINNET,\r\n    '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\r\n    18,\r\n    'BUNNY',\r\n    'Pancakebunny Token',\r\n    'https://pancakebunny.finance/',\r\n  ),\r\n  alice: new Token(\r\n    MAINNET,\r\n    '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\r\n    6,\r\n    'ALICE',\r\n    'My Neighbor Alice Token',\r\n    'https://www.myneighboralice.com/',\r\n  ),\r\n  for: new Token(\r\n    MAINNET,\r\n    '0x658A109C5900BC6d2357c87549B651670E5b0539',\r\n    18,\r\n    'FOR',\r\n    'Fortube Token',\r\n    'https://www.for.tube/home',\r\n  ),\r\n  bux: new Token(\r\n    MAINNET,\r\n    '0x211FfbE424b90e25a15531ca322adF1559779E45',\r\n    18,\r\n    'BUX',\r\n    'Bux Crypto Token',\r\n    'https://getbux.com/bux-crypto/',\r\n  ),\r\n  nuls: new Token(\r\n    MAINNET,\r\n    '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\r\n    8,\r\n    'NULS',\r\n    'Nuls Token',\r\n    'https://www.nuls.io/',\r\n  ),\r\n  ramp: new Token(\r\n    MAINNET,\r\n    '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\r\n    18,\r\n    'RAMP',\r\n    'RAMP DEFI Token',\r\n    'https://rampdefi.com/',\r\n  ),\r\n  bfi: new Token(\r\n    MAINNET,\r\n    '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\r\n    18,\r\n    'BFI',\r\n    'bearn.fi Token',\r\n    'https://bearn.fi/',\r\n  ),\r\n  dexe: new Token(\r\n    MAINNET,\r\n    '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\r\n    18,\r\n    'DEXE',\r\n    'DeXe Token',\r\n    'https://dexe.network/',\r\n  ),\r\n  bel: new Token(\r\n    MAINNET,\r\n    '0x8443f091997f06a61670B735ED92734F5628692F',\r\n    18,\r\n    'BEL',\r\n    'Bella Protocol Token',\r\n    'https://bella.fi/',\r\n  ),\r\n  tpt: new Token(\r\n    MAINNET,\r\n    '0xECa41281c24451168a37211F0bc2b8645AF45092',\r\n    4,\r\n    'TPT',\r\n    'Tokenpocket Token',\r\n    'https://www.tokenpocket.pro/',\r\n  ),\r\n  xmark: new Token(\r\n    MAINNET,\r\n    '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\r\n    9,\r\n    'xMARK',\r\n    'Benchmark Protocol Token',\r\n    'https://benchmarkprotocol.finance/',\r\n  ),\r\n  bmxx: new Token(\r\n    MAINNET,\r\n    '0x4131b87F74415190425ccD873048C708F8005823',\r\n    18,\r\n    'bMXX',\r\n    'Multiplier Token',\r\n    'https://multiplier.finance/',\r\n  ),\r\n  iotx: new Token(\r\n    MAINNET,\r\n    '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\r\n    18,\r\n    'IOTX',\r\n    'Binance-Peg IoTeX Network Token',\r\n    'https://iotex.io/',\r\n  ),\r\n  bor: new Token(\r\n    MAINNET,\r\n    '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\r\n    18,\r\n    'BOR',\r\n    'BoringDAO Token',\r\n    'https://www.boringdao.com/',\r\n  ),\r\n  bopen: new Token(\r\n    MAINNET,\r\n    '0xF35262a9d427F96d2437379eF090db986eaE5d42',\r\n    18,\r\n    'bOPEN',\r\n    'OPEN Governance Token',\r\n    'https://opendao.io/',\r\n  ),\r\n  dodo: new Token(\r\n    MAINNET,\r\n    '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\r\n    18,\r\n    'DODO',\r\n    'Dodo Token',\r\n    'https://dodoex.io/',\r\n  ),\r\n  swingby: new Token(\r\n    MAINNET,\r\n    '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\r\n    18,\r\n    'SWINGBY',\r\n    'Swingby Network Token',\r\n    'https://swingby.network/',\r\n  ),\r\n  zee: new Token(\r\n    MAINNET,\r\n    '0x44754455564474A89358B2C2265883DF993b12F0',\r\n    18,\r\n    'ZEE',\r\n    'Zeroswap Token',\r\n    'https://zeroswap.io/',\r\n  ),\r\n  swgb: new Token(\r\n    MAINNET,\r\n    '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb',\r\n    18,\r\n    'SWGb',\r\n    'SWGb Token',\r\n    'https://swirgepay.com/',\r\n  ),\r\n  swg: new Token(\r\n    MAINNET,\r\n    '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\r\n    18,\r\n    'SWG',\r\n    'SWG Token',\r\n    'https://swirgepay.com/',\r\n  ),\r\n  sfp: new Token(\r\n    MAINNET,\r\n    '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\r\n    18,\r\n    'SFP',\r\n    'Safepal Token',\r\n    'https://www.safepal.io/',\r\n  ),\r\n  lina: new Token(\r\n    MAINNET,\r\n    '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\r\n    18,\r\n    'LINA',\r\n    'Linear Finance Token',\r\n    'https://linear.finance/',\r\n  ),\r\n  lit: new Token(\r\n    MAINNET,\r\n    '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\r\n    18,\r\n    'LIT',\r\n    'Litentry Token',\r\n    'https://www.litentry.com/',\r\n  ),\r\n  hget: new Token(\r\n    MAINNET,\r\n    '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\r\n    6,\r\n    'HGET',\r\n    'Hedget Token',\r\n    'https://www.hedget.com/',\r\n  ),\r\n  bdo: new Token(\r\n    MAINNET,\r\n    '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\r\n    18,\r\n    'BDO',\r\n    'Bdollar Token',\r\n    'https://bdollar.fi/',\r\n  ),\r\n  egld: new Token(\r\n    MAINNET,\r\n    '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\r\n    18,\r\n    'EGLD',\r\n    'Elrond Token',\r\n    'https://elrond.com/',\r\n  ),\r\n  front: new Token(\r\n    MAINNET,\r\n    '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\r\n    18,\r\n    'FRONT',\r\n    'Frontier Token',\r\n    'https://frontier.xyz/',\r\n  ),\r\n  btcst: new Token(\r\n    MAINNET,\r\n    '0x78650B139471520656b9E7aA7A5e9276814a38e9',\r\n    17,\r\n    'BTCST',\r\n    'StandardBTCHashrate Token',\r\n    'https://www.1-b.tc/',\r\n  ),\r\n  bscx: new Token(\r\n    MAINNET,\r\n    '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\r\n    18,\r\n    'BSCX',\r\n    'BSCX Token',\r\n    'https://bscex.org/',\r\n  ),\r\n  balbt: new Token(\r\n    MAINNET,\r\n    '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\r\n    18,\r\n    'bALBT',\r\n    'AllianceBlock Token',\r\n    'https://allianceblock.io/',\r\n  ),\r\n  asr: new Token(\r\n    MAINNET,\r\n    '0x80D5f92C2c8C682070C95495313dDB680B267320',\r\n    2,\r\n    'ASR',\r\n    'AS Roma Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  atm: new Token(\r\n    MAINNET,\r\n    '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\r\n    2,\r\n    'ATM',\r\n    'Athletico Madrid Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  og: new Token(\r\n    MAINNET,\r\n    '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\r\n    2,\r\n    'OG',\r\n    'OG Nice Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  reef: new Token(\r\n    MAINNET,\r\n    '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\r\n    18,\r\n    'REEF',\r\n    'Reef.finance Token',\r\n    'https://reef.finance/',\r\n  ),\r\n  juv: new Token(\r\n    MAINNET,\r\n    '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\r\n    2,\r\n    'JUV',\r\n    'Juventus Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  psg: new Token(\r\n    MAINNET,\r\n    '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\r\n    2,\r\n    'PSG',\r\n    'Paris Saint-Germain Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  vai: new Token(\r\n    MAINNET,\r\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\r\n    18,\r\n    'VAI',\r\n    'VAI Stablecoin',\r\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\r\n  ),\r\n  unfi: new Token(\r\n    MAINNET,\r\n    '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\r\n    18,\r\n    'UNFI',\r\n    'UNFI Token',\r\n    'https://unifiprotocol.com',\r\n  ),\r\n  twt: new Token(\r\n    MAINNET,\r\n    '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\r\n    18,\r\n    'TWT',\r\n    'Trust Wallet Token',\r\n    'https://trustwallet.com/',\r\n  ),\r\n  hard: new Token(\r\n    MAINNET,\r\n    '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\r\n    6,\r\n    'HARD',\r\n    'HARD Token',\r\n    'https://hard.kava.io',\r\n  ),\r\n  broobee: new Token(\r\n    MAINNET,\r\n    '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\r\n    18,\r\n    'bROOBEE',\r\n    'ROOBEE Token',\r\n    'https://roobee.io/',\r\n  ),\r\n  stax: new Token(\r\n    MAINNET,\r\n    '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\r\n    18,\r\n    'STAX',\r\n    'StableX Token',\r\n    'https://stablexswap.com/',\r\n  ),\r\n  nar: new Token(\r\n    MAINNET,\r\n    '0xA1303E6199b319a891b79685F0537D289af1FC83',\r\n    18,\r\n    'NAR',\r\n    'Narwhalswap Token',\r\n    'https://narwhalswap.org/',\r\n  ),\r\n  nya: new Token(\r\n    MAINNET,\r\n    '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\r\n    18,\r\n    'NYA',\r\n    'Nyanswop Token',\r\n    'https://nyanswop.org/',\r\n  ),\r\n  ctk: new Token(\r\n    MAINNET,\r\n    '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\r\n    6,\r\n    'CTK',\r\n    'Certik Token',\r\n    'https://www.certik.foundation/',\r\n  ),\r\n  inj: new Token(\r\n    MAINNET,\r\n    '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\r\n    18,\r\n    'INJ',\r\n    'Injective Protocol Token',\r\n    'https://injectiveprotocol.com/',\r\n  ),\r\n  sxp: new Token(MAINNET, '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A', 18, 'SXP', 'Swipe Token', 'https://swipe.io/'),\r\n  alpha: new Token(\r\n    MAINNET,\r\n    '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\r\n    18,\r\n    'ALPHA',\r\n    'Alpha Finance Token',\r\n    'https://alphafinance.io/',\r\n  ),\r\n  xvs: new Token(MAINNET, '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63', 18, 'XVS', 'Venus Token', 'https://venus.io/'),\r\n  sushi: new Token(\r\n    MAINNET,\r\n    '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\r\n    18,\r\n    'SUSHI',\r\n    'Binance-Peg SushiToken',\r\n    'https://sushi.com/',\r\n  ),\r\n  comp: new Token(\r\n    MAINNET,\r\n    '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\r\n    18,\r\n    'COMP',\r\n    'Compound Finance Token',\r\n    'https://compound.finance/',\r\n  ),\r\n  bifi: new Token(\r\n    MAINNET,\r\n    '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\r\n    18,\r\n    'BIFI',\r\n    'Beefy Finance Token',\r\n    'https://beefy.finance/',\r\n  ),\r\n  dusk: new Token(\r\n    MAINNET,\r\n    '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\r\n    18,\r\n    'DUSK',\r\n    'Dusk Network Token',\r\n    'https://dusk.network/',\r\n  ),\r\n  beth: new Token(\r\n    MAINNET,\r\n    '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\r\n    18,\r\n    'BETH',\r\n    'Binance Beacon ETH',\r\n    'https://ethereum.org/en/eth2/beacon-chain/',\r\n  ),\r\n  mamzn: new Token(\r\n    MAINNET,\r\n    '0x3947B992DC0147D2D89dF0392213781b04B25075',\r\n    18,\r\n    'mAMZN',\r\n    'Wrapped Mirror AMZN Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  mgoogl: new Token(\r\n    MAINNET,\r\n    '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\r\n    18,\r\n    'mGOOGL',\r\n    'Wrapped Mirror GOOGL Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  mnflx: new Token(\r\n    MAINNET,\r\n    '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\r\n    18,\r\n    'mNFLX',\r\n    'Wrapped Mirror NFLX Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  mtsla: new Token(\r\n    MAINNET,\r\n    '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\r\n    18,\r\n    'mTSLA',\r\n    'Wrapped Mirror TSLA Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  ltc: new Token(\r\n    MAINNET,\r\n    '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\r\n    18,\r\n    'LTC',\r\n    'Binance-Peg Litecoin Token',\r\n    'https://litecoin.org/',\r\n  ),\r\n  ada: new Token(\r\n    MAINNET,\r\n    '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\r\n    18,\r\n    'ADA',\r\n    ' Binance-Peg Cardano Token',\r\n    'https://www.cardano.org/',\r\n  ),\r\n  band: new Token(\r\n    MAINNET,\r\n    '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\r\n    18,\r\n    'BAND',\r\n    'Binance-Peg Band Protocol Token',\r\n    'https://bandprotocol.com/',\r\n  ),\r\n  dot: new Token(\r\n    MAINNET,\r\n    '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\r\n    18,\r\n    'DOT',\r\n    'Binance-Peg Polkadot Token',\r\n    'https://polkadot.network/',\r\n  ),\r\n  eos: new Token(\r\n    MAINNET,\r\n    '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\r\n    18,\r\n    'EOS',\r\n    'Binance-Peg EOS Token',\r\n    'https://eos.io/',\r\n  ),\r\n  link: new Token(\r\n    MAINNET,\r\n    '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\r\n    18,\r\n    'LINK',\r\n    'Binance-Peg Chainlink Token',\r\n    'https://chain.link/',\r\n  ),\r\n  xrp: new Token(\r\n    MAINNET,\r\n    '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\r\n    18,\r\n    'XRP',\r\n    'Binance-Peg XRP Token',\r\n    'https://ripple.com/xrp/',\r\n  ),\r\n  atom: new Token(\r\n    MAINNET,\r\n    '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\r\n    18,\r\n    'ATOM',\r\n    'Binance-Peg Cosmos Token',\r\n    'https://cosmos.network/',\r\n  ),\r\n  yfii: new Token(\r\n    MAINNET,\r\n    '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\r\n    18,\r\n    'YFII',\r\n    'Binance-Peg YFII.finance Token',\r\n    'https://dfi.money/#/',\r\n  ),\r\n  xtz: new Token(\r\n    MAINNET,\r\n    '0x16939ef78684453bfDFb47825F8a5F714f12623a',\r\n    18,\r\n    'XTZ',\r\n    'Binance-Peg Tezos Token',\r\n    'https://www.tezos.com/',\r\n  ),\r\n  bch: new Token(\r\n    MAINNET,\r\n    '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\r\n    18,\r\n    'BCH',\r\n    'Binance-Peg Bitcoin Cash Token',\r\n    'https://bch.info/',\r\n  ),\r\n  yfi: new Token(\r\n    MAINNET,\r\n    '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\r\n    18,\r\n    'YFI',\r\n    'Binance-Peg yearn.finance Token',\r\n    'https://yearn.finance/',\r\n  ),\r\n  uni: new Token(\r\n    MAINNET,\r\n    '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\r\n    18,\r\n    'UNI',\r\n    'Binance-Peg Uniswap Token',\r\n    'https://uniswap.org/',\r\n  ),\r\n  fil: new Token(\r\n    MAINNET,\r\n    '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\r\n    18,\r\n    'FIL',\r\n    'Binance-Peg Filecoin Token',\r\n    'https://filecoin.io/',\r\n  ),\r\n  bake: new Token(\r\n    MAINNET,\r\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    18,\r\n    'BAKE',\r\n    'Bakeryswap Token',\r\n    'https://www.bakeryswap.org/',\r\n  ),\r\n  burger: new Token(\r\n    MAINNET,\r\n    '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\r\n    18,\r\n    'BURGER',\r\n    'Burgerswap Token',\r\n    'https://burgerswap.org/',\r\n  ),\r\n  bdigg: new Token(\r\n    MAINNET,\r\n    '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\r\n    18,\r\n    'bDIGG',\r\n    'Badger Sett Digg Token',\r\n    'https://badger.finance/',\r\n  ),\r\n  bbadger: new Token(\r\n    MAINNET,\r\n    '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\r\n    18,\r\n    'bBadger',\r\n    'Badger Sett Badger Token',\r\n    'https://badger.finance/',\r\n  ),\r\n  trade: new Token(\r\n    MAINNET,\r\n    '0x7af173F350D916358AF3e218Bdf2178494Beb748',\r\n    18,\r\n    'TRADE',\r\n    'Unitrade Token',\r\n    'https://unitrade.app/',\r\n  ),\r\n  pnt: new Token(\r\n    MAINNET,\r\n    '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\r\n    18,\r\n    'PNT',\r\n    'pNetwork Token',\r\n    'https://ptokens.io/',\r\n  ),\r\n  mir: new Token(\r\n    MAINNET,\r\n    '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\r\n    18,\r\n    'MIR',\r\n    'Mirror Protocol Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  pbtc: new Token(\r\n    MAINNET,\r\n    '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\r\n    18,\r\n    'pBTC',\r\n    'pTokens BTC Token',\r\n    'https://ptokens.io/',\r\n  ),\r\n  lto: new Token(\r\n    MAINNET,\r\n    '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\r\n    18,\r\n    'LTO',\r\n    'LTO Network Token',\r\n    'https://ltonetwork.com/',\r\n  ),\r\n  pcws: new Token(\r\n    MAINNET,\r\n    '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\r\n    18,\r\n    'pCWS',\r\n    'PolyCrowns Token',\r\n    'https://game.seascape.network/',\r\n  ),\r\n  zil: new Token(\r\n    MAINNET,\r\n    '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\r\n    12,\r\n    'ZIL',\r\n    'Zilliqa Token',\r\n    'https://www.zilliqa.com/',\r\n  ),\r\n  lien: new Token(\r\n    MAINNET,\r\n    '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\r\n    8,\r\n    'LIEN',\r\n    'Lien Finance Token',\r\n    'https://lien.finance/',\r\n  ),\r\n  swth: new Token(\r\n    MAINNET,\r\n    '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\r\n    8,\r\n    'SWTH',\r\n    'Switcheo Network Token',\r\n    'https://switcheo.network/',\r\n  ),\r\n  dft: new Token(\r\n    MAINNET,\r\n    '0x42712dF5009c20fee340B245b510c0395896cF6e',\r\n    18,\r\n    'DFT',\r\n    'Dfuture Token',\r\n    'https://www.dfuture.com/home',\r\n  ),\r\n  gum: new Token(\r\n    MAINNET,\r\n    '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\r\n    18,\r\n    'GUM',\r\n    'GourmetGalaxy Token',\r\n    'https://gourmetgalaxy.io/',\r\n  ),\r\n  dego: new Token(\r\n    MAINNET,\r\n    '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\r\n    18,\r\n    'DEGO',\r\n    'Dego Finance Token',\r\n    'https://bsc.dego.finance/home',\r\n  ),\r\n  nrv: new Token(\r\n    MAINNET,\r\n    '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\r\n    18,\r\n    'NRV',\r\n    'Nerve Finance Token',\r\n    'https://nerve.fi/',\r\n  ),\r\n  easy: new Token(\r\n    MAINNET,\r\n    '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\r\n    18,\r\n    'EASY',\r\n    'EASY Token',\r\n    'https://easyfi.network/',\r\n  ),\r\n  oddz: new Token(MAINNET, '0xCD40F2670CF58720b694968698A5514e924F742d', 18, 'ODDZ', 'Oddz Token', 'https://oddz.fi/'),\r\n  hoo: new Token(MAINNET, '0xE1d1F66215998786110Ba0102ef558b22224C016', 8, 'HOO', 'Hoo Token', 'https://hoo.com/'),\r\n  apys: new Token(\r\n    MAINNET,\r\n    '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\r\n    18,\r\n    'APYS',\r\n    'APY Swap Token',\r\n    'https://apyswap.com/',\r\n  ),\r\n  bondly: new Token(\r\n    MAINNET,\r\n    '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\r\n    18,\r\n    'BONDLY',\r\n    'Bondly Token',\r\n    'https://www.bondly.finance/',\r\n  ),\r\n  tko: new Token(\r\n    MAINNET,\r\n    '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\r\n    18,\r\n    'TKO',\r\n    'Tokocrypto Token',\r\n    'https://www.tokocrypto.com/',\r\n  ),\r\n  itam: new Token(\r\n    MAINNET,\r\n    '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\r\n    18,\r\n    'ITAM',\r\n    'Itam Network Token',\r\n    'https://itam.network/',\r\n  ),\r\n  arpa: new Token(\r\n    MAINNET,\r\n    '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\r\n    18,\r\n    'ARPA',\r\n    'Arpachain Token',\r\n    'https://arpachain.io/',\r\n  ),\r\n  eps: new Token(\r\n    MAINNET,\r\n    '0xA7f552078dcC247C2684336020c03648500C6d9F',\r\n    18,\r\n    'EPS',\r\n    'Ellipsis Finance Token',\r\n    'https://ellipsis.finance/',\r\n  ),\r\n  jgn: new Token(\r\n    MAINNET,\r\n    '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\r\n    18,\r\n    'JGN',\r\n    'Juggernaut DeFi Token',\r\n    'https://jgndefi.com/',\r\n  ),\r\n  tlm: new Token(\r\n    MAINNET,\r\n    '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\r\n    4,\r\n    'TLM',\r\n    'Alien Worlds Trilium Token',\r\n    'https://alienworlds.io/',\r\n  ),\r\n  perl: new Token(\r\n    MAINNET,\r\n    '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\r\n    18,\r\n    'PERL',\r\n    'Perlin',\r\n    'https://perlinx.finance/',\r\n  ),\r\n  alpa: new Token(\r\n    MAINNET,\r\n    '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\r\n    18,\r\n    'ALPA',\r\n    'AlpaToken',\r\n    'https://bsc.alpaca.city/',\r\n  ),\r\n  hzn: new Token(\r\n    MAINNET,\r\n    '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\r\n    18,\r\n    'HZN',\r\n    'Horizon Protocol Token',\r\n    'https://horizonprotocol.com/',\r\n  ),\r\n  suter: new Token(\r\n    MAINNET,\r\n    '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\r\n    18,\r\n    'SUTER',\r\n    'Suterusu Token',\r\n    'https://shield.suterusu.io/',\r\n  ),\r\n  cgg: new Token(\r\n    MAINNET,\r\n    '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\r\n    18,\r\n    'CGG',\r\n    'pTokens CGG Token',\r\n    'https://chainguardians.io/',\r\n  ),\r\n  mix: new Token(\r\n    MAINNET,\r\n    '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\r\n    18,\r\n    'MIX',\r\n    'Mix Token',\r\n    'https://mixie.chainguardians.io/',\r\n  ),\r\n  hakka: new Token(\r\n    MAINNET,\r\n    '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\r\n    18,\r\n    'HAKKA',\r\n    'Hakka Token',\r\n    'https://hakka.finance/',\r\n  ),\r\n  xed: new Token(\r\n    MAINNET,\r\n    '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\r\n    18,\r\n    'XED',\r\n    'Exeedme Token',\r\n    'https://www.exeedme.com/',\r\n  ),\r\n  τbtc: new Token(\r\n    MAINNET,\r\n    '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\r\n    9,\r\n    'τBTC',\r\n    'τBitcoin Token',\r\n    'https://www.btcst.finance/',\r\n  ),\r\n  alpaca: new Token(\r\n    MAINNET,\r\n    '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\r\n    18,\r\n    'ALPACA',\r\n    'AlpacaToken',\r\n    'https://www.alpacafinance.org/',\r\n  ),\r\n  dfd: new Token(\r\n    MAINNET,\r\n    '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\r\n    18,\r\n    'DFD',\r\n    'DefiDollar DAO',\r\n    'https://dusd.finance/',\r\n  ),\r\n  lmt: new Token(\r\n    MAINNET,\r\n    '0x9617857E191354dbEA0b714d78Bc59e57C411087',\r\n    18,\r\n    'LMT',\r\n    'Lympo Market Token',\r\n    'https://lympo.io/lmt/',\r\n  ),\r\n  btt: new Token(\r\n    MAINNET,\r\n    '0x8595F9dA7b868b1822194fAEd312235E43007b49',\r\n    18,\r\n    'BTT',\r\n    'Binance-Peg BitTorrent Token',\r\n    'https://www.bittorrent.com/',\r\n  ),\r\n  trx: new Token(\r\n    MAINNET,\r\n    '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\r\n    18,\r\n    'TRX',\r\n    'TRON Token',\r\n    'https://tron.network/',\r\n  ),\r\n  win: new Token(\r\n    MAINNET,\r\n    '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\r\n    18,\r\n    'WIN',\r\n    'WIN Token',\r\n    'https://winklink.org/',\r\n  ),\r\n  mcoin: new Token(\r\n    MAINNET,\r\n    '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\r\n    18,\r\n    'MCOIN',\r\n    'Wrapped Mirror COIN Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  math: new Token(\r\n    MAINNET,\r\n    '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\r\n    18,\r\n    'MATH',\r\n    'MATH Token',\r\n    'https://mathwallet.org/',\r\n  ),\r\n  kun: new Token(\r\n    MAINNET,\r\n    '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\r\n    18,\r\n    'KUN',\r\n    'QIAN governance token',\r\n    'https://chemix.io/home',\r\n  ),\r\n  qsd: new Token(\r\n    MAINNET,\r\n    '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\r\n    18,\r\n    'QSD',\r\n    'QIAN second generation dollar',\r\n    'https://chemix.io/home',\r\n  ),\r\n  hyfi: new Token(\r\n    MAINNET,\r\n    '0x9a319b959e33369C5eaA494a770117eE3e585318',\r\n    18,\r\n    'HYFI',\r\n    'HYFI Token',\r\n    'https://hyfi.pro/#/',\r\n  ),\r\n  oin: new Token(\r\n    MAINNET,\r\n    '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\r\n    8,\r\n    'OIN',\r\n    'oinfinance Token',\r\n    'https://oin.finance/',\r\n  ),\r\n  doge: new Token(\r\n    MAINNET,\r\n    '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\r\n    8,\r\n    'DOGE',\r\n    'Binance-Peg Dogecoin',\r\n    'https://dogecoin.com/',\r\n  ),\r\n  fine: new Token(\r\n    MAINNET,\r\n    '0x4e6415a5727ea08aAE4580057187923aeC331227',\r\n    18,\r\n    'FINE',\r\n    'Refinable Token',\r\n    'https://refinable.com/',\r\n  ),\r\n  one: new Token(\r\n    MAINNET,\r\n    '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\r\n    18,\r\n    'ONE',\r\n    'BigONE Token',\r\n    'https://www.bigone.com/',\r\n  ),\r\n  pmon: new Token(\r\n    MAINNET,\r\n    '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\r\n    18,\r\n    'PMON',\r\n    'Polkamon Token',\r\n    'https://polkamon.com/',\r\n  ),\r\n  τdoge: new Token(\r\n    MAINNET,\r\n    '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\r\n    8,\r\n    'τDOGE',\r\n    'τDogecoin',\r\n    'https://www.btcst.finance/',\r\n  ),\r\n  btr: new Token(\r\n    MAINNET,\r\n    '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\r\n    18,\r\n    'BTR',\r\n    'Bitrue Token',\r\n    'https://www.bitrue.com/',\r\n  ),\r\n  ubxt: new Token(\r\n    MAINNET,\r\n    '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\r\n    18,\r\n    'UBXT',\r\n    'UpBots Token',\r\n    'https://upbots.com/',\r\n  ),\r\n  wmass: new Token(\r\n    MAINNET,\r\n    '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\r\n    8,\r\n    'WMASS',\r\n    'Wrapped MASS Token',\r\n    'https://massnet.org/en/',\r\n  ),\r\n  rfox: new Token(\r\n    MAINNET,\r\n    '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\r\n    18,\r\n    'RFOX',\r\n    'RFOX Token',\r\n    'https://www.redfoxlabs.io/',\r\n  ),\r\n  xend: new Token(\r\n    MAINNET,\r\n    '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\r\n    18,\r\n    'XEND',\r\n    'XEND Token',\r\n    'https://xend.finance/',\r\n  ),\r\n  cyc: new Token(MAINNET, '0x810EE35443639348aDbbC467b33310d2AB43c168', 18, 'CYC', 'CYC Token', 'https://cyclone.xyz/'),\r\n  chr: new Token(\r\n    MAINNET,\r\n    '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\r\n    6,\r\n    'CHR',\r\n    'Chroma Token',\r\n    'https://chromia.com/',\r\n  ),\r\n  deri: new Token(\r\n    MAINNET,\r\n    '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n    18,\r\n    'DERI',\r\n    'Deri Token',\r\n    'https://deri.finance/#/index',\r\n  ),\r\n  well: new Token(\r\n    MAINNET,\r\n    '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\r\n    18,\r\n    'WELL',\r\n    'BitWell Token',\r\n    'https://www.bitwellex.com/',\r\n  ),\r\n  wex: new Token(\r\n    MAINNET,\r\n    '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\r\n    18,\r\n    'WEX',\r\n    'WaultSwap Token',\r\n    'https://wault.finance/',\r\n  ),\r\n  waultx: new Token(\r\n    MAINNET,\r\n    '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\r\n    18,\r\n    'WAULTx',\r\n    'Wault Token',\r\n    'https://wault.finance/',\r\n  ),\r\n  popen: new Token(\r\n    MAINNET,\r\n    '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\r\n    18,\r\n    'pOPEN',\r\n    'OPEN Governance Token',\r\n    'https://opendao.io/',\r\n  ),\r\n  ez: new Token(\r\n    MAINNET,\r\n    '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\r\n    18,\r\n    'EZ',\r\n    'Easy V2 Token',\r\n    'https://easyfi.network/',\r\n  ),\r\n  vrt: new Token(\r\n    MAINNET,\r\n    '0x5F84ce30DC3cF7909101C69086c50De191895883',\r\n    18,\r\n    'VRT',\r\n    'Venus Reward Token',\r\n    'https://venus.io/',\r\n  ),\r\n  tusd: new Token(\r\n    MAINNET,\r\n    '0x14016E85a25aeb13065688cAFB43044C2ef86784',\r\n    18,\r\n    'TUSD',\r\n    'Binance-Peg TrueUSD Token',\r\n    'https://www.trueusd.com/',\r\n  ),\r\n  mtrg: new Token(\r\n    MAINNET,\r\n    '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\r\n    18,\r\n    'MTRG',\r\n    'Wrapped MTRG Token',\r\n    'https://www.meter.io/',\r\n  ),\r\n  ktn: new Token(\r\n    MAINNET,\r\n    '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\r\n    18,\r\n    'KTN',\r\n    'Kattana Token',\r\n    'https://kattana.io/',\r\n  ),\r\n  qkc: new Token(\r\n    MAINNET,\r\n    '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\r\n    18,\r\n    'QKC',\r\n    'QuarkChain Token',\r\n    'https://quarkchain.io/',\r\n  ),\r\n  bcfx: new Token(\r\n    MAINNET,\r\n    '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\r\n    18,\r\n    'bCFX',\r\n    'BSC Conflux Token',\r\n    'https://www.confluxnetwork.org/',\r\n  ),\r\n  mx: new Token(MAINNET, '0x9F882567A62a5560d147d64871776EeA72Df41D3', 18, 'MX', 'MX Token', 'https://www.mxc.com/'),\r\n  ata: new Token(\r\n    MAINNET,\r\n    '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\r\n    18,\r\n    'ATA',\r\n    'Automata Token',\r\n    'https://www.ata.network/',\r\n  ),\r\n  mbox: new Token(\r\n    MAINNET,\r\n    '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\r\n    18,\r\n    'MBOX',\r\n    'Mobox Token',\r\n    'https://www.mobox.io/#/',\r\n  ),\r\n  boring: new Token(\r\n    MAINNET,\r\n    '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\r\n    18,\r\n    'BORING',\r\n    'BoringDAO Token',\r\n    'https://www.boringdao.com/',\r\n  ),\r\n  marsh: new Token(\r\n    MAINNET,\r\n    '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\r\n    18,\r\n    'MARSH',\r\n    'Unmarshal Token',\r\n    'https://unmarshal.io/',\r\n  ),\r\n  ampl: new Token(\r\n    MAINNET,\r\n    '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\r\n    9,\r\n    'AMPL',\r\n    'AMPL Token',\r\n    'https://www.ampleforth.org/',\r\n  ),\r\n  o3: new Token(\r\n    MAINNET,\r\n    '0xEe9801669C6138E84bD50dEB500827b776777d28',\r\n    18,\r\n    'O3',\r\n    'O3 Swap Token',\r\n    'https://o3swap.com/',\r\n  ),\r\n  hai: new Token(MAINNET, '0xaA9E582e5751d703F85912903bacADdFed26484C', 8, 'HAI', 'Hacken Token', 'https://hacken.io/'),\r\n  htb: new Token(\r\n    MAINNET,\r\n    '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\r\n    18,\r\n    'HTB',\r\n    'Hotbit Token',\r\n    'https://www.hotbit.io/',\r\n  ),\r\n  woo: new Token(\r\n    MAINNET,\r\n    '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\r\n    18,\r\n    'WOO',\r\n    'Wootrade Network Token',\r\n    'https://woo.network/',\r\n  ),\r\n  $dg: new Token(\r\n    MAINNET,\r\n    '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\r\n    18,\r\n    '$DG',\r\n    'Decentral Games Token',\r\n    'https://decentral.games/',\r\n  ),\r\n  safemoon: new Token(\r\n    MAINNET,\r\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\r\n    9,\r\n    'SAFEMOON',\r\n    'Safemoon Token',\r\n    'https://safemoon.net/',\r\n  ),\r\n  axs: new Token(\r\n    MAINNET,\r\n    '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\r\n    18,\r\n    'AXS',\r\n    'Binance-Pegged Axie Infinity Shard',\r\n    'https://axieinfinity.com/',\r\n  ),\r\n  c98: new Token(\r\n    MAINNET,\r\n    '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6',\r\n    18,\r\n    'c98',\r\n    'Coin98 Token',\r\n    'https://coin98.com/',\r\n  ),\r\n  pots: new Token(\r\n    MAINNET,\r\n    '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\r\n    18,\r\n    'POTS',\r\n    'Moonpot Token',\r\n    'https://moonpot.com/',\r\n  ),\r\n  gnt: new Token(\r\n    MAINNET,\r\n    '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\r\n    18,\r\n    'GNT',\r\n    'GreenTrust Token',\r\n    'https://www.greentrusttoken.com/',\r\n  ),\r\n  rusd: new Token(\r\n    MAINNET,\r\n    '0x07663837218A003e66310a01596af4bf4e44623D',\r\n    18,\r\n    'rUSD',\r\n    'rUSD Token',\r\n    'https://appv2.rampdefi.com/#/',\r\n  ),\r\n  bp: new Token(\r\n    MAINNET,\r\n    '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\r\n    18,\r\n    'BP',\r\n    'BunnyPark Token',\r\n    'https://www.bunnypark.com/',\r\n  ),\r\n  sfund: new Token(\r\n    MAINNET,\r\n    '0x477bC8d23c634C154061869478bce96BE6045D12',\r\n    18,\r\n    'SFUND',\r\n    'Seedify Fund Token',\r\n    'https://seedify.fund/',\r\n  ),\r\n  naos: new Token(\r\n    MAINNET,\r\n    '0x758d08864fB6cCE3062667225ca10b8F00496cc2',\r\n    18,\r\n    'NAOS',\r\n    'NAOSToken',\r\n    'https://naos.finance/',\r\n  ),\r\n}\r\n\r\nexport const testnetTokens = {\r\n  wbnb: new Token(\r\n    TESTNET,\r\n    '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\r\n    18,\r\n    'WBNB',\r\n    'Wrapped BNB',\r\n    'https://www.binance.com/',\r\n  ),\r\n  cake: new Token(\r\n    TESTNET,\r\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\r\n    18,\r\n    'CAKE',\r\n    'PancakeSwap Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  busd: new Token(\r\n    TESTNET,\r\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\r\n    18,\r\n    'BUSD',\r\n    'Binance USD',\r\n    'https://www.paxos.com/busd/',\r\n  ),\r\n  syrup: new Token(\r\n    TESTNET,\r\n    '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\r\n    18,\r\n    'SYRUP',\r\n    'SyrupBar Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  bake: new Token(\r\n    TESTNET,\r\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    18,\r\n    'BAKE',\r\n    'Bakeryswap Token',\r\n    'https://www.bakeryswap.org/',\r\n  ),\r\n}\r\n\r\nconst tokens = (): TokenList => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n\r\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\r\n  if (parseInt(chainId, 10) === ChainId.TESTNET) {\r\n    return Object.keys(mainnetTokens).reduce((accum, key) => {\r\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\r\n    }, {})\r\n  }\r\n\r\n  return mainnetTokens\r\n}\r\n\r\nexport const serializeTokens = (): SerializedTokenList => {\r\n  const unserializedTokens = tokens()\r\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\r\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\r\n  }, {})\r\n\r\n  return serializedTokens\r\n}\r\n\r\nexport default tokens()\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","export default {\r\n  masterChef: {\r\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n  },\r\n  sousChef: {\r\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\r\n  },\r\n  lotteryV2: {\r\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\r\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\r\n  },\r\n  multiCall: {\r\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\r\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\r\n  },\r\n  pancakeProfile: {\r\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\r\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\r\n  },\r\n  pancakeRabbits: {\r\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n  },\r\n  bunnyFactory: {\r\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\r\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\r\n  },\r\n  claimRefund: {\r\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\r\n    97: '',\r\n  },\r\n  pointCenterIfo: {\r\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\r\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\r\n  },\r\n  bunnySpecial: {\r\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\r\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\r\n  },\r\n  tradingCompetition: {\r\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\r\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\r\n  },\r\n  easterNft: {\r\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\r\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\r\n  },\r\n  cakeVault: {\r\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\r\n    97: '',\r\n  },\r\n  predictions: {\r\n    56: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\r\n    97: '',\r\n  },\r\n  chainlinkOracle: {\r\n    56: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\r\n    97: '',\r\n  },\r\n  bunnySpecialCakeVault: {\r\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\r\n    97: '',\r\n  },\r\n  bunnySpecialPrediction: {\r\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\r\n    97: '',\r\n  },\r\n  bunnySpecialLottery: {\r\n    56: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\r\n    97: '0x382cB497110F398F0f152cae82821476AE51c9cF',\r\n  },\r\n  farmAuction: {\r\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\r\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\r\n  },\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport addresses from 'config/constants/contracts'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\r\n}\r\n\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.multiCall)\r\n}\r\nexport const getLotteryV2Address = () => {\r\n  return getAddress(addresses.lotteryV2)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\nexport const getTradingCompetitionAddress = () => {\r\n  return getAddress(addresses.tradingCompetition)\r\n}\r\nexport const getEasterNftAddress = () => {\r\n  return getAddress(addresses.easterNft)\r\n}\r\nexport const getCakeVaultAddress = () => {\r\n  return getAddress(addresses.cakeVault)\r\n}\r\nexport const getPredictionsAddress = () => {\r\n  return getAddress(addresses.predictions)\r\n}\r\nexport const getChainlinkOracleAddress = () => {\r\n  return getAddress(addresses.chainlinkOracle)\r\n}\r\nexport const getBunnySpecialCakeVaultAddress = () => {\r\n  return getAddress(addresses.bunnySpecialCakeVault)\r\n}\r\nexport const getBunnySpecialPredictionAddress = () => {\r\n  return getAddress(addresses.bunnySpecialPrediction)\r\n}\r\nexport const getBunnySpecialLotteryAddress = () => {\r\n  return getAddress(addresses.bunnySpecialLottery)\r\n}\r\nexport const getFarmAuctionAddress = () => {\r\n  return getAddress(addresses.farmAuction)\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { getAddress } from '@ethersproject/address'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\r\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\r\nimport { ROUTER_ADDRESS } from '../config/constants'\r\nimport { BASE_BSC_SCAN_URLS } from '../config'\r\nimport { TokenAddressMap } from '../state/lists/hooks'\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value)\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport function getBscScanLink(\r\n  data: string | number,\r\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\r\n  chainId: ChainId = ChainId.MAINNET,\r\n): string {\r\n  switch (type) {\r\n    case 'transaction': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\r\n    }\r\n    case 'token': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\r\n    }\r\n    case 'block': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\r\n    }\r\n    case 'countdown': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\r\n    }\r\n    default: {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\r\n    }\r\n  }\r\n}\r\n\r\n// add 10%\r\nexport function calculateGasMargin(value: BigNumber): BigNumber {\r\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\r\n}\r\n\r\n// converts a basis points value to a sdk percent\r\nexport function basisPointsToPercent(num: number): Percent {\r\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\r\n}\r\n\r\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\r\n  if (slippage < 0 || slippage > 10000) {\r\n    throw Error(`Unexpected slippage value: ${slippage}`)\r\n  }\r\n  return [\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\r\n  ]\r\n}\r\n\r\n// account is not optional\r\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked()\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\r\n  return account ? getSigner(library, account) : library\r\n}\r\n\r\n// account is optional\r\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n\r\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\r\n}\r\n\r\n// account is optional\r\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\r\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n}\r\n\r\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\r\n  if (currency === ETHER) return true\r\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\nexport const BASE_BSC_SCAN_URLS = {\r\n  [ChainId.MAINNET]: 'https://bscscan.com',\r\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\r\n}\r\n\r\n// CAKE_PER_BLOCK details\r\n// 40 CAKE is minted per block\r\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\r\n// 10 CAKE per block goes to CAKE syrup pool\r\n// 9 CAKE per block goes to Yield farms and lottery\r\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\r\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\r\nexport const CAKE_PER_BLOCK = new BigNumber(40)\r\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\r\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\r\nexport const BASE_URL = 'https://pancakeswap.finance'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\r\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\r\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\r\nexport const DEFAULT_GAS_LIMIT = 200000\r\nexport const AUCTION_BIDDERS_TO_FETCH = 500\r\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\r\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\r\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\r\n","import { ChainId, JSBI, Percent, Token } from '@pancakeswap/sdk'\r\nimport { mainnetTokens, testnetTokens } from './tokens'\r\n\r\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\r\n\r\n// a list of tokens by chain\r\ntype ChainTokenList = {\r\n  readonly [chainId in ChainId]: Token[]\r\n}\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  [ChainId.MAINNET]: [\r\n    mainnetTokens.wbnb,\r\n    mainnetTokens.cake,\r\n    mainnetTokens.busd,\r\n    mainnetTokens.usdt,\r\n    mainnetTokens.btcb,\r\n    mainnetTokens.ust,\r\n    mainnetTokens.eth,\r\n    mainnetTokens.usdc,\r\n  ],\r\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\r\n}\r\n\r\n/**\r\n * Addittional bases for specific tokens\r\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\r\n */\r\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n// used for display in the default list when adding liquidity\r\nexport const SUGGESTED_BASES: ChainTokenList = {\r\n  [ChainId.MAINNET]: [mainnetTokens.busd, mainnetTokens.cake, mainnetTokens.btcb],\r\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\r\n}\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  [ChainId.MAINNET]: [mainnetTokens.wbnb, mainnetTokens.dai, mainnetTokens.busd, mainnetTokens.usdt],\r\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\r\n}\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [mainnetTokens.cake, mainnetTokens.wbnb],\r\n    [mainnetTokens.busd, mainnetTokens.usdt],\r\n    [mainnetTokens.dai, mainnetTokens.usdt],\r\n  ],\r\n}\r\n\r\nexport const NetworkContextName = 'NETWORK'\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\r\n\r\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\r\n\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\r\nexport const BIPS_BASE = JSBI.BigInt(10000)\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\r\n\r\n// used to ensure the user doesn't send so much BNB so they end up with <.01\r\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\r\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\r\n\r\nexport const ZERO_PERCENT = new Percent('0')\r\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\r\n\r\n// SDN OFAC addresses\r\nexport const BLOCKED_ADDRESSES: string[] = [\r\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\r\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\r\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\r\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\r\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\r\n]\r\n\r\nexport { default as farmsConfig } from './farms'\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { SerializedToken } from 'config/constants/types'\r\n\r\nexport interface SerializedPair {\r\n  token0: SerializedToken\r\n  token1: SerializedToken\r\n}\r\n\r\nexport enum FarmStakedOnly {\r\n  ON_FINISHED = 'onFinished',\r\n  TRUE = 'true',\r\n  FALSE = 'false',\r\n}\r\n\r\nexport enum ViewMode {\r\n  TABLE = 'TABLE',\r\n  CARD = 'CARD',\r\n}\r\n\r\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\r\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\r\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\r\n  'user/updateUserSlippageTolerance',\r\n)\r\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\r\nexport const removeSerializedPair =\r\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\r\n\r\nexport const muteAudio = createAction<void>('user/muteAudio')\r\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\r\nexport const toggleTheme = createAction<void>('user/toggleTheme')\r\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\r\n  'user/updateUserFarmStakedOnly',\r\n)\r\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\r\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\r\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\r\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\r\n  'user/updateUserPredictionAcceptedRisk',\r\n)\r\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\r\n  'user/updateUserPredictionChartDisclaimerShow',\r\n)\r\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\r\n  'user/updateUserExpertModeAcknowledgementShow',\r\n)\r\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\r\n  'user/updateUserUsernameVisibility',\r\n)\r\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\r\n\r\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\r\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\r\n","import { ethers } from 'ethers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport tokens from 'config/constants/tokens'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getPancakeProfileAddress,\r\n  getPancakeRabbitsAddress,\r\n  getBunnyFactoryAddress,\r\n  getBunnySpecialAddress,\r\n  getLotteryV2Address,\r\n  getMasterChefAddress,\r\n  getPointCenterIfoAddress,\r\n  getClaimRefundAddress,\r\n  getTradingCompetitionAddress,\r\n  getEasterNftAddress,\r\n  getCakeVaultAddress,\r\n  getPredictionsAddress,\r\n  getChainlinkOracleAddress,\r\n  getMulticallAddress,\r\n  getBunnySpecialCakeVaultAddress,\r\n  getBunnySpecialPredictionAddress,\r\n  getBunnySpecialLotteryAddress,\r\n  getFarmAuctionAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\r\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport erc721Abi from 'config/abi/erc721.json'\r\nimport lpTokenAbi from 'config/abi/lpToken.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport ifoV1Abi from 'config/abi/ifoV1.json'\r\nimport ifoV2Abi from 'config/abi/ifoV2.json'\r\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\r\nimport easterNftAbi from 'config/abi/easterNft.json'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\r\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\r\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\r\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\r\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\r\n\r\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const signerOrProvider = signer ?? simpleRpcProvider\r\n  return new ethers.Contract(address, abi, signerOrProvider)\r\n}\r\n\r\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bep20Abi, address, signer)\r\n}\r\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(erc721Abi, address, signer)\r\n}\r\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(lpTokenAbi, address, signer)\r\n}\r\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ifoV1Abi, address, signer)\r\n}\r\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ifoV2Abi, address, signer)\r\n}\r\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  return getContract(abi, getAddress(config.contractAddress), signer)\r\n}\r\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\r\n}\r\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\r\n}\r\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(cakeAbi, tokens.cake.address, signer)\r\n}\r\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\r\n}\r\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\r\n}\r\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\r\n}\r\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\r\n}\r\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\r\n}\r\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(masterChef, getMasterChefAddress(), signer)\r\n}\r\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\r\n}\r\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\r\n}\r\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\r\n}\r\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\r\n}\r\n\r\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\r\n}\r\n\r\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\r\n}\r\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\r\n}\r\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\r\n}\r\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\r\n}\r\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\r\n}\r\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value: number\r\n  decimals?: number\r\n  unit?: string\r\n  isDisabled?: boolean\r\n  prefix?: string\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({\r\n  value,\r\n  color = 'text',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit,\r\n  prefix,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\r\n      <CountUp\r\n        start={previousValue.current}\r\n        end={value}\r\n        prefix={prefix}\r\n        suffix={unit}\r\n        decimals={decimals}\r\n        duration={1}\r\n        separator=\",\"\r\n      />\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoV1Contract,\r\n  getIfoV2Contract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n  getTradingCompetitionContract,\r\n  getEasterNftContract,\r\n  getErc721Contract,\r\n  getCakeVaultContract,\r\n  getPredictionsContract,\r\n  getChainlinkOracleContract,\r\n  getSouschefV2Contract,\r\n  getLotteryV2Contract,\r\n  getBunnySpecialCakeVaultContract,\r\n  getBunnySpecialPredictionContract,\r\n  getFarmAuctionContract,\r\n  getBunnySpecialLotteryContract,\r\n} from 'utils/contractHelpers'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\n// Imports below migrated from Exchange useContract.ts\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { ChainId, WETH } from '@pancakeswap/sdk'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\r\nimport ENS_ABI from '../config/abi/ens-registrar.json'\r\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\r\nimport ERC20_ABI from '../config/abi/erc20.json'\r\nimport WETH_ABI from '../config/abi/weth.json'\r\nimport multiCallAbi from '../config/abi/Multicall.json'\r\nimport { getContract } from '../utils'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoV1Contract = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useIfoV2Contract = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\n/**\r\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\r\n */\r\nexport const useERC721 = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useLotteryV2Contract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\r\n}\r\n\r\nexport const useSousChefV2 = (id) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useTradingCompetitionContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useEasterNftContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useCakeVaultContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const usePredictionsContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useChainlinkOracleContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSpecialBunnyCakeVaultContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSpecialBunnyPredictionContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnySpecialLotteryContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useFarmAuctionContract = () => {\r\n  const { account, library } = useActiveWeb3React()\r\n  // This hook is slightly different from others\r\n  // Calls were failing if unconnected user goes to farm auction page\r\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\r\n  // However, this fix is not ideal, it currently has following behavior:\r\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\r\n  // - If you go directly to Farm Auction page\r\n  //   - as unconnected user you don't see any console errors\r\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\r\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\r\n  //\r\n  // Similar behavior was also noticed on Trading Competition page.\r\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\r\n}\r\n\r\n// Code below migrated from Exchange useContract.ts\r\n\r\n// returns null on errors\r\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\r\n  const { library, account } = useActiveWeb3React()\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error)\r\n      return null\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account])\r\n}\r\n\r\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  let address: string | undefined\r\n  if (chainId) {\r\n    // eslint-disable-next-line default-case\r\n    switch (chainId) {\r\n      case ChainId.MAINNET:\r\n      case ChainId.TESTNET:\r\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n        break\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  return useContract(getMulticallAddress(), multiCallAbi, false)\r\n}\r\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\r\nimport flatMap from 'lodash/flatMap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport { AppDispatch, AppState } from '../../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  FarmStakedOnly,\r\n  muteAudio,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  toggleTheme as toggleThemeAction,\r\n  unmuteAudio,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserFarmStakedOnly,\r\n  updateUserSingleHopOnly,\r\n  updateUserSlippageTolerance,\r\n  updateGasPrice,\r\n  addWatchlistToken,\r\n  addWatchlistPool,\r\n  updateUserPoolStakedOnly,\r\n  updateUserPoolsViewMode,\r\n  ViewMode,\r\n  updateUserFarmsViewMode,\r\n  updateUserPredictionChartDisclaimerShow,\r\n  updateUserPredictionAcceptedRisk,\r\n  updateUserUsernameVisibility,\r\n  updateUserExpertModeAcknowledgementShow,\r\n} from '../actions'\r\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\r\n\r\nexport function useAudioModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n\r\n  const toggleSetAudioMode = useCallback(() => {\r\n    if (audioPlay) {\r\n      dispatch(muteAudio())\r\n    } else {\r\n      dispatch(unmuteAudio())\r\n    }\r\n  }, [audioPlay, dispatch])\r\n\r\n  return [audioPlay, toggleSetAudioMode]\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const expertMode = useIsExpertMode()\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\r\n  }, [expertMode, dispatch])\r\n\r\n  return [expertMode, toggleSetExpertMode]\r\n}\r\n\r\nexport function useThemeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    dispatch(toggleThemeAction())\r\n  }, [dispatch])\r\n\r\n  return [isDark, toggleTheme]\r\n}\r\n\r\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\r\n    (state) => state.user.userSingleHopOnly,\r\n  )\r\n\r\n  const setSingleHopOnly = useCallback(\r\n    (newSingleHopOnly: boolean) => {\r\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [singleHopOnly, setSingleHopOnly]\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance\r\n  })\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (slippage: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance]\r\n}\r\n\r\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\r\n    return state.user.userFarmStakedOnly\r\n  })\r\n\r\n  const setUserFarmStakedOnly = useCallback(\r\n    (stakedOnly: boolean) => {\r\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\r\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [\r\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\r\n    setUserFarmStakedOnly,\r\n  ]\r\n}\r\n\r\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\r\n    return state.user.userPoolStakedOnly\r\n  })\r\n\r\n  const setUserPoolStakedOnly = useCallback(\r\n    (stakedOnly: boolean) => {\r\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\r\n}\r\n\r\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\r\n    return state.user.userPoolsViewMode\r\n  })\r\n\r\n  const setUserPoolsViewMode = useCallback(\r\n    (viewMode: ViewMode) => {\r\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userPoolsViewMode, setUserPoolsViewMode]\r\n}\r\n\r\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\r\n    return state.user.userFarmsViewMode\r\n  })\r\n\r\n  const setUserFarmsViewMode = useCallback(\r\n    (viewMode: ViewMode) => {\r\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userFarmsViewMode, setUserFarmsViewMode]\r\n}\r\n\r\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\r\n    return state.user.userPredictionAcceptedRisk\r\n  })\r\n\r\n  const setUserPredictionAcceptedRisk = useCallback(\r\n    (acceptedRisk: boolean) => {\r\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\r\n}\r\n\r\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userPredictionChartDisclaimerShow = useSelector<\r\n    AppState,\r\n    AppState['user']['userPredictionChartDisclaimerShow']\r\n  >((state) => {\r\n    return state.user.userPredictionChartDisclaimerShow\r\n  })\r\n\r\n  const setPredictionUserChartDisclaimerShow = useCallback(\r\n    (showDisclaimer: boolean) => {\r\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\r\n}\r\n\r\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userExpertModeAcknowledgementShow = useSelector<\r\n    AppState,\r\n    AppState['user']['userExpertModeAcknowledgementShow']\r\n  >((state) => {\r\n    return state.user.userExpertModeAcknowledgementShow\r\n  })\r\n\r\n  const setUserExpertModeAcknowledgementShow = useCallback(\r\n    (showAcknowledgement: boolean) => {\r\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\r\n}\r\n\r\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\r\n    return state.user.userUsernameVisibility\r\n  })\r\n\r\n  const setUserUsernameVisibility = useCallback(\r\n    (usernameVisibility: boolean) => {\r\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userUsernameVisibility, setUserUsernameVisibility]\r\n}\r\n\r\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline\r\n  })\r\n\r\n  const setUserDeadline = useCallback(\r\n    (deadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userDeadline, setUserDeadline]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useGasPrice(): string {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userGasPrice = useGasPrice()\r\n\r\n  const setGasPrice = useCallback(\r\n    (gasPrice: string) => {\r\n      dispatch(updateGasPrice({ gasPrice }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userGasPrice, setGasPrice]\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress]\r\n            // for each token on the current chain,\r\n            return (\r\n              // loop though all bases on the current chain\r\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                  if (base.address === token.address) {\r\n                    return null\r\n                  }\r\n                  return [base, token]\r\n                })\r\n                .filter((p): p is [Token, Token] => p !== null)\r\n            )\r\n          })\r\n        : [],\r\n    [tokens, chainId],\r\n  )\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return []\r\n    const forChain = savedSerializedPairs[chainId]\r\n    if (!forChain) return []\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\r\n    })\r\n  }, [savedSerializedPairs, chainId])\r\n\r\n  const combinedList = useMemo(\r\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\r\n    [generatedPairs, pinnedPairs, userPairs],\r\n  )\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB)\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\r\n      if (memo[key]) return memo\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return memo\r\n    }, {})\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key])\r\n  }, [combinedList])\r\n}\r\n\r\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\r\n  const updatedSavedTokens = useCallback(\r\n    (address: string) => {\r\n      dispatch(addWatchlistToken({ address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n  return [savedTokens, updatedSavedTokens]\r\n}\r\n\r\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\r\n  const updateSavedPools = useCallback(\r\n    (address: string) => {\r\n      dispatch(addWatchlistPool({ address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n  return [savedPools, updateSavedPools]\r\n}\r\n","import { ethers } from 'ethers'\r\nimport { getMulticallContract } from 'utils/contractHelpers'\r\nimport { MultiCallResponse } from './types'\r\n\r\nexport interface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (example: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\ninterface MulticallOptions {\r\n  requireSuccess?: boolean\r\n}\r\n\r\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\r\n  try {\r\n    const multi = getMulticallContract()\r\n    const itf = new ethers.utils.Interface(abi)\r\n\r\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n    const { returnData } = await multi.aggregate(calldata)\r\n\r\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n    return res\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\n/**\r\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\r\n *\r\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\r\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\r\n */\r\nexport const multicallv2 = async <T = any>(\r\n  abi: any[],\r\n  calls: Call[],\r\n  options: MulticallOptions = { requireSuccess: true },\r\n): Promise<MultiCallResponse<T>> => {\r\n  const { requireSuccess } = options\r\n  const multi = getMulticallContract()\r\n  const itf = new ethers.utils.Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\r\n  const res = returnData.map((call, i) => {\r\n    const [result, data] = call\r\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\r\n\r\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\r\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\r\n}\r\n\r\nexport function wrappedCurrencyAmount(\r\n  currencyAmount: CurrencyAmount | undefined,\r\n  chainId: ChainId | undefined,\r\n): TokenAmount | undefined {\r\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\r\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\r\n}\r\n\r\nexport function unwrappedToken(token: Token): Currency {\r\n  if (token.equals(WETH[token.chainId])) return ETHER\r\n  return token\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getApy } from 'utils/compoundApyHelpers'\r\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\r\n\r\nexport const convertSharesToCake = (\r\n  shares: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\r\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\r\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\r\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\r\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\r\n}\r\n\r\nexport const convertCakeToShares = (\r\n  cake: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\r\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\r\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\r\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\r\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\r\n}\r\n\r\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\r\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\r\n\r\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\r\n  const { isAutoVault, apr } = pool\r\n\r\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\r\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\r\n\r\n  if (isAutoVault) {\r\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\r\n    return { apr: autoApr, autoCompoundFrequency }\r\n  }\r\n  return { apr, autoCompoundFrequency }\r\n}\r\n\r\nexport const getCakeVaultEarnings = (\r\n  account: string,\r\n  cakeAtLastUserAction: BigNumber,\r\n  userShares: BigNumber,\r\n  pricePerFullShare: BigNumber,\r\n  earningTokenPrice: number,\r\n) => {\r\n  const hasAutoEarnings =\r\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\r\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\r\n\r\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\r\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\r\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\r\n}\r\n\r\nexport const getPoolBlockInfo = (pool: DeserializedPool, currentBlock: number) => {\r\n  const { startBlock, endBlock, isFinished } = pool\r\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\r\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\r\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\r\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\r\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\r\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\r\n}\r\n","import { Currency } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrencyLogo from './CurrencyLogo'\r\n\r\nconst Wrapper = styled.div<{ margin: boolean }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ margin }) => margin && '4px'};\r\n`\r\n\r\ninterface DoubleCurrencyLogoProps {\r\n  margin?: boolean\r\n  size?: number\r\n  currency0?: Currency\r\n  currency1?: Currency\r\n}\r\n\r\nexport default function DoubleCurrencyLogo({\r\n  currency0,\r\n  currency1,\r\n  size = 20,\r\n  margin = false,\r\n}: DoubleCurrencyLogoProps) {\r\n  return (\r\n    <Wrapper margin={margin}>\r\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\r\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport Logo from './Logo'\r\n\r\nconst StyledListLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function ListLogo({\r\n  logoURI,\r\n  style,\r\n  size = '24px',\r\n  alt,\r\n}: {\r\n  logoURI: string\r\n  size?: string\r\n  style?: React.CSSProperties\r\n  alt?: string\r\n}) {\r\n  const srcs: string[] = useHttpLocations(logoURI)\r\n\r\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { parseBytes32String } from '@ethersproject/strings'\r\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { arrayify } from 'ethers/lib/utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport {\r\n  TokenAddressMap,\r\n  useDefaultTokenList,\r\n  useUnsupportedTokenList,\r\n  useCombinedActiveList,\r\n  useCombinedInactiveList,\r\n} from '../state/lists/hooks'\r\n\r\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\r\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\r\nimport { isAddress } from '../utils'\r\n\r\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\r\nimport { filterTokens } from '../components/SearchModal/filtering'\r\n\r\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\r\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\r\n  const { chainId } = useActiveWeb3React()\r\n  const userAddedTokens = useUserAddedTokens()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return {}\r\n\r\n    // reduce to just tokens\r\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\r\n      newMap[address] = tokenMap[chainId][address].token\r\n      return newMap\r\n    }, {})\r\n\r\n    if (includeUserAdded) {\r\n      return (\r\n        userAddedTokens\r\n          // reduce into all ALL_TOKENS filtered by the current chain\r\n          .reduce<{ [address: string]: Token }>(\r\n            (tokenMap_, token) => {\r\n              tokenMap_[token.address] = token\r\n              return tokenMap_\r\n            },\r\n            // must make a copy because reduce modifies the map, and we do not\r\n            // want to make a copy in every iteration\r\n            { ...mapWithoutUrls },\r\n          )\r\n      )\r\n    }\r\n\r\n    return mapWithoutUrls\r\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\r\n}\r\n\r\nexport function useDefaultTokens(): { [address: string]: Token } {\r\n  const defaultList = useDefaultTokenList()\r\n  return useTokensFromMap(defaultList, false)\r\n}\r\n\r\nexport function useAllTokens(): { [address: string]: Token } {\r\n  const allTokens = useCombinedActiveList()\r\n  return useTokensFromMap(allTokens, true)\r\n}\r\n\r\nexport function useAllInactiveTokens(): { [address: string]: Token } {\r\n  // get inactive tokens\r\n  const inactiveTokensMap = useCombinedInactiveList()\r\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\r\n\r\n  // filter out any token that are on active list\r\n  const activeTokensAddresses = Object.keys(useAllTokens())\r\n  const filteredInactive = activeTokensAddresses\r\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\r\n        if (!activeTokensAddresses.includes(address)) {\r\n          newMap[address] = inactiveTokens[address]\r\n        }\r\n        return newMap\r\n      }, {})\r\n    : inactiveTokens\r\n\r\n  return filteredInactive\r\n}\r\n\r\nexport function useUnsupportedTokens(): { [address: string]: Token } {\r\n  const unsupportedTokensMap = useUnsupportedTokenList()\r\n  return useTokensFromMap(unsupportedTokensMap, false)\r\n}\r\n\r\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\r\n  const activeTokens = useAllTokens()\r\n\r\n  if (!activeTokens || !token) {\r\n    return false\r\n  }\r\n\r\n  return !!activeTokens[token.address]\r\n}\r\n\r\n// used to detect extra search results\r\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const inactiveTokens = useAllInactiveTokens()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId || searchQuery === '') {\r\n      return undefined\r\n    }\r\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\r\n    return tokens\r\n  }, [chainId, inactiveTokens, searchQuery])\r\n}\r\n\r\n// Check if currency is included in custom list from user storage\r\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\r\n  const userAddedTokens = useUserAddedTokens()\r\n\r\n  if (!currency) {\r\n    return false\r\n  }\r\n\r\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\r\n}\r\n\r\n// parse a name or symbol from a token response\r\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\r\n\r\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\r\n  return str && str.length > 0\r\n    ? str\r\n    : // need to check for proper bytes string and valid terminator\r\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\r\n    ? parseBytes32String(bytes32)\r\n    : defaultValue\r\n}\r\n\r\n// undefined if invalid or does not exist\r\n// null if loading\r\n// otherwise returns the token\r\nexport function useToken(tokenAddress?: string): Token | undefined | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  const address = isAddress(tokenAddress)\r\n\r\n  const tokenContract = useTokenContract(address || undefined, false)\r\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\r\n  const token: Token | undefined = address ? tokens[address] : undefined\r\n\r\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\r\n  const tokenNameBytes32 = useSingleCallResult(\r\n    token ? undefined : tokenContractBytes32,\r\n    'name',\r\n    undefined,\r\n    NEVER_RELOAD,\r\n  )\r\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\r\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\r\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\r\n\r\n  return useMemo(() => {\r\n    if (token) return token\r\n    if (!chainId || !address) return undefined\r\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\r\n    if (decimals.result) {\r\n      return new Token(\r\n        chainId,\r\n        address,\r\n        decimals.result[0],\r\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\r\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\r\n      )\r\n    }\r\n    return undefined\r\n  }, [\r\n    address,\r\n    chainId,\r\n    decimals.loading,\r\n    decimals.result,\r\n    symbol.loading,\r\n    symbol.result,\r\n    symbolBytes32.result,\r\n    token,\r\n    tokenName.loading,\r\n    tokenName.result,\r\n    tokenNameBytes32.result,\r\n  ])\r\n}\r\n\r\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\r\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\r\n  const token = useToken(isBNB ? undefined : currencyId)\r\n  return isBNB ? ETHER : token\r\n}\r\n","import { Token } from '@pancakeswap/sdk'\r\nimport { SerializedToken } from 'config/constants/types'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\n\r\nexport function serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n    projectLink: token.projectLink,\r\n  }\r\n}\r\n\r\nexport function deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name,\r\n    serializedToken.projectLink,\r\n  )\r\n}\r\n\r\nexport enum GAS_PRICE {\r\n  default = '5',\r\n  fast = '6',\r\n  instant = '7',\r\n  testnet = '10',\r\n}\r\n\r\nexport const GAS_PRICE_GWEI = {\r\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\r\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\r\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\r\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\r\n}\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions'\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  )\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean\r\n  readonly data: string | undefined\r\n  readonly blockNumber: number | undefined\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n}\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults,\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? [],\r\n      ),\r\n    [calls],\r\n  )\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\r\n    if (!chainId || callKeys.length === 0) return undefined\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    const calls = callKeys.map((key) => parseCallKey(key))\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      }),\r\n    )\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        }),\r\n      )\r\n    }\r\n  }, [chainId, dispatch, options, serializedCallKeys])\r\n\r\n  return useMemo(\r\n    () =>\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)]\r\n        let data\r\n        if (result?.data && result?.data !== '0x') {\r\n          // eslint-disable-next-line prefer-destructuring\r\n          data = result.data\r\n        }\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber }\r\n      }),\r\n    [callResults, calls, chainId],\r\n  )\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE\r\n  const { valid, data, blockNumber } = callResult\r\n  if (!valid) return INVALID_CALL_STATE\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\r\n  const success = data && data.length > 2\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\r\n  let result: Result | undefined\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data)\r\n    } catch (error) {\r\n      console.debug('Result data parsing failed', fragment, data)\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result,\r\n    error: !success,\r\n  }\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n            return {\r\n              address: contract.address,\r\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n            }\r\n          })\r\n        : [],\r\n    [callInputs, contract, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\r\n  }, [fragment, contract, results, currentBlock])\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment],\r\n  )\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n            return address && callData\r\n              ? {\r\n                  address,\r\n                  callData,\r\n                }\r\n              : undefined\r\n          })\r\n        : [],\r\n    [addresses, callData, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\r\n  }, [fragment, results, contractInterface, currentBlock])\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n          {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          },\r\n        ]\r\n      : []\r\n  }, [contract, fragment, inputs])\r\n\r\n  const result = useCallsData(calls, options)[0]\r\n  const { currentBlock } = useBlock()\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, currentBlock)\r\n  }, [result, contract, fragment, currentBlock])\r\n}\r\n","import { ThunkAction } from 'redux-thunk'\r\nimport { AnyAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport {\r\n  CampaignType,\r\n  SerializedFarmConfig,\r\n  LotteryStatus,\r\n  LotteryTicket,\r\n  DeserializedPoolConfig,\r\n  SerializedPoolConfig,\r\n  Team,\r\n  TranslatableText,\r\n  DeserializedFarmConfig,\r\n} from 'config/constants/types'\r\nimport { Nft } from 'config/constants/nfts/types'\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\r\n\r\nexport interface BigNumberToJson {\r\n  type: 'BigNumber'\r\n  hex: string\r\n}\r\n\r\nexport type SerializedBigNumber = string\r\n\r\ninterface SerializedFarmUserData {\r\n  allowance: string\r\n  tokenBalance: string\r\n  stakedBalance: string\r\n  earnings: string\r\n}\r\n\r\nexport interface DeserializedFarmUserData {\r\n  allowance: BigNumber\r\n  tokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  earnings: BigNumber\r\n}\r\n\r\nexport interface SerializedFarm extends SerializedFarmConfig {\r\n  tokenPriceBusd?: string\r\n  quoteTokenPriceBusd?: string\r\n  tokenAmountTotal?: SerializedBigNumber\r\n  lpTotalInQuoteToken?: SerializedBigNumber\r\n  lpTotalSupply?: SerializedBigNumber\r\n  tokenPriceVsQuote?: SerializedBigNumber\r\n  poolWeight?: SerializedBigNumber\r\n  userData?: SerializedFarmUserData\r\n}\r\n\r\nexport interface DeserializedFarm extends DeserializedFarmConfig {\r\n  tokenPriceBusd?: string\r\n  quoteTokenPriceBusd?: string\r\n  tokenAmountTotal?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  lpTotalSupply?: BigNumber\r\n  tokenPriceVsQuote?: BigNumber\r\n  poolWeight?: BigNumber\r\n  userData?: DeserializedFarmUserData\r\n}\r\n\r\ninterface CorePoolProps {\r\n  startBlock?: number\r\n  endBlock?: number\r\n  apr?: number\r\n  stakingTokenPrice?: number\r\n  earningTokenPrice?: number\r\n  isAutoVault?: boolean\r\n}\r\n\r\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\r\n  totalStaked?: BigNumber\r\n  stakingLimit?: BigNumber\r\n  userData?: {\r\n    allowance: BigNumber\r\n    stakingTokenBalance: BigNumber\r\n    stakedBalance: BigNumber\r\n    pendingReward: BigNumber\r\n  }\r\n}\r\n\r\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\r\n  totalStaked?: SerializedBigNumber\r\n  stakingLimit?: SerializedBigNumber\r\n  userData?: {\r\n    allowance: SerializedBigNumber\r\n    stakingTokenBalance: SerializedBigNumber\r\n    stakedBalance: SerializedBigNumber\r\n    pendingReward: SerializedBigNumber\r\n  }\r\n}\r\n\r\nexport interface Profile {\r\n  userId: number\r\n  points: number\r\n  teamId: number\r\n  nftAddress: string\r\n  tokenId: number\r\n  isActive: boolean\r\n  username: string\r\n  nft?: Nft\r\n  team: Team\r\n  hasRegistered: boolean\r\n}\r\n\r\n// Slices states\r\n\r\nexport interface SerializedFarmsState {\r\n  data: SerializedFarm[]\r\n  loadArchivedFarmsData: boolean\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface DeserializedFarmsState {\r\n  data: DeserializedFarm[]\r\n  loadArchivedFarmsData: boolean\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface VaultFees {\r\n  performanceFee: number\r\n  callFee: number\r\n  withdrawalFee: number\r\n  withdrawalFeePeriod: number\r\n}\r\n\r\nexport interface VaultUser {\r\n  isLoading: boolean\r\n  userShares: string\r\n  cakeAtLastUserAction: string\r\n  lastDepositedTime: string\r\n  lastUserActionTime: string\r\n}\r\nexport interface CakeVault {\r\n  totalShares?: string\r\n  pricePerFullShare?: string\r\n  totalCakeInVault?: string\r\n  estimatedCakeBountyReward?: string\r\n  totalPendingCakeHarvest?: string\r\n  fees?: VaultFees\r\n  userData?: VaultUser\r\n}\r\n\r\nexport interface PoolsState {\r\n  data: SerializedPool[]\r\n  cakeVault: CakeVault\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface ProfileState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  hasRegistered: boolean\r\n  data: Profile\r\n  profileAvatars: {\r\n    [key: string]: {\r\n      username: string\r\n      nft: Nft\r\n    }\r\n  }\r\n}\r\n\r\nexport type TeamResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: boolean\r\n}\r\n\r\nexport type TeamsById = {\r\n  [key: string]: Team\r\n}\r\n\r\nexport interface TeamsState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: TeamsById\r\n}\r\n\r\nexport interface Achievement {\r\n  id: string\r\n  type: CampaignType\r\n  address: string\r\n  title: TranslatableText\r\n  description?: TranslatableText\r\n  badge: string\r\n  points: number\r\n}\r\n\r\nexport interface AchievementState {\r\n  data: Achievement[]\r\n}\r\n\r\n// Block\r\n\r\nexport interface BlockState {\r\n  currentBlock: number\r\n  initialBlock: number\r\n}\r\n\r\n// Collectibles\r\n\r\nexport interface CollectiblesState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: {\r\n    [key: string]: number[]\r\n  }\r\n}\r\n\r\n// Predictions\r\n\r\nexport enum BetPosition {\r\n  BULL = 'Bull',\r\n  BEAR = 'Bear',\r\n  HOUSE = 'House',\r\n}\r\n\r\nexport enum PredictionStatus {\r\n  INITIAL = 'initial',\r\n  LIVE = 'live',\r\n  PAUSED = 'paused',\r\n  ERROR = 'error',\r\n}\r\n\r\nexport interface Round {\r\n  id: string\r\n  epoch: number\r\n  position: BetPosition\r\n  failed: boolean\r\n  startAt: number\r\n  startBlock: number\r\n  startHash: string\r\n  lockAt: number\r\n  lockBlock: number\r\n  lockHash: string\r\n  lockPrice: number\r\n  lockRoundId: string\r\n  closeAt: number\r\n  closeBlock: number\r\n  closeHash: string\r\n  closePrice: number\r\n  closeRoundId: string\r\n  totalBets: number\r\n  totalAmount: number\r\n  bullBets: number\r\n  bullAmount: number\r\n  bearBets: number\r\n  bearAmount: number\r\n  bets?: Bet[]\r\n}\r\n\r\nexport interface Market {\r\n  paused: boolean\r\n  epoch: number\r\n}\r\n\r\nexport interface Bet {\r\n  id?: string\r\n  hash?: string\r\n  amount: number\r\n  position: BetPosition\r\n  claimed: boolean\r\n  claimedAt: number\r\n  claimedBlock: number\r\n  claimedHash: string\r\n  claimedBNB: number\r\n  claimedNetBNB: number\r\n  createdAt: number\r\n  updatedAt: number\r\n  user?: PredictionUser\r\n  round?: Round\r\n}\r\n\r\nexport interface PredictionUser {\r\n  id: string\r\n  createdAt: number\r\n  updatedAt: number\r\n  block: number\r\n  totalBets: number\r\n  totalBetsBull: number\r\n  totalBetsBear: number\r\n  totalBNB: number\r\n  totalBNBBull: number\r\n  totalBNBBear: number\r\n  totalBetsClaimed: number\r\n  totalBNBClaimed: number\r\n  winRate: number\r\n  averageBNB: number\r\n  netBNB: number\r\n  bets?: Bet[]\r\n}\r\n\r\nexport enum HistoryFilter {\r\n  ALL = 'all',\r\n  COLLECTED = 'collected',\r\n  UNCOLLECTED = 'uncollected',\r\n}\r\n\r\nexport interface LedgerData {\r\n  [key: string]: {\r\n    [key: string]: ReduxNodeLedger\r\n  }\r\n}\r\n\r\nexport interface RoundData {\r\n  [key: string]: ReduxNodeRound\r\n}\r\n\r\nexport interface ReduxNodeLedger {\r\n  position: BetPosition\r\n  amount: BigNumberToJson\r\n  claimed: boolean\r\n}\r\n\r\nexport interface NodeLedger {\r\n  position: BetPosition\r\n  amount: ethers.BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport interface ReduxNodeRound {\r\n  epoch: number\r\n  startTimestamp: number | null\r\n  lockTimestamp: number | null\r\n  closeTimestamp: number | null\r\n  lockPrice: BigNumberToJson | null\r\n  closePrice: BigNumberToJson | null\r\n  totalAmount: BigNumberToJson\r\n  bullAmount: BigNumberToJson\r\n  bearAmount: BigNumberToJson\r\n  rewardBaseCalAmount: BigNumberToJson\r\n  rewardAmount: BigNumberToJson\r\n  oracleCalled: boolean\r\n  lockOracleId: string\r\n  closeOracleId: string\r\n}\r\n\r\nexport interface NodeRound {\r\n  epoch: number\r\n  startTimestamp: number | null\r\n  lockTimestamp: number | null\r\n  closeTimestamp: number | null\r\n  lockPrice: ethers.BigNumber | null\r\n  closePrice: ethers.BigNumber | null\r\n  totalAmount: ethers.BigNumber\r\n  bullAmount: ethers.BigNumber\r\n  bearAmount: ethers.BigNumber\r\n  rewardBaseCalAmount: ethers.BigNumber\r\n  rewardAmount: ethers.BigNumber\r\n  oracleCalled: boolean\r\n  closeOracleId: string\r\n  lockOracleId: string\r\n}\r\n\r\nexport enum LeaderboardLoadingState {\r\n  INITIAL,\r\n  LOADING,\r\n  IDLE,\r\n}\r\n\r\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\r\n\r\nexport interface LeaderboardFilter {\r\n  address?: string\r\n  orderBy?: string\r\n  timePeriod?: LeaderboardFilterTimePeriod\r\n}\r\n\r\nexport interface PredictionsState {\r\n  status: PredictionStatus\r\n  isLoading: boolean\r\n  isHistoryPaneOpen: boolean\r\n  isChartPaneOpen: boolean\r\n  isFetchingHistory: boolean\r\n  historyFilter: HistoryFilter\r\n  currentEpoch: number\r\n  intervalSeconds: number\r\n  minBetAmount: string\r\n  bufferSeconds: number\r\n  lastOraclePrice: string\r\n  history: Bet[]\r\n  totalHistory: number\r\n  currentHistoryPage: number\r\n  hasHistoryLoaded: boolean\r\n  rounds?: RoundData\r\n  ledgers?: LedgerData\r\n  claimableStatuses: {\r\n    [key: string]: boolean\r\n  }\r\n  leaderboard: {\r\n    loadingState: LeaderboardLoadingState\r\n    filters: LeaderboardFilter\r\n    skip: number\r\n    hasMoreResults: boolean\r\n    addressResults: {\r\n      [key: string]: PredictionUser\r\n    }\r\n    results: PredictionUser[]\r\n  }\r\n}\r\n\r\n// Voting\r\n\r\n/* eslint-disable camelcase */\r\n/**\r\n * @see https://hub.snapshot.page/graphql\r\n */\r\nexport interface VoteWhere {\r\n  id?: string\r\n  id_in?: string[]\r\n  voter?: string\r\n  voter_in?: string[]\r\n  proposal?: string\r\n  proposal_in?: string[]\r\n}\r\n\r\nexport enum SnapshotCommand {\r\n  PROPOSAL = 'proposal',\r\n  VOTE = 'vote',\r\n}\r\n\r\nexport enum ProposalType {\r\n  ALL = 'all',\r\n  CORE = 'core',\r\n  COMMUNITY = 'community',\r\n}\r\n\r\nexport enum ProposalState {\r\n  ACTIVE = 'active',\r\n  PENDING = 'pending',\r\n  CLOSED = 'closed',\r\n}\r\n\r\nexport interface Space {\r\n  id: string\r\n  name: string\r\n}\r\n\r\nexport interface Proposal {\r\n  author: string\r\n  body: string\r\n  choices: string[]\r\n  end: number\r\n  id: string\r\n  snapshot: string\r\n  space: Space\r\n  start: number\r\n  state: ProposalState\r\n  title: string\r\n}\r\n\r\nexport interface Vote {\r\n  id: string\r\n  voter: string\r\n  created: number\r\n  space: Space\r\n  proposal: {\r\n    choices: Proposal['choices']\r\n  }\r\n  choice: number\r\n  metadata?: {\r\n    votingPower: string\r\n    verificationHash: string\r\n  }\r\n  _inValid?: boolean\r\n}\r\n\r\nexport enum VotingStateLoadingStatus {\r\n  INITIAL = 'initial',\r\n  IDLE = 'idle',\r\n  LOADING = 'loading',\r\n  ERROR = 'error',\r\n}\r\n\r\nexport interface VotingState {\r\n  proposalLoadingStatus: VotingStateLoadingStatus\r\n  proposals: {\r\n    [key: string]: Proposal\r\n  }\r\n  voteLoadingStatus: VotingStateLoadingStatus\r\n  votes: {\r\n    [key: string]: Vote[]\r\n  }\r\n}\r\n\r\nexport interface LotteryRoundUserTickets {\r\n  isLoading?: boolean\r\n  tickets?: LotteryTicket[]\r\n}\r\n\r\ninterface LotteryRoundGenerics {\r\n  isLoading?: boolean\r\n  lotteryId: string\r\n  status: LotteryStatus\r\n  startTime: string\r\n  endTime: string\r\n  treasuryFee: string\r\n  firstTicketId: string\r\n  lastTicketId: string\r\n  finalNumber: number\r\n}\r\n\r\nexport interface LotteryRound extends LotteryRoundGenerics {\r\n  userTickets?: LotteryRoundUserTickets\r\n  priceTicketInCake: BigNumber\r\n  discountDivisor: BigNumber\r\n  amountCollectedInCake: BigNumber\r\n  cakePerBracket: string[]\r\n  countWinnersPerBracket: string[]\r\n  rewardsBreakdown: string[]\r\n}\r\n\r\nexport interface LotteryResponse extends LotteryRoundGenerics {\r\n  priceTicketInCake: SerializedBigNumber\r\n  discountDivisor: SerializedBigNumber\r\n  amountCollectedInCake: SerializedBigNumber\r\n  cakePerBracket: SerializedBigNumber[]\r\n  countWinnersPerBracket: SerializedBigNumber[]\r\n  rewardsBreakdown: SerializedBigNumber[]\r\n}\r\n\r\nexport interface LotteryState {\r\n  currentLotteryId: string\r\n  maxNumberTicketsPerBuyOrClaim: string\r\n  isTransitioning: boolean\r\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\r\n  lotteriesData?: LotteryRoundGraphEntity[]\r\n  userLotteryData?: LotteryUserGraphEntity\r\n}\r\n\r\nexport interface LotteryRoundGraphEntity {\r\n  id: string\r\n  totalUsers: string\r\n  totalTickets: string\r\n  winningTickets: string\r\n  status: LotteryStatus\r\n  finalNumber: string\r\n  startTime: string\r\n  endTime: string\r\n  ticketPrice: SerializedBigNumber\r\n}\r\n\r\nexport interface LotteryUserGraphEntity {\r\n  account: string\r\n  totalCake: string\r\n  totalTickets: string\r\n  rounds: UserRound[]\r\n}\r\n\r\nexport interface UserRound {\r\n  claimed: boolean\r\n  lotteryId: string\r\n  status: LotteryStatus\r\n  endTime: string\r\n  totalTickets: string\r\n  tickets?: LotteryTicket[]\r\n}\r\n\r\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\r\n\r\n// Global state\r\n\r\nexport interface State {\r\n  achievements: AchievementState\r\n  block: BlockState\r\n  farms: SerializedFarmsState\r\n  pools: PoolsState\r\n  predictions: PredictionsState\r\n  profile: ProfileState\r\n  teams: TeamsState\r\n  collectibles: CollectiblesState\r\n  voting: VotingState\r\n  lottery: LotteryState\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\r\nimport { ethers } from 'ethers'\r\nimport {\r\n  Bet,\r\n  LedgerData,\r\n  BetPosition,\r\n  PredictionsState,\r\n  PredictionStatus,\r\n  ReduxNodeLedger,\r\n  ReduxNodeRound,\r\n  Round,\r\n  RoundData,\r\n  PredictionUser,\r\n  HistoryFilter,\r\n} from 'state/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { getPredictionsContract } from 'utils/contractHelpers'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport { getPredictionsAddress } from 'utils/addressHelpers'\r\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\r\nimport {\r\n  BetResponse,\r\n  getRoundBaseFields,\r\n  getBetBaseFields,\r\n  getUserBaseFields,\r\n  RoundResponse,\r\n  TotalWonMarketResponse,\r\n  UserResponse,\r\n} from './queries'\r\nimport { ROUNDS_PER_PAGE } from './config'\r\n\r\nexport enum Result {\r\n  WIN = 'win',\r\n  LOSE = 'lose',\r\n  CANCELED = 'canceled',\r\n  LIVE = 'live',\r\n}\r\n\r\nexport const numberOrNull = (value: string) => {\r\n  if (value === null) {\r\n    return null\r\n  }\r\n\r\n  const valueNum = Number(value)\r\n  return Number.isNaN(valueNum) ? null : valueNum\r\n}\r\n\r\nconst getRoundPosition = (positionResponse: string) => {\r\n  if (positionResponse === 'Bull') {\r\n    return BetPosition.BULL\r\n  }\r\n\r\n  if (positionResponse === 'Bear') {\r\n    return BetPosition.BEAR\r\n  }\r\n\r\n  if (positionResponse === 'House') {\r\n    return BetPosition.HOUSE\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\r\n  const bet = {\r\n    id: betResponse.id,\r\n    hash: betResponse.hash,\r\n    block: numberOrNull(betResponse.block),\r\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\r\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\r\n    claimed: betResponse.claimed,\r\n    claimedAt: numberOrNull(betResponse.claimedAt),\r\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\r\n    claimedHash: betResponse.claimedHash,\r\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\r\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\r\n    createdAt: numberOrNull(betResponse.createdAt),\r\n    updatedAt: numberOrNull(betResponse.updatedAt),\r\n  } as Bet\r\n\r\n  if (betResponse.user) {\r\n    bet.user = transformUserResponse(betResponse.user)\r\n  }\r\n\r\n  if (betResponse.round) {\r\n    bet.round = transformRoundResponse(betResponse.round)\r\n  }\r\n\r\n  return bet\r\n}\r\n\r\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\r\n  const {\r\n    id,\r\n    createdAt,\r\n    updatedAt,\r\n    block,\r\n    totalBets,\r\n    totalBetsBull,\r\n    totalBetsBear,\r\n    totalBNB,\r\n    totalBNBBull,\r\n    totalBNBBear,\r\n    totalBetsClaimed,\r\n    totalBNBClaimed,\r\n    winRate,\r\n    averageBNB,\r\n    netBNB,\r\n  } = userResponse\r\n\r\n  return {\r\n    id,\r\n    createdAt: numberOrNull(createdAt),\r\n    updatedAt: numberOrNull(updatedAt),\r\n    block: numberOrNull(block),\r\n    totalBets: numberOrNull(totalBets),\r\n    totalBetsBull: numberOrNull(totalBetsBull),\r\n    totalBetsBear: numberOrNull(totalBetsBear),\r\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\r\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\r\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\r\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\r\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\r\n    winRate: winRate ? parseFloat(winRate) : 0,\r\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\r\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\r\n  }\r\n}\r\n\r\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\r\n  const {\r\n    id,\r\n    epoch,\r\n    failed,\r\n    position,\r\n    startAt,\r\n    startBlock,\r\n    startHash,\r\n    lockAt,\r\n    lockBlock,\r\n    lockHash,\r\n    lockPrice,\r\n    lockRoundId,\r\n    closeAt,\r\n    closeBlock,\r\n    closeHash,\r\n    closePrice,\r\n    closeRoundId,\r\n    totalBets,\r\n    totalAmount,\r\n    bullBets,\r\n    bullAmount,\r\n    bearBets,\r\n    bearAmount,\r\n    bets = [],\r\n  } = roundResponse\r\n\r\n  return {\r\n    id,\r\n    failed,\r\n    startHash,\r\n    lockHash,\r\n    lockRoundId,\r\n    closeRoundId,\r\n    closeHash,\r\n    position: getRoundPosition(position),\r\n    epoch: numberOrNull(epoch),\r\n    startAt: numberOrNull(startAt),\r\n    startBlock: numberOrNull(startBlock),\r\n    lockAt: numberOrNull(lockAt),\r\n    lockBlock: numberOrNull(lockBlock),\r\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\r\n    closeAt: numberOrNull(closeAt),\r\n    closeBlock: numberOrNull(closeBlock),\r\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\r\n    totalBets: numberOrNull(totalBets),\r\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\r\n    bullBets: numberOrNull(bullBets),\r\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\r\n    bearBets: numberOrNull(bearBets),\r\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\r\n    bets: bets.map(transformBetResponse),\r\n  }\r\n}\r\n\r\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\r\n  const { round } = bet\r\n  if (round.failed) {\r\n    return Result.CANCELED\r\n  }\r\n\r\n  if (round.epoch >= currentEpoch - 1) {\r\n    return Result.LIVE\r\n  }\r\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\r\n\r\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\r\n}\r\n\r\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\r\n  switch (filter) {\r\n    case HistoryFilter.COLLECTED:\r\n      return bets.filter((bet) => bet.claimed === true)\r\n    case HistoryFilter.UNCOLLECTED:\r\n      return bets.filter((bet) => {\r\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\r\n      })\r\n    case HistoryFilter.ALL:\r\n    default:\r\n      return bets\r\n  }\r\n}\r\n\r\nexport const getTotalWon = async (): Promise<number> => {\r\n  const { market } = (await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getTotalWonData {\r\n        market(id: 1) {\r\n          totalBNB\r\n          totalBNBTreasury\r\n        }\r\n      }\r\n    `,\r\n  )) as { market: TotalWonMarketResponse }\r\n\r\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\r\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\r\n\r\n  return Math.max(totalBNB - totalBNBTreasury, 0)\r\n}\r\n\r\ntype WhereClause = Record<string, string | number | boolean | string[]>\r\n\r\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\r\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where },\r\n  )\r\n  return response.bets\r\n}\r\n\r\nexport const getBet = async (betId: string): Promise<BetResponse> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBet($id: ID!) {\r\n        bet(id: $id) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n  `,\r\n    {\r\n      id: betId.toLowerCase(),\r\n    },\r\n  )\r\n  return response.bet\r\n}\r\n\r\nexport const getLedgerData = async (account: string, epochs: number[]) => {\r\n  const address = getPredictionsAddress()\r\n  const ledgerCalls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'ledger',\r\n    params: [epoch, account],\r\n  }))\r\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\r\n  return response\r\n}\r\n\r\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\r\n\r\ninterface GetPredictionUsersOptions {\r\n  skip?: number\r\n  first?: number\r\n  orderBy?: string\r\n  orderDir?: string\r\n  where?: WhereClause\r\n}\r\n\r\nconst defaultPredictionUserOptions = {\r\n  skip: 0,\r\n  first: LEADERBOARD_RESULTS_PER_PAGE,\r\n  orderBy: 'createdAt',\r\n  orderDir: 'desc',\r\n}\r\n\r\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\r\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\r\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\r\n          ${getUserBaseFields()} \r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where, orderBy, orderDir },\r\n  )\r\n  return response.users\r\n}\r\n\r\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getUser($id: ID!) {\r\n        user(id: $id) {\r\n          ${getUserBaseFields()}\r\n        }\r\n      }\r\n  `,\r\n    {\r\n      id: account.toLowerCase(),\r\n    },\r\n  )\r\n  return response.user\r\n}\r\n\r\nexport const getClaimStatuses = async (\r\n  account: string,\r\n  epochs: number[],\r\n): Promise<PredictionsState['claimableStatuses']> => {\r\n  const address = getPredictionsAddress()\r\n  const claimableCalls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'claimable',\r\n    params: [epoch, account],\r\n  }))\r\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\r\n\r\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\r\n    const epoch = epochs[index]\r\n    const [claimable] = claimableResponse\r\n\r\n    return {\r\n      ...accum,\r\n      [epoch]: claimable,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport type MarketData = Pick<\r\n  PredictionsState,\r\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\r\n>\r\nexport const getPredictionData = async (): Promise<MarketData> => {\r\n  const address = getPredictionsAddress()\r\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\r\n    address,\r\n    name: method,\r\n  }))\r\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\r\n    predictionsAbi,\r\n    staticCalls,\r\n  )\r\n\r\n  return {\r\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\r\n    currentEpoch: currentEpoch.toNumber(),\r\n    intervalSeconds: intervalSeconds.toNumber(),\r\n    minBetAmount: minBetAmount.toString(),\r\n    bufferSeconds: bufferSeconds.toNumber(),\r\n  }\r\n}\r\n\r\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\r\n  const address = getPredictionsAddress()\r\n  const calls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'rounds',\r\n    params: [epoch],\r\n  }))\r\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\r\n  return response\r\n}\r\n\r\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\r\n  return {\r\n    epoch,\r\n    startTimestamp,\r\n    lockTimestamp: null,\r\n    closeTimestamp: null,\r\n    lockPrice: null,\r\n    closePrice: null,\r\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\r\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\r\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\r\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\r\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\r\n    oracleCalled: false,\r\n    lockOracleId: null,\r\n    closeOracleId: null,\r\n  }\r\n}\r\n\r\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\r\n  return rounds.reduce((accum, round) => {\r\n    return {\r\n      ...accum,\r\n      [round.epoch.toString()]: round,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\r\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\r\n  amount: ledgerResponse.amount.toJSON(),\r\n  claimed: ledgerResponse.claimed,\r\n})\r\n\r\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\r\n  return ledgers.reduce((accum, ledgerResponse, index) => {\r\n    if (!ledgerResponse) {\r\n      return accum\r\n    }\r\n\r\n    // If the amount is zero that means the user did not bet\r\n    if (ledgerResponse.amount.eq(0)) {\r\n      return accum\r\n    }\r\n\r\n    const epoch = epochs[index].toString()\r\n\r\n    return {\r\n      ...accum,\r\n      [account]: {\r\n        ...accum[account],\r\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\r\n      },\r\n    }\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Serializes the return from the \"rounds\" call for redux\r\n */\r\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\r\n  const {\r\n    epoch,\r\n    startTimestamp,\r\n    lockTimestamp,\r\n    closeTimestamp,\r\n    lockPrice,\r\n    closePrice,\r\n    totalAmount,\r\n    bullAmount,\r\n    bearAmount,\r\n    rewardBaseCalAmount,\r\n    rewardAmount,\r\n    oracleCalled,\r\n    lockOracleId,\r\n    closeOracleId,\r\n  } = response\r\n\r\n  return {\r\n    oracleCalled,\r\n    epoch: epoch.toNumber(),\r\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\r\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\r\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\r\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\r\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\r\n    totalAmount: totalAmount.toJSON(),\r\n    bullAmount: bullAmount.toJSON(),\r\n    bearAmount: bearAmount.toJSON(),\r\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\r\n    rewardAmount: rewardAmount.toJSON(),\r\n    lockOracleId: lockOracleId.toString(),\r\n    closeOracleId: closeOracleId.toString(),\r\n  }\r\n}\r\n\r\n/**\r\n * Parse serialized values back into ethers.BigNumber\r\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\r\n */\r\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\r\n  return Object.keys(data).reduce((accum, key) => {\r\n    const value = data[key]\r\n\r\n    if (value && value?.type === 'BigNumber') {\r\n      return {\r\n        ...accum,\r\n        [key]: ethers.BigNumber.from(value),\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...accum,\r\n      [key]: value,\r\n    }\r\n  }, {}) as K\r\n}\r\n\r\nexport const fetchUsersRoundsLength = async (account: string) => {\r\n  try {\r\n    const contract = getPredictionsContract()\r\n    const length = await contract.getUserRoundsLength(account)\r\n    return length\r\n  } catch {\r\n    return ethers.BigNumber.from(0)\r\n  }\r\n}\r\n\r\n/**\r\n * Fetches rounds a user has participated in\r\n */\r\nexport const fetchUserRounds = async (\r\n  account: string,\r\n  cursor = 0,\r\n  size = ROUNDS_PER_PAGE,\r\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\r\n  const contract = getPredictionsContract()\r\n\r\n  try {\r\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\r\n\r\n    return rounds.reduce((accum, round, index) => {\r\n      return {\r\n        ...accum,\r\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\r\n      }\r\n    }, {})\r\n  } catch {\r\n    // When the results run out the contract throws an error.\r\n    return null\r\n  }\r\n}\r\n","export const REWARD_RATE = 0.97\r\n\r\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\r\nexport const ROUND_BUFFER = 9\r\n\r\nexport const PAST_ROUND_COUNT = 5\r\nexport const FUTURE_ROUND_COUNT = 2\r\n\r\nexport const ROUNDS_PER_PAGE = 1000\r\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\r\n","export interface UserResponse {\r\n  id: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  block: string\r\n  totalBets: string\r\n  totalBetsBull: string\r\n  totalBetsBear: string\r\n  totalBNB: string\r\n  totalBNBBull: string\r\n  totalBNBBear: string\r\n  totalBetsClaimed: string\r\n  totalBNBClaimed: string\r\n  winRate: string\r\n  averageBNB: string\r\n  netBNB: string\r\n  bets?: BetResponse[]\r\n}\r\n\r\nexport interface BetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  claimedAt: string\r\n  claimedBlock: string\r\n  claimedHash: string\r\n  claimedBNB: string\r\n  claimedNetBNB: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  block: string\r\n  user?: UserResponse\r\n  round?: RoundResponse\r\n}\r\n\r\nexport interface HistoricalBetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  user?: UserResponse\r\n  round: {\r\n    id: string\r\n    epoch: string\r\n  }\r\n}\r\n\r\nexport interface RoundResponse {\r\n  id: string\r\n  epoch: string\r\n  position: string\r\n  failed: boolean\r\n  startAt: string\r\n  startBlock: string\r\n  startHash: string\r\n  lockAt: string\r\n  lockBlock: string\r\n  lockHash: string\r\n  lockPrice: string\r\n  lockRoundId: string\r\n  closeAt: string\r\n  closeBlock: string\r\n  closeHash: string\r\n  closePrice: string\r\n  closeRoundId: string\r\n  totalBets: string\r\n  totalAmount: string\r\n  bullBets: string\r\n  bullAmount: string\r\n  bearBets: string\r\n  bearAmount: string\r\n  bets?: BetResponse[]\r\n}\r\n\r\nexport interface TotalWonMarketResponse {\r\n  totalBNB: string\r\n  totalBNBTreasury: string\r\n}\r\n\r\n/**\r\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\r\n */\r\nexport const getRoundBaseFields = () => `\r\n  id\r\n  epoch\r\n  position\r\n  failed\r\n  startAt\r\n  startBlock\r\n  startHash\r\n  lockAt\r\n  lockBlock\r\n  lockHash\r\n  lockPrice\r\n  lockRoundId\r\n  closeAt\r\n  closeBlock\r\n  closeHash\r\n  closePrice\r\n  closeRoundId\r\n  totalBets\r\n  totalAmount\r\n  bullBets\r\n  bullAmount\r\n  bearBets\r\n  bearAmount\r\n`\r\n\r\nexport const getBetBaseFields = () => `\r\n id\r\n hash  \r\n amount\r\n position\r\n claimed\r\n claimedAt\r\n claimedHash\r\n claimedBlock\r\n claimedBNB\r\n claimedNetBNB\r\n createdAt\r\n updatedAt\r\n`\r\n\r\nexport const getUserBaseFields = () => `\r\n  id\r\n  createdAt\r\n  updatedAt\r\n  block\r\n  totalBets\r\n  totalBetsBull\r\n  totalBetsBear\r\n  totalBNB\r\n  totalBNBBull\r\n  totalBNBBear\r\n  totalBetsClaimed\r\n  totalBNBClaimed\r\n  winRate\r\n  averageBNB\r\n  netBNB\r\n`\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport maxBy from 'lodash/maxBy'\r\nimport merge from 'lodash/merge'\r\nimport range from 'lodash/range'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport {\r\n  Bet,\r\n  LedgerData,\r\n  HistoryFilter,\r\n  PredictionsState,\r\n  PredictionStatus,\r\n  ReduxNodeRound,\r\n  BetPosition,\r\n  LeaderboardLoadingState,\r\n  PredictionUser,\r\n  LeaderboardFilter,\r\n  State,\r\n} from 'state/types'\r\nimport { getPredictionsContract } from 'utils/contractHelpers'\r\nimport {\r\n  FUTURE_ROUND_COUNT,\r\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\r\n  PAST_ROUND_COUNT,\r\n  ROUNDS_PER_PAGE,\r\n  ROUND_BUFFER,\r\n} from './config'\r\nimport {\r\n  getBetHistory,\r\n  transformBetResponse,\r\n  makeFutureRoundResponse,\r\n  makeRoundData,\r\n  getRoundsData,\r\n  getPredictionData,\r\n  MarketData,\r\n  getLedgerData,\r\n  makeLedgerData,\r\n  serializePredictionsRoundsResponse,\r\n  getClaimStatuses,\r\n  fetchUsersRoundsLength,\r\n  fetchUserRounds,\r\n  getPredictionUsers,\r\n  transformUserResponse,\r\n  LEADERBOARD_RESULTS_PER_PAGE,\r\n  getPredictionUser,\r\n} from './helpers'\r\n\r\nconst initialState: PredictionsState = {\r\n  status: PredictionStatus.INITIAL,\r\n  isLoading: false,\r\n  isHistoryPaneOpen: false,\r\n  isChartPaneOpen: false,\r\n  isFetchingHistory: false,\r\n  historyFilter: HistoryFilter.ALL,\r\n  currentEpoch: 0,\r\n  intervalSeconds: 300,\r\n  minBetAmount: '10000000000000',\r\n  bufferSeconds: 60,\r\n  lastOraclePrice: BIG_ZERO.toJSON(),\r\n  rounds: {},\r\n  history: [],\r\n  totalHistory: 0,\r\n  currentHistoryPage: 1,\r\n  hasHistoryLoaded: false,\r\n  ledgers: {},\r\n  claimableStatuses: {},\r\n  leaderboard: {\r\n    loadingState: LeaderboardLoadingState.INITIAL,\r\n    filters: {\r\n      address: null,\r\n      orderBy: 'netBNB',\r\n      timePeriod: 'all',\r\n    },\r\n    skip: 0,\r\n    hasMoreResults: true,\r\n    addressResults: {},\r\n    results: [],\r\n  },\r\n}\r\n\r\n// Thunks\r\ntype PredictionInitialization = Pick<\r\n  PredictionsState,\r\n  | 'status'\r\n  | 'currentEpoch'\r\n  | 'intervalSeconds'\r\n  | 'minBetAmount'\r\n  | 'rounds'\r\n  | 'ledgers'\r\n  | 'claimableStatuses'\r\n  | 'bufferSeconds'\r\n>\r\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\r\n  'predictions/intialize',\r\n  async (account = null) => {\r\n    // Static values\r\n    const marketData = await getPredictionData()\r\n    const epochs =\r\n      marketData.currentEpoch > PAST_ROUND_COUNT\r\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\r\n        : [marketData.currentEpoch]\r\n\r\n    // Round data\r\n    const roundsResponse = await getRoundsData(epochs)\r\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\r\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\r\n\r\n      return {\r\n        ...accum,\r\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\r\n      }\r\n    }, {})\r\n\r\n    const initializedData = {\r\n      ...marketData,\r\n      rounds: initialRoundData,\r\n      ledgers: {},\r\n      claimableStatuses: {},\r\n    }\r\n\r\n    if (!account) {\r\n      return initializedData\r\n    }\r\n\r\n    // Bet data\r\n    const ledgerResponses = await getLedgerData(account, epochs)\r\n\r\n    // Claim statuses\r\n    const claimableStatuses = await getClaimStatuses(account, epochs)\r\n\r\n    return merge({}, initializedData, {\r\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\r\n      claimableStatuses,\r\n    })\r\n  },\r\n)\r\n\r\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\r\n  const predictionContract = getPredictionsContract()\r\n  const response = await predictionContract.rounds(epoch)\r\n  return serializePredictionsRoundsResponse(response)\r\n})\r\n\r\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\r\n  'predictions/fetchRounds',\r\n  async (epochs) => {\r\n    const rounds = await getRoundsData(epochs)\r\n    return rounds.reduce((accum, round) => {\r\n      if (!round) {\r\n        return accum\r\n      }\r\n\r\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\r\n\r\n      return {\r\n        ...accum,\r\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\r\n      }\r\n    }, {})\r\n  },\r\n)\r\n\r\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\r\n  const marketData = await getPredictionData()\r\n  return marketData\r\n})\r\n\r\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\r\n  'predictions/fetchLedgerData',\r\n  async ({ account, epochs }) => {\r\n    const ledgers = await getLedgerData(account, epochs)\r\n    return makeLedgerData(account, ledgers, epochs)\r\n  },\r\n)\r\n\r\nexport const fetchClaimableStatuses = createAsyncThunk<\r\n  PredictionsState['claimableStatuses'],\r\n  { account: string; epochs: number[] }\r\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\r\n  const ledgers = await getClaimStatuses(account, epochs)\r\n  return ledgers\r\n})\r\n\r\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\r\n  'predictions/fetchHistory',\r\n  async ({ account, claimed }) => {\r\n    const response = await getBetHistory({\r\n      user: account.toLowerCase(),\r\n      claimed,\r\n    })\r\n    const bets = response.map(transformBetResponse)\r\n\r\n    return { account, bets }\r\n  },\r\n)\r\n\r\nexport const fetchNodeHistory = createAsyncThunk<\r\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\r\n  { account: string; page?: number }\r\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\r\n  const userRoundsLength = await fetchUsersRoundsLength(account)\r\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\r\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\r\n\r\n  if (userRoundsLength.eq(0)) {\r\n    return emptyResult\r\n  }\r\n\r\n  if (page > maxPages) {\r\n    return emptyResult\r\n  }\r\n\r\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\r\n\r\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\r\n  const size =\r\n    maxPages === page\r\n      ? userRoundsLength\r\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\r\n          .toNumber()\r\n      : ROUNDS_PER_PAGE\r\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\r\n\r\n  if (!userRounds) {\r\n    return emptyResult\r\n  }\r\n\r\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\r\n  const roundData = await getRoundsData(epochs)\r\n  const claimableStatuses = await getClaimStatuses(account, epochs)\r\n\r\n  // Turn the data from the node into an Bet object that comes from the graph\r\n  const bets: Bet[] = roundData.reduce((accum, round) => {\r\n    const reduxRound = serializePredictionsRoundsResponse(round)\r\n    const ledger = userRounds[reduxRound.epoch]\r\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\r\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\r\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\r\n\r\n    const getRoundPosition = () => {\r\n      if (!closePrice) {\r\n        return null\r\n      }\r\n\r\n      if (round.closePrice.eq(round.lockPrice)) {\r\n        return BetPosition.HOUSE\r\n      }\r\n\r\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\r\n    }\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: null,\r\n        hash: null,\r\n        amount: parseFloat(formatUnits(ledgerAmount)),\r\n        position: ledger.position,\r\n        claimed: ledger.claimed,\r\n        claimedAt: null,\r\n        claimedHash: null,\r\n        claimedBNB: 0,\r\n        claimedNetBNB: 0,\r\n        createdAt: null,\r\n        updatedAt: null,\r\n        block: 0,\r\n        round: {\r\n          id: null,\r\n          epoch: round.epoch.toNumber(),\r\n          failed: false,\r\n          startBlock: null,\r\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\r\n          startHash: null,\r\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\r\n          lockBlock: null,\r\n          lockPrice,\r\n          lockHash: null,\r\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\r\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\r\n          closeHash: null,\r\n          closeAt: null,\r\n          closePrice,\r\n          closeBlock: null,\r\n          totalBets: 0,\r\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\r\n          bullBets: 0,\r\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\r\n          bearBets: 0,\r\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\r\n          position: getRoundPosition(),\r\n        },\r\n      },\r\n    ]\r\n  }, [])\r\n\r\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\r\n})\r\n\r\n// Leaderboard\r\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\r\n  'predictions/filterLeaderboard',\r\n  async ({ filters }) => {\r\n    const usersResponse = await getPredictionUsers({\r\n      skip: 0,\r\n      orderBy: filters.orderBy,\r\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\r\n    })\r\n\r\n    return { results: usersResponse.map(transformUserResponse) }\r\n  },\r\n)\r\n\r\nexport const fetchAddressResult = createAsyncThunk<\r\n  { account: string; data: PredictionUser },\r\n  string,\r\n  { rejectValue: string }\r\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\r\n  const userResponse = await getPredictionUser(account)\r\n\r\n  if (!userResponse) {\r\n    return rejectWithValue(account)\r\n  }\r\n\r\n  return { account, data: transformUserResponse(userResponse) }\r\n})\r\n\r\nexport const filterNextPageLeaderboard = createAsyncThunk<\r\n  { results: PredictionUser[]; skip: number },\r\n  number,\r\n  { state: State }\r\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\r\n  const state = getState()\r\n  const usersResponse = await getPredictionUsers({\r\n    skip,\r\n    orderBy: state.predictions.leaderboard.filters.orderBy,\r\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\r\n  })\r\n\r\n  return { results: usersResponse.map(transformUserResponse), skip }\r\n})\r\n\r\nexport const predictionsSlice = createSlice({\r\n  name: 'predictions',\r\n  initialState,\r\n  reducers: {\r\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\r\n      state.leaderboard.filters = {\r\n        ...state.leaderboard.filters,\r\n        ...action.payload,\r\n      }\r\n\r\n      // Anytime we filters change we need to reset back to page 1\r\n      state.leaderboard.skip = 0\r\n      state.leaderboard.hasMoreResults = true\r\n    },\r\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\r\n      state.status = action.payload\r\n    },\r\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isHistoryPaneOpen = action.payload\r\n      state.historyFilter = HistoryFilter.ALL\r\n    },\r\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isChartPaneOpen = action.payload\r\n    },\r\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\r\n      state.historyFilter = action.payload\r\n    },\r\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\r\n      state.currentEpoch = action.payload\r\n    },\r\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\r\n      state.lastOraclePrice = action.payload\r\n    },\r\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\r\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Leaderboard filter\r\n    builder.addCase(filterLeaderboard.pending, (state) => {\r\n      // Only mark as loading if we come from IDLE. This allows initialization.\r\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\r\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\r\n      }\r\n    })\r\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\r\n      const { results } = action.payload\r\n\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.results = results\r\n\r\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\r\n        state.leaderboard.hasMoreResults = false\r\n      }\r\n\r\n      // Populate address results to reduce calls\r\n      state.leaderboard.addressResults = {\r\n        ...state.leaderboard.addressResults,\r\n        ...results.reduce((accum, result) => {\r\n          return {\r\n            ...accum,\r\n            [result.id]: result,\r\n          }\r\n        }, {}),\r\n      }\r\n    })\r\n\r\n    // Leaderboard account result\r\n    builder.addCase(fetchAddressResult.pending, (state) => {\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\r\n    })\r\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\r\n      const { account, data } = action.payload\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.addressResults[account] = data\r\n    })\r\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.addressResults[action.payload] = null\r\n    })\r\n\r\n    // Leaderboard next page\r\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\r\n    })\r\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\r\n      const { results, skip } = action.payload\r\n\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\r\n      state.leaderboard.skip = skip\r\n\r\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\r\n        state.leaderboard.hasMoreResults = false\r\n      }\r\n    })\r\n\r\n    // Claimable statuses\r\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\r\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\r\n    })\r\n\r\n    // Ledger (bet) records\r\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\r\n      state.ledgers = merge({}, state.ledgers, action.payload)\r\n    })\r\n\r\n    // Get static market data\r\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\r\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\r\n\r\n      // If the round has change add a new future round\r\n      if (state.currentEpoch !== currentEpoch) {\r\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\r\n        const futureRound = makeFutureRoundResponse(\r\n          newestRound.epoch + 1,\r\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\r\n        )\r\n\r\n        state.rounds[futureRound.epoch] = futureRound\r\n      }\r\n\r\n      state.status = status\r\n      state.currentEpoch = currentEpoch\r\n      state.intervalSeconds = intervalSeconds\r\n      state.minBetAmount = minBetAmount\r\n    })\r\n\r\n    // Initialize predictions\r\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\r\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\r\n        action.payload\r\n      const futureRounds: ReduxNodeRound[] = []\r\n      const currentRound = rounds[currentEpoch]\r\n\r\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\r\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        status,\r\n        currentEpoch,\r\n        intervalSeconds,\r\n        bufferSeconds,\r\n        claimableStatuses,\r\n        ledgers,\r\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\r\n      }\r\n    })\r\n\r\n    // Get single round\r\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\r\n      state.rounds = merge({}, state.rounds, {\r\n        [action.payload.epoch.toString()]: action.payload,\r\n      })\r\n    })\r\n\r\n    // Get multiple rounds\r\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\r\n      state.rounds = merge({}, state.rounds, action.payload)\r\n    })\r\n\r\n    // Show History\r\n    builder.addCase(fetchHistory.pending, (state) => {\r\n      state.isFetchingHistory = true\r\n    })\r\n    builder.addCase(fetchHistory.rejected, (state) => {\r\n      state.isFetchingHistory = false\r\n    })\r\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\r\n      const { account, bets } = action.payload\r\n\r\n      state.isFetchingHistory = false\r\n      state.history[account] = merge([], state.history[account] ?? [], bets)\r\n    })\r\n\r\n    // History from the node\r\n    builder.addCase(fetchNodeHistory.pending, (state) => {\r\n      state.isFetchingHistory = true\r\n    })\r\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\r\n      state.isFetchingHistory = false\r\n    })\r\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\r\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\r\n\r\n      state.isFetchingHistory = false\r\n      state.history = page === 1 ? bets : [...state.history, ...bets]\r\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\r\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\r\n      state.totalHistory = totalHistory\r\n      state.currentHistoryPage = page\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const {\r\n  setChartPaneState,\r\n  setCurrentEpoch,\r\n  setHistoryFilter,\r\n  setHistoryPaneState,\r\n  setPredictionStatus,\r\n  setLastOraclePrice,\r\n  markAsCollected,\r\n  setLeaderboardFilter,\r\n} = predictionsSlice.actions\r\n\r\nexport default predictionsSlice.reducer\r\n","import request, { gql } from 'graphql-request'\r\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n\r\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\r\n  const response: { proposals: Proposal[] } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\r\n        proposals(\r\n          first: $first\r\n          skip: $skip\r\n          orderBy: \"end\"\r\n          orderDirection: desc\r\n          where: { space_in: \"cake.eth\", state: $state }\r\n        ) {\r\n          id\r\n          title\r\n          body\r\n          choices\r\n          start\r\n          end\r\n          snapshot\r\n          state\r\n          author\r\n          space {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    `,\r\n    { first, skip, state },\r\n  )\r\n  return response.proposals\r\n}\r\n\r\nexport const getProposal = async (id: string): Promise<Proposal> => {\r\n  const response: { proposal: Proposal } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getProposal($id: String) {\r\n        proposal(id: $id) {\r\n          id\r\n          title\r\n          body\r\n          choices\r\n          start\r\n          end\r\n          snapshot\r\n          state\r\n          author\r\n          space {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    `,\r\n    { id },\r\n  )\r\n  return response.proposal\r\n}\r\n\r\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\r\n  const response: { votes: Vote[] } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\r\n        votes(first: $first, skip: $skip, where: $where) {\r\n          id\r\n          voter\r\n          created\r\n          choice\r\n          space {\r\n            id\r\n            name\r\n          }\r\n          proposal {\r\n            choices\r\n          }\r\n          metadata\r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where },\r\n  )\r\n  return response.votes\r\n}\r\n\r\nexport const getVoteVerificationStatuses = async (\r\n  votes: Vote[],\r\n  block?: number,\r\n): Promise<{ [key: string]: boolean }> => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n\r\n  const votesToVerify = votes.map((vote) => ({\r\n    address: vote.voter,\r\n    verificationHash: vote.metadata?.verificationHash,\r\n    total: vote.metadata?.votingPower,\r\n  }))\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      block: blockNumber,\r\n      votes: votesToVerify,\r\n    }),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return votes.reduce((accum, vote) => {\r\n    return {\r\n      ...accum,\r\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\r\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  return new Promise((resolve, reject) => {\r\n    let votes: Vote[] = []\r\n\r\n    const fetchVoteChunk = async (newSkip: number) => {\r\n      try {\r\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\r\n\r\n        if (voteChunk.length === 0) {\r\n          resolve(votes)\r\n        } else {\r\n          votes = [...votes, ...voteChunk]\r\n          fetchVoteChunk(newSkip + votesPerChunk)\r\n        }\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    }\r\n\r\n    fetchVoteChunk(0)\r\n  })\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { merge } from 'lodash'\r\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\r\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\r\n\r\nconst initialState: VotingState = {\r\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\r\n  proposals: {},\r\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\r\n  votes: {},\r\n}\r\n\r\n// Thunks\r\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\r\n  'voting/fetchProposals',\r\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\r\n    const response = await getProposals(first, skip, state)\r\n    return response\r\n  },\r\n)\r\n\r\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\r\n  const response = await getProposal(proposalId)\r\n  return response\r\n})\r\n\r\nexport const fetchVotes = createAsyncThunk<\r\n  { votes: Vote[]; proposalId: string },\r\n  { proposalId: string; block?: number }\r\n>('voting/fetchVotes', async ({ proposalId, block }) => {\r\n  const response = await getAllVotes(proposalId, block)\r\n  return { votes: response, proposalId }\r\n})\r\n\r\nexport const verifyVotes = createAsyncThunk<\r\n  { results: { [key: string]: boolean }; proposalId: string },\r\n  { proposalId: string; snapshot?: string },\r\n  { state: State }\r\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\r\n  const state = getState()\r\n  const proposalVotes = state.voting.votes[proposalId]\r\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\r\n  return { results: response, proposalId }\r\n})\r\n\r\nexport const votingSlice = createSlice({\r\n  name: 'voting',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    // Verify Votes\r\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\r\n      const { proposalId, results } = action.payload\r\n\r\n      if (state.votes[proposalId]) {\r\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\r\n          return {\r\n            ...vote,\r\n            _inValid: results[vote.id] === false,\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    // Fetch Proposals\r\n    builder.addCase(fetchProposals.pending, (state) => {\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\r\n      const proposals = action.payload.reduce((accum, proposal) => {\r\n        return {\r\n          ...accum,\r\n          [proposal.id]: proposal,\r\n        }\r\n      }, {})\r\n\r\n      state.proposals = merge({}, state.proposals, proposals)\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n\r\n    // Fetch Proposal\r\n    builder.addCase(fetchProposal.pending, (state) => {\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\r\n      state.proposals[action.payload.id] = action.payload\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n\r\n    // Fetch Votes\r\n    builder.addCase(fetchVotes.pending, (state) => {\r\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\r\n      const { votes, proposalId } = action.payload\r\n\r\n      state.votes = {\r\n        ...state.votes,\r\n        [proposalId]: votes,\r\n      }\r\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n  },\r\n})\r\n\r\nexport default votingSlice.reducer\r\n","export const TICKET_LIMIT_PER_REQUEST = 2500\r\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\r\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport { getLotteryV2Address } from 'utils/addressHelpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\r\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\r\nimport { useMemo } from 'react'\r\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\r\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\r\n\r\nconst lotteryContract = getLotteryV2Contract()\r\n\r\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\r\n  const {\r\n    status,\r\n    startTime,\r\n    endTime,\r\n    priceTicketInCake,\r\n    discountDivisor,\r\n    treasuryFee,\r\n    firstTicketId,\r\n    lastTicketId,\r\n    amountCollectedInCake,\r\n    finalNumber,\r\n    cakePerBracket,\r\n    countWinnersPerBracket,\r\n    rewardsBreakdown,\r\n  } = response\r\n\r\n  const statusKey = Object.keys(LotteryStatus)[status]\r\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\r\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\r\n    ethersToSerializedBigNumber(winnersInBracket),\r\n  )\r\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\r\n\r\n  return {\r\n    isLoading: false,\r\n    lotteryId,\r\n    status: LotteryStatus[statusKey],\r\n    startTime: startTime?.toString(),\r\n    endTime: endTime?.toString(),\r\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\r\n    discountDivisor: discountDivisor?.toString(),\r\n    treasuryFee: treasuryFee?.toString(),\r\n    firstTicketId: firstTicketId?.toString(),\r\n    lastTicketId: lastTicketId?.toString(),\r\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\r\n    finalNumber,\r\n    cakePerBracket: serializedCakePerBracket,\r\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\r\n    rewardsBreakdown: serializedRewardsBreakdown,\r\n  }\r\n}\r\n\r\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\r\n  return {\r\n    isLoading: true,\r\n    lotteryId,\r\n    status: LotteryStatus.PENDING,\r\n    startTime: '',\r\n    endTime: '',\r\n    priceTicketInCake: '',\r\n    discountDivisor: '',\r\n    treasuryFee: '',\r\n    firstTicketId: '',\r\n    lastTicketId: '',\r\n    amountCollectedInCake: '',\r\n    finalNumber: null,\r\n    cakePerBracket: [],\r\n    countWinnersPerBracket: [],\r\n    rewardsBreakdown: [],\r\n  }\r\n}\r\n\r\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\r\n  try {\r\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\r\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\r\n  } catch (error) {\r\n    return processViewLotteryErrorResponse(lotteryId)\r\n  }\r\n}\r\n\r\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\r\n  const calls = lotteryIds.map((id) => ({\r\n    name: 'viewLottery',\r\n    address: getLotteryV2Address(),\r\n    params: [id],\r\n  }))\r\n  try {\r\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\r\n    const processedResponses = multicallRes.map((res, index) =>\r\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\r\n    )\r\n    return processedResponses\r\n  } catch (error) {\r\n    console.error(error)\r\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\r\n  }\r\n}\r\n\r\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\r\n  try {\r\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\r\n      address: getLotteryV2Address(),\r\n      name: method,\r\n    }))\r\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\r\n      lotteryV2Abi,\r\n      calls,\r\n    )) as ethers.BigNumber[][]\r\n\r\n    return {\r\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\r\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      currentLotteryId: null,\r\n      maxNumberTicketsPerBuyOrClaim: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\r\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\r\n  const roundIds = []\r\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\r\n    roundIds.push(currentIdAsInt - i)\r\n  }\r\n  return roundIds.map((roundId) => roundId.toString())\r\n}\r\n\r\nexport const useProcessLotteryResponse = (\r\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\r\n): LotteryRound => {\r\n  const {\r\n    priceTicketInCake: priceTicketInCakeAsString,\r\n    discountDivisor: discountDivisorAsString,\r\n    amountCollectedInCake: amountCollectedInCakeAsString,\r\n  } = lotteryData\r\n\r\n  const discountDivisor = useMemo(() => {\r\n    return new BigNumber(discountDivisorAsString)\r\n  }, [discountDivisorAsString])\r\n\r\n  const priceTicketInCake = useMemo(() => {\r\n    return new BigNumber(priceTicketInCakeAsString)\r\n  }, [priceTicketInCakeAsString])\r\n\r\n  const amountCollectedInCake = useMemo(() => {\r\n    return new BigNumber(amountCollectedInCakeAsString)\r\n  }, [amountCollectedInCakeAsString])\r\n\r\n  return {\r\n    isLoading: lotteryData.isLoading,\r\n    lotteryId: lotteryData.lotteryId,\r\n    userTickets: lotteryData.userTickets,\r\n    status: lotteryData.status,\r\n    startTime: lotteryData.startTime,\r\n    endTime: lotteryData.endTime,\r\n    priceTicketInCake,\r\n    discountDivisor,\r\n    treasuryFee: lotteryData.treasuryFee,\r\n    firstTicketId: lotteryData.firstTicketId,\r\n    lastTicketId: lotteryData.lastTicketId,\r\n    amountCollectedInCake,\r\n    finalNumber: lotteryData.finalNumber,\r\n    cakePerBracket: lotteryData.cakePerBracket,\r\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\r\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\r\n  }\r\n}\r\n\r\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\r\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\r\n  return claimedTickets.length > 0\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\r\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\r\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\r\n\r\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\r\n\r\n/* eslint-disable camelcase */\r\ntype LotteriesWhere = { id_in?: string[] }\r\n\r\nconst applyNodeDataToLotteriesGraphResponse = (\r\n  nodeData: LotteryResponse[],\r\n  graphResponse: LotteryRoundGraphEntity[],\r\n): LotteryRoundGraphEntity[] => {\r\n  //   If no graph response - return node data\r\n  if (graphResponse.length === 0) {\r\n    return nodeData.map((nodeRound) => {\r\n      return {\r\n        endTime: nodeRound.endTime,\r\n        finalNumber: nodeRound.finalNumber.toString(),\r\n        startTime: nodeRound.startTime,\r\n        status: nodeRound.status,\r\n        id: nodeRound.lotteryId.toString(),\r\n        ticketPrice: nodeRound.priceTicketInCake,\r\n        totalTickets: '',\r\n        totalUsers: '',\r\n        winningTickets: '',\r\n      }\r\n    })\r\n  }\r\n\r\n  // Populate all nodeRound data with supplementary graphResponse round data when available\r\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\r\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\r\n    return {\r\n      endTime: nodeRoundData.endTime,\r\n      finalNumber: nodeRoundData.finalNumber.toString(),\r\n      startTime: nodeRoundData.startTime,\r\n      status: nodeRoundData.status,\r\n      id: nodeRoundData.lotteryId,\r\n      ticketPrice: graphRoundData?.ticketPrice,\r\n      totalTickets: graphRoundData?.totalTickets,\r\n      totalUsers: graphRoundData?.totalUsers,\r\n      winningTickets: graphRoundData?.winningTickets,\r\n    }\r\n  })\r\n\r\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\r\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\r\n  const lastCombinedDataRoundIndex = graphResponse\r\n    .map((graphRound) => graphRound?.id)\r\n    .indexOf(lastCombinedDataRound?.id)\r\n\r\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\r\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\r\n  return mergedResponse\r\n}\r\n\r\nexport const getGraphLotteries = async (\r\n  first = MAX_LOTTERIES_REQUEST_SIZE,\r\n  skip = 0,\r\n  where: LotteriesWhere = {},\r\n): Promise<LotteryRoundGraphEntity[]> => {\r\n  try {\r\n    const response = await request(\r\n      GRAPH_API_LOTTERY,\r\n      gql`\r\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\r\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\r\n            id\r\n            totalUsers\r\n            totalTickets\r\n            winningTickets\r\n            status\r\n            finalNumber\r\n            startTime\r\n            endTime\r\n            ticketPrice\r\n          }\r\n        }\r\n      `,\r\n      { skip, first, where },\r\n    )\r\n    return response.lotteries\r\n  } catch (error) {\r\n    console.error(error)\r\n    return []\r\n  }\r\n}\r\n\r\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\r\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\r\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\r\n  const graphResponse = await getGraphLotteries()\r\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\r\n  return mergedData\r\n}\r\n\r\nexport default getLotteriesData\r\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\r\nimport { LotteryTicket } from 'config/constants/types'\r\nimport { UserTicketsResponse } from 'state/types'\r\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\r\n\r\nconst lotteryContract = getLotteryV2Contract()\r\n\r\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\r\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\r\n\r\n  if (ticketIds?.length > 0) {\r\n    return ticketIds.map((ticketId, index) => {\r\n      return {\r\n        id: ticketId.toString(),\r\n        number: ticketNumbers[index].toString(),\r\n        status: ticketStatuses[index],\r\n      }\r\n    })\r\n  }\r\n  return []\r\n}\r\n\r\nexport const viewUserInfoForLotteryId = async (\r\n  account: string,\r\n  lotteryId: string,\r\n  cursor: number,\r\n  perRequestLimit: number,\r\n): Promise<LotteryTicket[]> => {\r\n  try {\r\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\r\n    return processRawTicketsResponse(data)\r\n  } catch (error) {\r\n    console.error('viewUserInfoForLotteryId', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\r\n  let cursor = 0\r\n  let numReturned = TICKET_LIMIT_PER_REQUEST\r\n  const ticketData = []\r\n\r\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\r\n    // eslint-disable-next-line no-await-in-loop\r\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\r\n    cursor += TICKET_LIMIT_PER_REQUEST\r\n    numReturned = response.length\r\n    ticketData.push(...response)\r\n  }\r\n\r\n  return ticketData\r\n}\r\n\r\nexport const fetchUserTicketsForMultipleRounds = async (\r\n  idsToCheck: string[],\r\n  account: string,\r\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\r\n  const ticketsForMultipleRounds = []\r\n  for (let i = 0; i < idsToCheck.length; i += 1) {\r\n    const roundId = idsToCheck[i]\r\n    // eslint-disable-next-line no-await-in-loop\r\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\r\n    ticketsForMultipleRounds.push({\r\n      roundId,\r\n      userTickets: ticketsForRound,\r\n    })\r\n  }\r\n  return ticketsForMultipleRounds\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\r\nimport { LotteryTicket } from 'config/constants/types'\r\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\r\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\r\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\r\n\r\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\r\n\r\n/* eslint-disable camelcase */\r\ntype UserLotteriesWhere = { lottery_in?: string[] }\r\n\r\nconst applyNodeDataToUserGraphResponse = (\r\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\r\n  userGraphData: UserRound[],\r\n  lotteryNodeData: LotteryResponse[],\r\n): UserRound[] => {\r\n  //   If no graph rounds response - return node data\r\n  if (userGraphData.length === 0) {\r\n    return lotteryNodeData.map((nodeRound) => {\r\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\r\n      return {\r\n        endTime: nodeRound.endTime,\r\n        status: nodeRound.status,\r\n        lotteryId: nodeRound.lotteryId.toString(),\r\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\r\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\r\n        tickets: ticketDataForRound.userTickets,\r\n      }\r\n    })\r\n  }\r\n\r\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\r\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\r\n    const userGraphRound = userGraphData.find(\r\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\r\n    )\r\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\r\n    return {\r\n      endTime: nodeRoundData.endTime,\r\n      status: nodeRoundData.status,\r\n      lotteryId: nodeRoundData.lotteryId.toString(),\r\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\r\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\r\n      tickets: userNodeRound.userTickets,\r\n    }\r\n  })\r\n\r\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\r\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\r\n  const lastCombinedDataRoundIndex = userGraphData\r\n    .map((graphRound) => graphRound?.lotteryId)\r\n    .indexOf(lastCombinedDataRound?.lotteryId)\r\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\r\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\r\n  return mergedResponse\r\n}\r\n\r\nexport const getGraphLotteryUser = async (\r\n  account: string,\r\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\r\n  skip = 0,\r\n  where: UserLotteriesWhere = {},\r\n): Promise<LotteryUserGraphEntity> => {\r\n  let user\r\n  const blankUser = {\r\n    account,\r\n    totalCake: '',\r\n    totalTickets: '',\r\n    rounds: [],\r\n  }\r\n\r\n  try {\r\n    const response = await request(\r\n      GRAPH_API_LOTTERY,\r\n      gql`\r\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\r\n          user(id: $account) {\r\n            id\r\n            totalTickets\r\n            totalCake\r\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\r\n              id\r\n              lottery {\r\n                id\r\n                endTime\r\n                status\r\n              }\r\n              claimed\r\n              totalTickets\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      { account: account.toLowerCase(), first, skip, where },\r\n    )\r\n    const userRes = response.user\r\n\r\n    // If no user returned - return blank user\r\n    if (!userRes) {\r\n      user = blankUser\r\n    } else {\r\n      user = {\r\n        account: userRes.id,\r\n        totalCake: userRes.totalCake,\r\n        totalTickets: userRes.totalTickets,\r\n        rounds: userRes.rounds.map((round) => {\r\n          return {\r\n            lotteryId: round?.lottery?.id,\r\n            endTime: round?.lottery?.endTime,\r\n            claimed: round?.claimed,\r\n            totalTickets: round?.totalTickets,\r\n            status: round?.lottery?.status.toLowerCase(),\r\n          }\r\n        }),\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error)\r\n    user = blankUser\r\n  }\r\n\r\n  return user\r\n}\r\n\r\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\r\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\r\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\r\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\r\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\r\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\r\n  const graphResponse = await getGraphLotteryUser(account)\r\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\r\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\r\n  return graphResponseWithNodeRounds\r\n}\r\n\r\nexport default getUserLotteryData\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\r\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\r\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\r\nimport getLotteriesData from './getLotteriesData'\r\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\r\n\r\ninterface PublicLotteryData {\r\n  currentLotteryId: string\r\n  maxNumberTicketsPerBuyOrClaim: string\r\n}\r\n\r\nconst initialState: LotteryState = {\r\n  currentLotteryId: null,\r\n  isTransitioning: false,\r\n  maxNumberTicketsPerBuyOrClaim: null,\r\n  currentRound: {\r\n    isLoading: true,\r\n    lotteryId: null,\r\n    status: LotteryStatus.PENDING,\r\n    startTime: '',\r\n    endTime: '',\r\n    priceTicketInCake: '',\r\n    discountDivisor: '',\r\n    treasuryFee: '',\r\n    firstTicketId: '',\r\n    lastTicketId: '',\r\n    amountCollectedInCake: '',\r\n    finalNumber: null,\r\n    cakePerBracket: [],\r\n    countWinnersPerBracket: [],\r\n    rewardsBreakdown: [],\r\n    userTickets: {\r\n      isLoading: true,\r\n      tickets: [],\r\n    },\r\n  },\r\n  lotteriesData: null,\r\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\r\n}\r\n\r\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\r\n  'lottery/fetchCurrentLottery',\r\n  async ({ currentLotteryId }) => {\r\n    const lotteryInfo = await fetchLottery(currentLotteryId)\r\n    return lotteryInfo\r\n  },\r\n)\r\n\r\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\r\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\r\n  return currentIdAndMaxBuy\r\n})\r\n\r\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\r\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\r\n  { account: string; currentLotteryId: string }\r\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\r\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\r\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\r\n  const userTickets = userParticipationInCurrentRound?.tickets\r\n\r\n  // User has not bought tickets for the current lottery, or there has been an error\r\n  if (!userTickets || userTickets.length === 0) {\r\n    return { userTickets: null, userLotteries: userLotteriesRes }\r\n  }\r\n\r\n  return { userTickets, userLotteries: userLotteriesRes }\r\n})\r\n\r\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\r\n  'lottery/fetchPublicLotteries',\r\n  async ({ currentLotteryId }) => {\r\n    const lotteries = await getLotteriesData(currentLotteryId)\r\n    return lotteries\r\n  },\r\n)\r\n\r\nexport const fetchUserLotteries = createAsyncThunk<\r\n  LotteryUserGraphEntity,\r\n  { account: string; currentLotteryId: string }\r\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\r\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\r\n  return userLotteries\r\n})\r\n\r\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\r\n  LotteryUserGraphEntity,\r\n  { account: string; skip?: number }\r\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\r\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\r\n  return additionalUserLotteries\r\n})\r\n\r\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\r\n  `lottery/setIsTransitioning`,\r\n  async ({ isTransitioning }) => {\r\n    return { isTransitioning }\r\n  },\r\n)\r\n\r\nexport const LotterySlice = createSlice({\r\n  name: 'Lottery',\r\n  initialState,\r\n  reducers: {\r\n    setLotteryPublicData: (state, action) => {\r\n      state = action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\r\n      state.currentRound = { ...state.currentRound, ...action.payload }\r\n    })\r\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\r\n      state.currentLotteryId = action.payload.currentLotteryId\r\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\r\n    })\r\n    builder.addCase(\r\n      fetchUserTicketsAndLotteries.fulfilled,\r\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\r\n        state.currentRound.userTickets.isLoading = false\r\n        state.currentRound.userTickets.tickets = action.payload.userTickets\r\n        state.userLotteryData = action.payload.userLotteries\r\n      },\r\n    )\r\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\r\n      state.lotteriesData = action.payload\r\n    })\r\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\r\n      state.userLotteryData = action.payload\r\n    })\r\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\r\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\r\n      state.userLotteryData.rounds = mergedRounds\r\n    })\r\n    builder.addCase(\r\n      setLotteryIsTransitioning.fulfilled,\r\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\r\n        state.isTransitioning = action.payload.isTransitioning\r\n      },\r\n    )\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setLotteryPublicData } = LotterySlice.actions\r\n\r\nexport default LotterySlice.reducer\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { Transaction } from 'state/info/types'\r\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\r\n\r\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\r\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\r\n  'info/protocol/updateProtocolChartData',\r\n)\r\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\r\n  'info/protocol/updateProtocolTransactions',\r\n)\r\n\r\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\r\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\r\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\r\n  'info/pools/updatePoolChartData',\r\n)\r\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\r\n  'info/pools/updatePoolTransactions',\r\n)\r\n\r\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\r\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\r\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\r\n  'info/tokens/addTokenPoolAddresses',\r\n)\r\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\r\n  'info/tokens/updateTokenChartData',\r\n)\r\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\r\n  'info/tokens/updateTokenTransactions',\r\n)\r\nexport const updateTokenPriceData = createAction<{\r\n  tokenAddress: string\r\n  secondsInterval: number\r\n  priceData?: PriceChartEntry[]\r\n  oldestFetchedTimestamp: number\r\n}>('info/tokens/updateTokenPriceData')\r\n","/* eslint-disable no-param-reassign */\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { InfoState } from './types'\r\nimport {\r\n  updateProtocolData,\r\n  updateProtocolChartData,\r\n  updateProtocolTransactions,\r\n  updatePoolData,\r\n  addPoolKeys,\r\n  updatePoolChartData,\r\n  updatePoolTransactions,\r\n  updateTokenData,\r\n  addTokenKeys,\r\n  addTokenPoolAddresses,\r\n  updateTokenChartData,\r\n  updateTokenPriceData,\r\n  updateTokenTransactions,\r\n} from './actions'\r\n\r\nconst initialState: InfoState = {\r\n  protocol: {\r\n    overview: undefined,\r\n    chartData: undefined,\r\n    transactions: undefined,\r\n  },\r\n  pools: { byAddress: {} },\r\n  tokens: { byAddress: {} },\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    // Protocol actions\r\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\r\n      state.protocol.overview = protocolData\r\n    })\r\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\r\n      state.protocol.chartData = chartData\r\n    })\r\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\r\n      state.protocol.transactions = transactions\r\n    })\r\n    // Pools actions\r\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\r\n      pools.forEach((poolData) => {\r\n        state.pools.byAddress[poolData.address] = {\r\n          ...state.pools.byAddress[poolData.address],\r\n          data: poolData,\r\n        }\r\n      })\r\n    })\r\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\r\n      poolAddresses.forEach((address) => {\r\n        if (!state.pools.byAddress[address]) {\r\n          state.pools.byAddress[address] = {\r\n            data: undefined,\r\n            chartData: undefined,\r\n            transactions: undefined,\r\n          }\r\n        }\r\n      })\r\n    })\r\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\r\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\r\n    })\r\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\r\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\r\n    })\r\n    // Tokens actions\r\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\r\n      tokens.forEach((tokenData) => {\r\n        state.tokens.byAddress[tokenData.address] = {\r\n          ...state.tokens.byAddress[tokenData.address],\r\n          data: tokenData,\r\n        }\r\n      })\r\n    })\r\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\r\n      tokenAddresses.forEach((address) => {\r\n        if (!state.tokens.byAddress[address]) {\r\n          state.tokens.byAddress[address] = {\r\n            poolAddresses: undefined,\r\n            data: undefined,\r\n            chartData: undefined,\r\n            priceData: {},\r\n            transactions: undefined,\r\n          }\r\n        }\r\n      })\r\n    })\r\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\r\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\r\n    })\r\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\r\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\r\n    })\r\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\r\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\r\n    })\r\n    .addCase(\r\n      updateTokenPriceData,\r\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\r\n        state.tokens.byAddress[tokenAddress] = {\r\n          ...state.tokens.byAddress[tokenAddress],\r\n          priceData: {\r\n            ...state.tokens.byAddress[tokenAddress].priceData,\r\n            [secondsInterval]: priceData,\r\n            oldestFetchedTimestamp,\r\n          },\r\n        }\r\n      },\r\n    ),\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion')\r\n\r\nexport default updateVersion\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { SerializedToken } from 'config/constants/types'\r\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  addWatchlistPool,\r\n  addWatchlistToken,\r\n  FarmStakedOnly,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  muteAudio,\r\n  toggleTheme,\r\n  unmuteAudio,\r\n  updateGasPrice,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserFarmStakedOnly,\r\n  updateUserFarmsViewMode,\r\n  updateUserPoolStakedOnly,\r\n  updateUserPoolsViewMode,\r\n  updateUserSingleHopOnly,\r\n  updateUserSlippageTolerance,\r\n  ViewMode,\r\n  updateUserPredictionAcceptedRisk,\r\n  updateUserPredictionChartDisclaimerShow,\r\n  updateUserUsernameVisibility,\r\n  updateUserExpertModeAcknowledgementShow,\r\n} from './actions'\r\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number\r\n\r\n  userExpertMode: boolean\r\n\r\n  // only allow swaps on direct pairs\r\n  userSingleHopOnly: boolean\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken\r\n    }\r\n  }\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair\r\n    }\r\n  }\r\n\r\n  timestamp: number\r\n  audioPlay: boolean\r\n  isDark: boolean\r\n  userFarmStakedOnly: FarmStakedOnly\r\n  userPoolStakedOnly: boolean\r\n  userPoolsViewMode: ViewMode\r\n  userFarmsViewMode: ViewMode\r\n  userPredictionAcceptedRisk: boolean\r\n  userPredictionChartDisclaimerShow: boolean\r\n  userExpertModeAcknowledgementShow: boolean\r\n  userUsernameVisibility: boolean\r\n  gasPrice: string\r\n  watchlistTokens: string[]\r\n  watchlistPools: string[]\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userExpertMode: false,\r\n  userSingleHopOnly: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  audioPlay: true,\r\n  isDark: false,\r\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\r\n  userPoolStakedOnly: false,\r\n  userPoolsViewMode: ViewMode.TABLE,\r\n  userFarmsViewMode: ViewMode.TABLE,\r\n  userPredictionAcceptedRisk: false,\r\n  userPredictionChartDisclaimerShow: true,\r\n  userExpertModeAcknowledgementShow: true,\r\n  userUsernameVisibility: false,\r\n  gasPrice: GAS_PRICE_GWEI.default,\r\n  watchlistTokens: [],\r\n  watchlistPools: [],\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSingleHopOnly, (state, action) => {\r\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[chainId] = state.tokens[chainId] || {}\r\n      delete state.tokens[chainId][address]\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const { chainId } = serializedPair.token0\r\n        state.pairs[chainId] = state.pairs[chainId] || {}\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(muteAudio, (state) => {\r\n      state.audioPlay = false\r\n    })\r\n    .addCase(unmuteAudio, (state) => {\r\n      state.audioPlay = true\r\n    })\r\n    .addCase(toggleTheme, (state) => {\r\n      state.isDark = !state.isDark\r\n    })\r\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\r\n      state.userFarmStakedOnly = userFarmStakedOnly\r\n    })\r\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\r\n      state.userPoolStakedOnly = userPoolStakedOnly\r\n    })\r\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\r\n      state.userPoolsViewMode = userPoolsViewMode\r\n    })\r\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\r\n      state.userFarmsViewMode = userFarmsViewMode\r\n    })\r\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\r\n      state.userPredictionAcceptedRisk = userAcceptedRisk\r\n    })\r\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\r\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\r\n    })\r\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\r\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\r\n    })\r\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\r\n      state.userUsernameVisibility = userUsernameVisibility\r\n    })\r\n    .addCase(updateGasPrice, (state, action) => {\r\n      state.gasPrice = action.payload.gasPrice\r\n    })\r\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\r\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\r\n      const tokenWatchlist = state.watchlistTokens ?? []\r\n      if (!tokenWatchlist.includes(address)) {\r\n        state.watchlistTokens = [...tokenWatchlist, address]\r\n      } else {\r\n        // Remove token from watchlist\r\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\r\n        state.watchlistTokens = newTokens\r\n      }\r\n    })\r\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\r\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\r\n      const poolsWatchlist = state.watchlistPools ?? []\r\n      if (!poolsWatchlist.includes(address)) {\r\n        state.watchlistPools = [...poolsWatchlist, address]\r\n      } else {\r\n        // Remove pool from watchlist\r\n        const newPools = state.watchlistPools.filter((x) => x !== address)\r\n        state.watchlistPools = newPools\r\n      }\r\n    }),\r\n)\r\n","/* eslint-disable no-param-reassign */\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addTransaction,\r\n  checkedTransaction,\r\n  clearAllTransactions,\r\n  finalizeTransaction,\r\n  SerializableTransactionReceipt,\r\n} from './actions'\r\n\r\nconst now = () => new Date().getTime()\r\n\r\nexport interface TransactionDetails {\r\n  hash: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  summary?: string\r\n  claim?: { recipient: string }\r\n  receipt?: SerializableTransactionReceipt\r\n  lastCheckedBlockNumber?: number\r\n  addedTime: number\r\n  confirmedTime?: number\r\n  from: string\r\n}\r\n\r\nexport interface TransactionState {\r\n  [chainId: number]: {\r\n    [txHash: string]: TransactionDetails\r\n  }\r\n}\r\n\r\nexport const initialState: TransactionState = {}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\r\n      if (transactions[chainId]?.[hash]) {\r\n        throw Error('Attempted to add existing transaction.')\r\n      }\r\n      const txs = transactions[chainId] ?? {}\r\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\r\n      transactions[chainId] = txs\r\n    })\r\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n      if (!transactions[chainId]) return\r\n      transactions[chainId] = {}\r\n    })\r\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      if (!tx.lastCheckedBlockNumber) {\r\n        tx.lastCheckedBlockNumber = blockNumber\r\n      } else {\r\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\r\n      }\r\n    })\r\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      tx.receipt = receipt\r\n      tx.confirmedTime = now()\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\n\r\nexport interface SwapState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly [Field.INPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  readonly [Field.OUTPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  // the typed recipient address or ENS name, or null if swap should go to sender\r\n  readonly recipient: string | null\r\n}\r\n\r\nconst initialState: SwapState = {\r\n  independentField: Field.INPUT,\r\n  typedValue: '',\r\n  [Field.INPUT]: {\r\n    currencyId: '',\r\n  },\r\n  [Field.OUTPUT]: {\r\n    currencyId: '',\r\n  },\r\n  recipient: null,\r\n}\r\n\r\nexport default createReducer<SwapState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(\r\n      replaceSwapState,\r\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\r\n        return {\r\n          [Field.INPUT]: {\r\n            currencyId: inputCurrencyId,\r\n          },\r\n          [Field.OUTPUT]: {\r\n            currencyId: outputCurrencyId,\r\n          },\r\n          independentField: field,\r\n          typedValue,\r\n          recipient,\r\n        }\r\n      },\r\n    )\r\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\r\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n      if (currencyId === state[otherField].currencyId) {\r\n        // the case where we have to swap the order\r\n        return {\r\n          ...state,\r\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n          [field]: { currencyId },\r\n          [otherField]: { currencyId: state[field].currencyId },\r\n        }\r\n      }\r\n      // the normal case\r\n      return {\r\n        ...state,\r\n        [field]: { currencyId },\r\n      }\r\n    })\r\n    .addCase(switchCurrencies, (state) => {\r\n      return {\r\n        ...state,\r\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\r\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\r\n      }\r\n    })\r\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n      }\r\n    })\r\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\r\n      state.recipient = recipient\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, resetMintState, typeInput } from './actions'\r\n\r\nexport interface MintState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly otherTypedValue: string // for the case when there's no liquidity\r\n}\r\n\r\nconst initialState: MintState = {\r\n  independentField: Field.CURRENCY_A,\r\n  typedValue: '',\r\n  otherTypedValue: '',\r\n}\r\n\r\nexport default createReducer<MintState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(resetMintState, () => initialState)\r\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\r\n      if (noLiquidity) {\r\n        // they're typing into the field they've last typed in\r\n        if (field === state.independentField) {\r\n          return {\r\n            ...state,\r\n            independentField: field,\r\n            typedValue,\r\n          }\r\n        }\r\n        // they're typing into a new field, store the other value\r\n\r\n        return {\r\n          ...state,\r\n          independentField: field,\r\n          typedValue,\r\n          otherTypedValue: state.typedValue,\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n        otherTypedValue: '',\r\n      }\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { TokenList } from '@uniswap/token-lists/dist/types'\r\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\r\n\r\nimport { updateVersion } from '../global/actions'\r\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\r\n\r\nexport interface ListsState {\r\n  readonly byUrl: {\r\n    readonly [url: string]: {\r\n      readonly current: TokenList | null\r\n      readonly pendingUpdate: TokenList | null\r\n      readonly loadingRequestId: string | null\r\n      readonly error: string | null\r\n    }\r\n  }\r\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\r\n  readonly lastInitializedDefaultListOfLists?: string[]\r\n\r\n  // currently active lists\r\n  readonly activeListUrls: string[] | undefined\r\n}\r\n\r\ntype ListState = ListsState['byUrl'][string]\r\n\r\nconst NEW_LIST_STATE: ListState = {\r\n  error: null,\r\n  current: null,\r\n  loadingRequestId: null,\r\n  pendingUpdate: null,\r\n}\r\n\r\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\r\n\r\nconst initialState: ListsState = {\r\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\r\n  byUrl: {\r\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\r\n      memo[listUrl] = NEW_LIST_STATE\r\n      return memo\r\n    }, {}),\r\n  },\r\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\r\n      state.byUrl[url] = {\r\n        current: null,\r\n        pendingUpdate: null,\r\n        ...state.byUrl[url],\r\n        loadingRequestId: requestId,\r\n        error: null,\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\r\n      const current = state.byUrl[url]?.current\r\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\r\n\r\n      // no-op if update does nothing\r\n      if (current) {\r\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\r\n\r\n        if (upgradeType === VersionUpgrade.NONE) return\r\n        if (loadingRequestId === null || loadingRequestId === requestId) {\r\n          state.byUrl[url] = {\r\n            ...state.byUrl[url],\r\n            loadingRequestId: null,\r\n            error: null,\r\n            current,\r\n            pendingUpdate: tokenList,\r\n          }\r\n        }\r\n      } else {\r\n        // activate if on default active\r\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\r\n          state.activeListUrls?.push(url)\r\n        }\r\n\r\n        state.byUrl[url] = {\r\n          ...state.byUrl[url],\r\n          loadingRequestId: null,\r\n          error: null,\r\n          current: tokenList,\r\n          pendingUpdate: null,\r\n        }\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\r\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\r\n        // no-op since it's not the latest request\r\n        return\r\n      }\r\n\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        loadingRequestId: null,\r\n        error: errorMessage,\r\n        current: null,\r\n        pendingUpdate: null,\r\n      }\r\n    })\r\n    .addCase(addList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n    })\r\n    .addCase(removeList, (state, { payload: url }) => {\r\n      if (state.byUrl[url]) {\r\n        delete state.byUrl[url]\r\n      }\r\n      // remove list from active urls if needed\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n      }\r\n    })\r\n    .addCase(enableList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n\r\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\r\n        state.activeListUrls.push(url)\r\n      }\r\n\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = [url]\r\n      }\r\n    })\r\n    .addCase(disableList, (state, { payload: url }) => {\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n      }\r\n    })\r\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]?.pendingUpdate) {\r\n        throw new Error('accept list update called without pending update')\r\n      }\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        pendingUpdate: null,\r\n        current: state.byUrl[url].pendingUpdate,\r\n      }\r\n    })\r\n    .addCase(updateVersion, (state) => {\r\n      // state loaded from localStorage, but new lists have never been initialized\r\n      if (!state.lastInitializedDefaultListOfLists) {\r\n        state.byUrl = initialState.byUrl\r\n        state.activeListUrls = initialState.activeListUrls\r\n      } else if (state.lastInitializedDefaultListOfLists) {\r\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\r\n          (s, l) => s.add(l),\r\n          new Set(),\r\n        )\r\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\r\n\r\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\r\n          if (!lastInitializedSet.has(listUrl)) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n        })\r\n\r\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\r\n          if (!newListOfListsSet.has(listUrl)) {\r\n            delete state.byUrl[listUrl]\r\n          }\r\n        })\r\n      }\r\n\r\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\r\n\r\n      // if no active lists, activate defaults\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\r\n\r\n        // for each list on default list, initialize if needed\r\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\r\n          if (!state.byUrl[listUrl]) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n          return true\r\n        })\r\n      }\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport interface BurnState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n}\r\n\r\nconst initialState: BurnState = {\r\n  independentField: Field.LIQUIDITY_PERCENT,\r\n  typedValue: '0',\r\n}\r\n\r\nexport default createReducer<BurnState>(initialState, (builder) =>\r\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n    return {\r\n      ...state,\r\n      independentField: field,\r\n      typedValue,\r\n    }\r\n  }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number\r\n      }\r\n    }\r\n  }\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null\r\n        blockNumber?: number\r\n        fetchingBlockNumber?: number\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {},\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n      listeners[chainId] = listeners[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\r\n      })\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {})\r\n\r\n        if (!listeners[chainId]) return\r\n        calls.forEach((call) => {\r\n          const callKey = toCallKey(call)\r\n          if (!listeners[chainId][callKey]) return\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch]\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--\r\n          }\r\n        })\r\n      },\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber,\r\n          }\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) return // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber\r\n          current.data = null\r\n          current.blockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      Object.keys(results).forEach((callKey) => {\r\n        const current = state.callResults[chainId][callKey]\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber,\r\n        }\r\n      })\r\n    }),\r\n)\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { save, load } from 'redux-localstorage-simple'\r\nimport { useDispatch } from 'react-redux'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\nimport predictionsReducer from './predictions'\r\nimport profileReducer from './profile'\r\nimport teamsReducer from './teams'\r\nimport achievementsReducer from './achievements'\r\nimport blockReducer from './block'\r\nimport collectiblesReducer from './collectibles'\r\nimport votingReducer from './voting'\r\nimport lotteryReducer from './lottery'\r\nimport infoReducer from './info'\r\nimport { updateVersion } from './global/actions'\r\nimport user from './user/reducer'\r\nimport transactions from './transactions/reducer'\r\nimport swap from './swap/reducer'\r\nimport mint from './mint/reducer'\r\nimport lists from './lists/reducer'\r\nimport burn from './burn/reducer'\r\nimport multicall from './multicall/reducer'\r\n\r\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile', 'collectibles']\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    achievements: achievementsReducer,\r\n    block: blockReducer,\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n    predictions: predictionsReducer,\r\n    profile: profileReducer,\r\n    teams: teamsReducer,\r\n    collectibles: collectiblesReducer,\r\n    voting: votingReducer,\r\n    lottery: lotteryReducer,\r\n    info: infoReducer,\r\n\r\n    // Exchange\r\n    user,\r\n    transactions,\r\n    swap,\r\n    mint,\r\n    burn,\r\n    multicall,\r\n    lists,\r\n  },\r\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\r\n  preloadedState: load({ states: PERSISTED_KEYS }),\r\n})\r\n\r\nstore.dispatch(updateVersion())\r\n\r\n/**\r\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\r\n */\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport const useAppDispatch = () => useDispatch()\r\n\r\nexport default store\r\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\n\r\nimport { useTokenContract } from './useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\r\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\r\n\r\n  return useMemo(\r\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\r\n    [token, allowance],\r\n  )\r\n}\r\n\r\nexport default useTokenAllowance\r\n","import { MaxUint256 } from '@ethersproject/constants'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { ROUTER_ADDRESS } from '../config/constants'\r\nimport useTokenAllowance from './useTokenAllowance'\r\nimport { Field } from '../state/swap/actions'\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\r\nimport { calculateGasMargin } from '../utils'\r\nimport { useTokenContract } from './useContract'\r\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(\r\n  amountToApprove?: CurrencyAmount,\r\n  spender?: string,\r\n): [ApprovalState, () => Promise<void>] {\r\n  const { account } = useActiveWeb3React()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\r\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\r\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\r\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lessThan(amountToApprove)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED\r\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\r\n\r\n  const tokenContract = useTokenContract(token?.address)\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily')\r\n      return\r\n    }\r\n    if (!token) {\r\n      console.error('no token')\r\n      return\r\n    }\r\n\r\n    if (!tokenContract) {\r\n      console.error('tokenContract is null')\r\n      return\r\n    }\r\n\r\n    if (!amountToApprove) {\r\n      console.error('missing amount to approve')\r\n      return\r\n    }\r\n\r\n    if (!spender) {\r\n      console.error('no spender')\r\n      return\r\n    }\r\n\r\n    let useExact = false\r\n\r\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n      // general fallback for tokens who restrict approval amounts\r\n      useExact = true\r\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\r\n    })\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return callWithGasPrice(\r\n      tokenContract,\r\n      'approve',\r\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\r\n      {\r\n        gasLimit: calculateGasMargin(estimatedGas),\r\n      },\r\n    )\r\n      .then((response: TransactionResponse) => {\r\n        addTransaction(response, {\r\n          summary: `Approve ${amountToApprove.currency.symbol}`,\r\n          approval: { tokenAddress: token.address, spender },\r\n        })\r\n      })\r\n      .catch((error: Error) => {\r\n        console.error('Failed to approve token', error)\r\n        throw error\r\n      })\r\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\r\n\r\n  return [approvalState, approve]\r\n}\r\n\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\r\n  const amountToApprove = useMemo(\r\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\r\n    [trade, allowedSlippage],\r\n  )\r\n\r\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\r\n}\r\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\r\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\r\n\r\nexport const UNSUPPORTED_LIST_URLS: string[] = []\r\n\r\n// lower index == higher priority for token import\r\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\r\n  PANCAKE_TOP100,\r\n  PANCAKE_EXTENDED,\r\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\r\n]\r\n\r\n// default lists to be 'active' aka searched across\r\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\r\n","import { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\r\nimport { AppState } from '../index'\r\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\r\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\r\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\r\n\r\ntype TagDetails = Tags[keyof Tags]\r\nexport interface TagInfo extends TagDetails {\r\n  id: string\r\n}\r\n\r\n// use ordering of default list of lists to assign priority\r\nfunction sortByListPriority(urlA: string, urlB: string) {\r\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\r\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\r\n\r\n  // need reverse order to make sure mapping includes top priority last\r\n  if (first < second) return 1\r\n  if (first > second) return -1\r\n  return 0\r\n}\r\n\r\n/**\r\n * Token instances created from token info.\r\n */\r\nexport class WrappedTokenInfo extends Token {\r\n  public readonly tokenInfo: TokenInfo\r\n\r\n  public readonly tags: TagInfo[]\r\n\r\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\r\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\r\n    this.tokenInfo = tokenInfo\r\n    this.tags = tags\r\n  }\r\n\r\n  public get logoURI(): string | undefined {\r\n    return this.tokenInfo.logoURI\r\n  }\r\n}\r\n\r\nexport type TokenAddressMap = Readonly<\r\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\r\n>\r\n\r\n/**\r\n * An empty result, useful as a default.\r\n */\r\nconst EMPTY_LIST: TokenAddressMap = {\r\n  [ChainId.MAINNET]: {},\r\n  [ChainId.TESTNET]: {},\r\n}\r\n\r\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\r\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\r\n\r\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\r\n  const result = listCache?.get(list)\r\n  if (result) return result\r\n\r\n  const map = list.tokens.reduce<TokenAddressMap>(\r\n    (tokenMap, tokenInfo) => {\r\n      const tags: TagInfo[] =\r\n        tokenInfo.tags\r\n          ?.map((tagId) => {\r\n            if (!list.tags?.[tagId]) return undefined\r\n            return { ...list.tags[tagId], id: tagId }\r\n          })\r\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\r\n      const token = new WrappedTokenInfo(tokenInfo, tags)\r\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\r\n      return {\r\n        ...tokenMap,\r\n        [token.chainId]: {\r\n          ...tokenMap[token.chainId],\r\n          [token.address]: {\r\n            token,\r\n            list,\r\n          },\r\n        },\r\n      }\r\n    },\r\n    { ...EMPTY_LIST },\r\n  )\r\n  listCache?.set(list, map)\r\n  return map\r\n}\r\n\r\nexport function useAllLists(): {\r\n  readonly [url: string]: {\r\n    readonly current: TokenList | null\r\n    readonly pendingUpdate: TokenList | null\r\n    readonly loadingRequestId: string | null\r\n    readonly error: string | null\r\n  }\r\n} {\r\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n}\r\n\r\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\r\n  return {\r\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\r\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\r\n  }\r\n}\r\n\r\n// merge tokens contained within lists from urls\r\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\r\n  const lists = useAllLists()\r\n\r\n  return useMemo(() => {\r\n    if (!urls) return EMPTY_LIST\r\n\r\n    return (\r\n      urls\r\n        .slice()\r\n        // sort by priority so top priority goes last\r\n        .sort(sortByListPriority)\r\n        .reduce((allTokens, currentUrl) => {\r\n          const current = lists[currentUrl]?.current\r\n          if (!current) return allTokens\r\n          try {\r\n            const newTokens = Object.assign(listToTokenMap(current))\r\n            return combineMaps(allTokens, newTokens)\r\n          } catch (error) {\r\n            console.error('Could not show token list due to error', error)\r\n            return allTokens\r\n          }\r\n        }, EMPTY_LIST)\r\n    )\r\n  }, [lists, urls])\r\n}\r\n\r\n// filter out unsupported lists\r\nexport function useActiveListUrls(): string[] | undefined {\r\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\r\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\r\n  )\r\n}\r\n\r\nexport function useInactiveListUrls(): string[] {\r\n  const lists = useAllLists()\r\n  const allActiveListUrls = useActiveListUrls()\r\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\r\n}\r\n\r\n// get all the tokens from active lists, combine with local default tokens\r\nexport function useCombinedActiveList(): TokenAddressMap {\r\n  const activeListUrls = useActiveListUrls()\r\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\r\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\r\n  return combineMaps(activeTokens, defaultTokenMap)\r\n}\r\n\r\n// all tokens from inactive lists\r\nexport function useCombinedInactiveList(): TokenAddressMap {\r\n  const allInactiveListUrls: string[] = useInactiveListUrls()\r\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\r\n}\r\n\r\n// used to hide warnings on import for default tokens\r\nexport function useDefaultTokenList(): TokenAddressMap {\r\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\r\n}\r\n\r\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\r\nexport function useUnsupportedTokenList(): TokenAddressMap {\r\n  // get hard coded unsupported tokens\r\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\r\n\r\n  // get any loaded unsupported tokens\r\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\r\n\r\n  // format into one token address map\r\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\r\n}\r\n\r\nexport function useIsListActive(url: string): boolean {\r\n  const activeListUrls = useActiveListUrls()\r\n  return Boolean(activeListUrls?.includes(url))\r\n}\r\n","import React from 'react'\r\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\ninterface Props extends BoxProps {\r\n  text: string | React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nconst QuestionWrapper = styled.div`\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\r\n\r\n  return (\r\n    <Box {...props}>\r\n      {tooltipVisible && tooltip}\r\n      <QuestionWrapper ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\r\n      </QuestionWrapper>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default QuestionHelper\r\n","import BigNumber from 'bignumber.js'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\r\nimport lpAprs from 'config/constants/lpAprs.json'\r\n\r\n/**\r\n * Get the APR value in %\r\n * @param stakingTokenPrice Token price in the same quote currency\r\n * @param rewardTokenPrice Token price in the same quote currency\r\n * @param totalStaked Total amount of stakingToken in the pool\r\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\r\n * @returns Null if the APR is NaN or infinite.\r\n */\r\nexport const getPoolApr = (\r\n  stakingTokenPrice: number,\r\n  rewardTokenPrice: number,\r\n  totalStaked: number,\r\n  tokenPerBlock: number,\r\n): number => {\r\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\r\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\r\n}\r\n\r\n/**\r\n * Get farm APR value in %\r\n * @param poolWeight allocationPoint / totalAllocationPoint\r\n * @param cakePriceUsd Cake price in USD\r\n * @param poolLiquidityUsd Total pool liquidity in USD\r\n * @returns\r\n */\r\nexport const getFarmApr = (\r\n  poolWeight: BigNumber,\r\n  cakePriceUsd: BigNumber,\r\n  poolLiquidityUsd: BigNumber,\r\n  farmAddress: string,\r\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\r\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\r\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\r\n  let cakeRewardsAprAsNumber = null\r\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\r\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\r\n  }\r\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\r\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\r\n}\r\n\r\nexport default null\r\n","import BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.stakingToken.address,\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: tokens.wbnb.address,\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n\r\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\r\n  try {\r\n    const sousContract = getSouschefV2Contract(sousId)\r\n    const stakingLimit = await sousContract.poolLimitPerUser()\r\n    return new BigNumber(stakingLimit.toString())\r\n  } catch (error) {\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\nexport const fetchPoolsStakingLimits = async (\r\n  poolsWithStakingLimit: number[],\r\n): Promise<{ [key: string]: BigNumber }> => {\r\n  const validPools = poolsConfig\r\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\r\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\r\n\r\n  // Get the staking limit for each valid pool\r\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\r\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\r\n  const stakingLimits = await Promise.all(stakingLimitPromises)\r\n\r\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\r\n    return {\r\n      ...accum,\r\n      [validPools[index].sousId]: stakingLimit,\r\n    }\r\n  }, {})\r\n}\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterchefContract } from 'utils/contractHelpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'BNB')\r\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'BNB')\r\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 0)\r\nconst masterChefContract = getMasterchefContract()\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((pool) => ({\r\n    address: pool.stakingToken.address,\r\n    name: 'allowance',\r\n    params: [account, getAddress(pool.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((pool) => ({\r\n    address: pool.stakingToken.address,\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.pendingCake('0', account)\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nexport const fetchPublicVaultData = async () => {\r\n  try {\r\n    const calls = [\r\n      'getPricePerFullShare',\r\n      'totalShares',\r\n      'calculateHarvestCakeRewards',\r\n      'calculateTotalPendingCakeRewards',\r\n    ].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\r\n      cakeVaultAbi,\r\n      calls,\r\n    )\r\n\r\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\r\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\r\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\r\n    return {\r\n      totalShares: totalSharesAsBigNumber.toJSON(),\r\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\r\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\r\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\r\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      totalShares: null,\r\n      pricePerFullShare: null,\r\n      totalCakeInVault: null,\r\n      estimatedCakeBountyReward: null,\r\n      totalPendingCakeHarvest: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchVaultFees = async () => {\r\n  try {\r\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\r\n\r\n    return {\r\n      performanceFee: performanceFee.toNumber(),\r\n      callFee: callFee.toNumber(),\r\n      withdrawalFee: withdrawalFee.toNumber(),\r\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchPublicVaultData\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeVaultContract } from 'utils/contractHelpers'\r\n\r\nconst cakeVaultContract = getCakeVaultContract()\r\n\r\nconst fetchVaultUser = async (account: string) => {\r\n  try {\r\n    const userContractResponse = await cakeVaultContract.userInfo(account)\r\n    return {\r\n      isLoading: false,\r\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\r\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\r\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\r\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      isLoading: true,\r\n      userShares: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n      cakeAtLastUserAction: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchVaultUser\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { PoolsState, SerializedPool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\r\nimport { getPoolApr } from 'utils/apr'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\r\nimport fetchVaultUser from './fetchVaultUser'\r\nimport { getTokenPricesFromFarm } from './helpers'\r\n\r\nconst initialState: PoolsState = {\r\n  data: [...poolsConfig],\r\n  userDataLoaded: false,\r\n  cakeVault: {\r\n    totalShares: null,\r\n    pricePerFullShare: null,\r\n    totalCakeInVault: null,\r\n    estimatedCakeBountyReward: null,\r\n    totalPendingCakeHarvest: null,\r\n    fees: {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    },\r\n    userData: {\r\n      isLoading: true,\r\n      userShares: null,\r\n      cakeAtLastUserAction: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n    },\r\n  },\r\n}\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n\r\n  const prices = getTokenPricesFromFarm(getState().farms.data)\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\r\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\r\n\r\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\r\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\r\n\r\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\r\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\r\n    const apr = !isPoolFinished\r\n      ? getPoolApr(\r\n          stakingTokenPrice,\r\n          earningTokenPrice,\r\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\r\n          parseFloat(pool.tokenPerBlock),\r\n        )\r\n      : 0\r\n\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n      stakingTokenPrice,\r\n      earningTokenPrice,\r\n      apr,\r\n      isFinished: isPoolFinished,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\r\n  const poolsWithStakingLimit = getState()\r\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\r\n    .map((pool) => pool.sousId)\r\n\r\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\r\n\r\n  const stakingLimitData = poolsConfig.map((pool) => {\r\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\r\n      return { sousId: pool.sousId }\r\n    }\r\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\r\n    return {\r\n      sousId: pool.sousId,\r\n      stakingLimit: stakingLimit.toJSON(),\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(stakingLimitData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync =\r\n  (account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    const stakingTokenBalances = await fetchUserBalances(account)\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n    const userData = poolsConfig.map((pool) => ({\r\n      sousId: pool.sousId,\r\n      allowance: allowances[pool.sousId],\r\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n      stakedBalance: stakedBalances[pool.sousId],\r\n      pendingReward: pendingRewards[pool.sousId],\r\n    }))\r\n\r\n    dispatch(setPoolsUserData(userData))\r\n  }\r\n\r\nexport const updateUserAllowance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n  }\r\n\r\nexport const updateUserBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const tokenBalances = await fetchUserBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserStakedBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserPendingReward =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n  }\r\n\r\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\r\n  const publicVaultInfo = await fetchPublicVaultData()\r\n  return publicVaultInfo\r\n})\r\n\r\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\r\n  const vaultFees = await fetchVaultFees()\r\n  return vaultFees\r\n})\r\n\r\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\r\n  'cakeVault/fetchUser',\r\n  async ({ account }) => {\r\n    const userData = await fetchVaultUser(account)\r\n    return userData\r\n  },\r\n)\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: SerializedPool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n      state.userDataLoaded = true\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n\r\n      if (index >= 0) {\r\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Vault public data that updates frequently\r\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\r\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\r\n    })\r\n    // Vault fees\r\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\r\n      const fees = action.payload\r\n      state.cakeVault = { ...state.cakeVault, fees }\r\n    })\r\n    // Vault user data\r\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\r\n      const userData = action.payload\r\n      userData.isLoading = false\r\n      state.cakeVault = { ...state.cakeVault, userData }\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\nexport default PoolsSlice.reducer\r\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\n\r\nexport const fetchTokenList: Readonly<{\r\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\r\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\r\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\r\n}> = {\r\n  pending: createAction('lists/fetchTokenList/pending'),\r\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\r\n  rejected: createAction('lists/fetchTokenList/rejected'),\r\n}\r\n// add and remove from list options\r\nexport const addList = createAction<string>('lists/addList')\r\nexport const removeList = createAction<string>('lists/removeList')\r\n\r\n// select which lists to search across from loaded lists\r\nexport const enableList = createAction<string>('lists/enableList')\r\nexport const disableList = createAction<string>('lists/disableList')\r\n\r\n// versioning\r\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\r\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\r\n","import { CurrencyAmount, Fraction, JSBI, Percent, Price, TokenAmount, Trade } from '@pancakeswap/sdk'\r\nimport {\r\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\r\n  ALLOWED_PRICE_IMPACT_HIGH,\r\n  ALLOWED_PRICE_IMPACT_LOW,\r\n  ALLOWED_PRICE_IMPACT_MEDIUM,\r\n} from '../config/constants'\r\n\r\nimport { Field } from '../state/swap/actions'\r\nimport { basisPointsToPercent } from './index'\r\n\r\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\r\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\r\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\r\n\r\n// computes price breakdown for the trade\r\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\r\n  priceImpactWithoutFee: Percent | undefined\r\n  realizedLPFee: CurrencyAmount | undefined | null\r\n} {\r\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\r\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\r\n  const realizedLPFee = !trade\r\n    ? undefined\r\n    : ONE_HUNDRED_PERCENT.subtract(\r\n        trade.route.pairs.reduce<Fraction>(\r\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\r\n          ONE_HUNDRED_PERCENT,\r\n        ),\r\n      )\r\n\r\n  // remove lp fees from price impact\r\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\r\n\r\n  // the x*y=k impact\r\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\r\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\r\n    : undefined\r\n\r\n  // the amount of the input that accrues to LPs\r\n  const realizedLPFeeAmount =\r\n    realizedLPFee &&\r\n    trade &&\r\n    (trade.inputAmount instanceof TokenAmount\r\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\r\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\r\n\r\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\r\n}\r\n\r\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\r\nexport function computeSlippageAdjustedAmounts(\r\n  trade: Trade | undefined,\r\n  allowedSlippage: number,\r\n): { [field in Field]?: CurrencyAmount } {\r\n  const pct = basisPointsToPercent(allowedSlippage)\r\n  return {\r\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\r\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\r\n  }\r\n}\r\n\r\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\r\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\r\n  return 0\r\n}\r\n\r\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\r\n  if (!trade) {\r\n    return ''\r\n  }\r\n  return inverted\r\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\r\n        trade.outputAmount.currency.symbol\r\n      }`\r\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\r\n        trade.inputAmount.currency.symbol\r\n      }`\r\n}\r\n\r\n/**\r\n * Helper to multiply a Price object by an arbitrary amount\r\n */\r\nexport const multiplyPriceByAmount = (price: Price, amount: number, significantDigits = 18) => {\r\n  if (!price) {\r\n    return 0\r\n  }\r\n\r\n  return parseFloat(price.toSignificant(significantDigits)) * amount\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface Call {\r\n  address: string\r\n  callData: string\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`)\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`)\r\n  }\r\n  return `${call.address}-${call.callData}`\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-')\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`)\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1],\r\n  }\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners',\r\n)\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners',\r\n)\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults',\r\n)\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number\r\n  calls: Call[]\r\n  fetchingBlockNumber: number\r\n}>('multicall/errorFetchingMulticallResults')\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number\r\n  blockNumber: number\r\n  results: {\r\n    [callKey: string]: string | null\r\n  }\r\n}>('multicall/updateMulticallResults')\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { useThemeManager } from 'state/user/hooks'\r\n\r\nconst useTheme = () => {\r\n  const [isDark, toggleTheme] = useThemeManager()\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, theme, toggleTheme }\r\n}\r\n\r\nexport default useTheme\r\n","import { serializeTokens } from './tokens'\r\nimport { SerializedPoolConfig, PoolCategory } from './types'\r\n\r\nconst serializedTokens = serializeTokens()\r\n\r\nconst pools: SerializedPoolConfig[] = [\r\n  {\r\n    sousId: 0,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '10',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 220,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.chess,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4D1Ec426d0d7fb6bF344Dd372d0502EDD71c8d88',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0861',\r\n  },\r\n  {\r\n    sousId: 219,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tlos,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xCB41a72067c227D6Ed7bc7CFAcd13eCe47Dfe5E9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3616',\r\n  },\r\n  {\r\n    sousId: 218,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.stephero,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xcecba456fefe5b18d43df23419e7ab755b436655',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1851',\r\n  },\r\n  {\r\n    sousId: 217,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8ed7acf12b08274d5cdaf03d43d0e54bcbdd487e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.217',\r\n  },\r\n  {\r\n    sousId: 216,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cvp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC4b15117BC0be030c20754FF36197641477af5d1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.14',\r\n  },\r\n  {\r\n    sousId: 215,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.qbt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB72dEf58D0832f747d6B7197471Fe20AeA7EB463',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.412',\r\n  },\r\n  {\r\n    sousId: 214,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.naos,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb38b78529bCc895dA16CE2978D6cD6C56e8CfFC3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1736',\r\n  },\r\n  {\r\n    sousId: 213,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pha,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2E101b5F7f910F2609e5AcE5f43bD274b1DE09AA',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.28',\r\n  },\r\n  {\r\n    sousId: 212,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bel,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x52733Ad7b4D09BF613b0389045e33E2F287afa04',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.101',\r\n  },\r\n  {\r\n    sousId: 211,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x401b9b97bdbc3197c1adfab9652dc78040bd1e13',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.9837',\r\n  },\r\n  {\r\n    sousId: 210,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pots,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBeDb490970204cb3CC7B0fea94463BeD67d5364D',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0868',\r\n  },\r\n  {\r\n    sousId: 209,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tusd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb6e510ae2da1ab4e350f837c70823ab75091780e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.5787',\r\n  },\r\n  {\r\n    sousId: 208,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.revv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8aa5b2c67852ed5334c8a7f0b5eb0ef975106793',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.331',\r\n  },\r\n  {\r\n    sousId: 207,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.btt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3b804460c3c62f0f565af593984159f13b1ac976',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '263',\r\n  },\r\n  {\r\n    sousId: 206,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.skill,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x455f4d4cc4d6ca15441a93c631e82aaf338ad843',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00289',\r\n  },\r\n  {\r\n    sousId: 205,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.win,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xde4aef42bb27a2cb45c746acde4e4d8ab711d27c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1815.39',\r\n  },\r\n  {\r\n    sousId: 204,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.if,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x57d3524888ded4085d9124a422f13b27c8a43de7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.02835',\r\n  },\r\n  {\r\n    sousId: 203,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.sps,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb56299d8fbf46c509014b103a164ad1fc65ea222',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '12.86',\r\n  },\r\n  {\r\n    sousId: 202,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.c98,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5e49531BA07bE577323e55666D46C6217164119E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 201,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.axs,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00744',\r\n  },\r\n  {\r\n    sousId: 200,\r\n    stakingToken: serializedTokens.axs,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00992',\r\n  },\r\n  {\r\n    sousId: 199,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pmon,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.02696',\r\n  },\r\n  {\r\n    sousId: 198,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.trx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '9.6643',\r\n  },\r\n  {\r\n    sousId: 197,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.chess,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4286',\r\n  },\r\n  {\r\n    sousId: 196,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.titan,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08912',\r\n  },\r\n  {\r\n    sousId: 195,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.harmony,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.0092',\r\n  },\r\n  {\r\n    sousId: 194,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mask,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.06423',\r\n  },\r\n  {\r\n    sousId: 193,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dvi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.7233',\r\n  },\r\n  {\r\n    sousId: 192,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.gum,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.67129',\r\n  },\r\n  {\r\n    sousId: 191,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.adx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.7523',\r\n  },\r\n  {\r\n    sousId: 190,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.suter,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '69.9074',\r\n  },\r\n  {\r\n    sousId: 189,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bscpad,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3877',\r\n  },\r\n  {\r\n    sousId: 188,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.rabbit,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.993',\r\n  },\r\n  {\r\n    sousId: 187,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.waultx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '7.9108',\r\n  },\r\n  {\r\n    sousId: 186,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.wex,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '11.574',\r\n  },\r\n  {\r\n    sousId: 185,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.form,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.4467',\r\n  },\r\n  {\r\n    sousId: 184,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.orbs,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.8946',\r\n  },\r\n  {\r\n    sousId: 183,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.$dg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa07a91da6d10173f33c294803684bceede325957',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00135',\r\n  },\r\n  {\r\n    sousId: 182,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.woo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x88c321d444c88acf3e747dc90f20421b97648903',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3854',\r\n  },\r\n  {\r\n    sousId: 181,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.woo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0003854',\r\n  },\r\n  {\r\n    sousId: 180,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.htb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '5.2083',\r\n  },\r\n  {\r\n    sousId: 179,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.jgn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1001',\r\n  },\r\n  {\r\n    sousId: 178,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dft,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 177,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hai,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.3078',\r\n  },\r\n  {\r\n    sousId: 176,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.o3,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.107638',\r\n  },\r\n  {\r\n    sousId: 175,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ampl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.398',\r\n  },\r\n  {\r\n    sousId: 174,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4843',\r\n  },\r\n  {\r\n    sousId: 173,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6741',\r\n  },\r\n  {\r\n    sousId: 172,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.marsh,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1108',\r\n  },\r\n  {\r\n    sousId: 171,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mbox,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4803',\r\n  },\r\n  {\r\n    sousId: 170,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ata,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 169,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.27777',\r\n  },\r\n  {\r\n    sousId: 168,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bcfx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6944',\r\n  },\r\n  {\r\n    sousId: 167,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.qkc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '15.9143',\r\n  },\r\n  {\r\n    sousId: 166,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ktn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01215',\r\n  },\r\n  {\r\n    sousId: 165,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mtrg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.05613',\r\n  },\r\n  {\r\n    sousId: 164,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tusd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.5787',\r\n  },\r\n  {\r\n    sousId: 163,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.vrt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '40.5092',\r\n  },\r\n  {\r\n    sousId: 162,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.kalm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0868',\r\n  },\r\n  {\r\n    sousId: 161,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ez,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01736',\r\n  },\r\n  {\r\n    sousId: 160,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.kalm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    tokenPerBlock: '0.00868',\r\n  },\r\n  {\r\n    sousId: 159,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.popen,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.19097',\r\n  },\r\n  {\r\n    sousId: 158,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.023148',\r\n  },\r\n  {\r\n    sousId: 157,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.well,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2025',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 156,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.deri,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '1.6087',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 155,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.chr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '1.655',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 154,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cyc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00015914',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 153,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xend,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.31828',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 152,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hget,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.03553',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 151,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hotcross,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 150,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.rfox,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 149,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.wmass,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.24942',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 148,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ubxt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.4074',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 147,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.btr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.8935',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 146,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.τdoge,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.868',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 145,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pmon,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01261',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 144,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.one,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '57.87',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 143,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.fine,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1342',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 142,\r\n    stakingToken: serializedTokens.doge,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01388',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 141,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bmxx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01331',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 140,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.oin,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 139,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hyfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.8935',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 138,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.kun,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.23148',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 137,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.math,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.15798',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 136,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ust,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.17361',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 135,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.win,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '462.96',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 134,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.trx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '4.0509',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 133,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.btt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '79.86',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 132,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lmt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.66145',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 131,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pnt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.09548',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 130,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xmark,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0298',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 129,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4861',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 128,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hakka,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 127,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0000031',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 126,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.003472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 125,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bbadger,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00265278',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 124,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bdigg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000403',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 123,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4629',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 122,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xed,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 121,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cgg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.10918',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 120,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.perl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 119,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.arpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.949',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 118,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.11284',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 117,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dexe,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.009837',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 116,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dfd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.46296',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 115,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.alpaca,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.22743',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 114,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.τbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000608',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 113,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.τbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000608',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 112,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.swingby,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.21527',\r\n  },\r\n  {\r\n    sousId: 111,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xed,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 110,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hakka,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 109,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cgg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.10918',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 108,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mix,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3721',\r\n  },\r\n  {\r\n    sousId: 107,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.suter,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '15.3356',\r\n  },\r\n  {\r\n    sousId: 106,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.broobee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '14.4675',\r\n  },\r\n  {\r\n    sousId: 105,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hzn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6944',\r\n  },\r\n  {\r\n    sousId: 104,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.alpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.23495',\r\n  },\r\n  {\r\n    sousId: 103,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.perl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 102,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tlm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '17.361',\r\n  },\r\n  {\r\n    sousId: 101,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.jgn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08796',\r\n  },\r\n  {\r\n    sousId: 100,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.eps,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.07716',\r\n  },\r\n  {\r\n    sousId: 99,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.arpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.949',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 98,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.itam,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.096',\r\n  },\r\n  {\r\n    sousId: 97,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4629',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 96,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tko,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n  },\r\n  {\r\n    sousId: 95,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.apys,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.09953',\r\n  },\r\n  {\r\n    sousId: 94,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hoo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.489',\r\n  },\r\n  {\r\n    sousId: 93,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.11284',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 92,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.easy,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0072338',\r\n  },\r\n  {\r\n    sousId: 91,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nrv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.15046',\r\n  },\r\n  {\r\n    sousId: 90,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dego,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00405',\r\n  },\r\n  {\r\n    sousId: 89,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.gum,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08912',\r\n  },\r\n  {\r\n    sousId: 88,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0000031',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 87,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dft,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6811',\r\n  },\r\n  {\r\n    sousId: 86,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.swth,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.3148',\r\n  },\r\n  {\r\n    sousId: 85,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.003472',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 84,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.zil,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.0995',\r\n  },\r\n  {\r\n    sousId: 83,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pcws,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00434',\r\n  },\r\n  {\r\n    sousId: 82,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bbadger,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00265278',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 81,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bdigg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000403',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 80,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lto,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.2893',\r\n  },\r\n  {\r\n    sousId: 79,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mir,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01273',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 78,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mir,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01273',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 77,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.trade,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4484',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 76,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dusk,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4629',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 75,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bifi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00007234',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 74,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.txl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.434027',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 73,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cos,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '5.787',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 72,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bunny,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00289',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 71,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.alice,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.14467',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 70,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.for,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '2.8935',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 69,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bux,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5787',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 68,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nuls,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0868',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 67,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.belt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00868',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 66,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4861',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 65,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0001157',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 64,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dexe,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.009837',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 63,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bel,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0549',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 62,\r\n    stakingToken: serializedTokens.tpt,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0462',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 61,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tpt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '3.616',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 60,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.watch,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.3472',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 59,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xmark,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0413',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 58,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bmxx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00248',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 57,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.iotx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '6.365',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 56,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bor,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.000395',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 55,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bopen,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0723',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 54,\r\n    stakingToken: serializedTokens.sushi,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0367',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 53,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dodo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0578',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 52,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.swingby,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.13',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 51,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bry,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1157',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 50,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.zee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1736',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 49,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.swgb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.899',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 48,\r\n    stakingToken: serializedTokens.comp,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.055',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 47,\r\n    stakingToken: serializedTokens.comp,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.55',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 46,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.sfp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.6',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 45,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lina,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.983',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 44,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lina,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0983',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 43,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lit,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.231',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 42,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hget,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0138',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 41,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bdo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.075',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 40,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.egld,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.001215',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 39,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ust,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1157',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 38,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.wsote,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.23',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 37,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.front,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2546',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 36,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.helmet,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.81',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 35,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.btcst,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.011574',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 34,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bscx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.17361',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 33,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ten,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.05787',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 32,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.balbt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4166',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 31,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.asr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 30,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.atm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 29,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.og,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 28,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.reef,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '115.74',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 27,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ditto,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01157',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 26,\r\n    stakingToken: serializedTokens.twt,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.248',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 24,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.juv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 25,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.psg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 21,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.vai,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.104',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 20,\r\n    stakingToken: serializedTokens.bnb,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\r\n    },\r\n    poolCategory: PoolCategory.BINANCE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 19,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bnb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0041',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 18,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.blink,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '23.14',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 17,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.blink,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '23.14',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 16,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.unfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02893',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 15,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.twt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 14,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hard,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.346',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 13,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.broobee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '12.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 12,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.stax,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 11,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nar,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '1',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 10,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nya,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '10',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 9,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ctk,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 8,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.twt,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '20',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 7,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.inj,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.25',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import { useContext } from 'react'\r\nimport { ToastsContext } from 'contexts/ToastsContext'\r\n\r\nconst useToast = () => {\r\n  const toastContext = useContext(ToastsContext)\r\n\r\n  if (toastContext === undefined) {\r\n    throw new Error('Toasts context undefined')\r\n  }\r\n\r\n  return toastContext\r\n}\r\n\r\nexport default useToast\r\n","import { ethers } from 'ethers'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\n\r\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\r\n\r\nexport default null\r\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\r\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\r\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\r\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\r\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\r\nexport const API_PROFILE = process.env.REACT_APP_API_PROFILE\r\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\r\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\r\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\r\n\r\n/**\r\n * V1 will be deprecated but is still used to claim old rounds\r\n */\r\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\r\n\r\nexport const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\r\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\r\n","import { useEffect, useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { farmsConfig } from 'config/constants'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { deserializeToken } from 'state/user/hooks/helpers'\r\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\r\nimport { State, SerializedFarm, DeserializedFarmUserData, DeserializedFarm, DeserializedFarmsState } from '../types'\r\n\r\nconst deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nconst deserializeFarm = (farm: SerializedFarm): DeserializedFarm => {\r\n  const { lpAddresses, lpSymbol, pid, dual, multiplier, isCommunity, quoteTokenPriceBusd, tokenPriceBusd } = farm\r\n\r\n  return {\r\n    lpAddresses,\r\n    lpSymbol,\r\n    pid,\r\n    dual,\r\n    multiplier,\r\n    isCommunity,\r\n    quoteTokenPriceBusd,\r\n    tokenPriceBusd,\r\n    token: deserializeToken(farm.token),\r\n    quoteToken: deserializeToken(farm.quoteToken),\r\n    userData: deserializeFarmUserData(farm),\r\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\r\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\r\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\r\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\r\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nexport const usePollFarmsPublicData = (includeArchive = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\r\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\r\n\r\n    dispatch(fetchFarmsPublicDataAsync(pids))\r\n  }, [includeArchive, dispatch, slowRefresh])\r\n}\r\n\r\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\r\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\r\n\r\n    dispatch(fetchFarmsPublicDataAsync(pids))\r\n\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\r\n    }\r\n  }, [includeArchive, dispatch, slowRefresh, account])\r\n}\r\n\r\n/**\r\n * Fetches the \"core\" farm data used globally\r\n * 251 = CAKE-BNB LP\r\n * 252 = BUSD-BNB LP\r\n */\r\nexport const usePollCoreFarmData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\r\n  }, [dispatch, fastRefresh])\r\n}\r\n\r\nexport const useFarms = (): DeserializedFarmsState => {\r\n  const farms = useSelector((state: State) => state.farms)\r\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\r\n  const { loadArchivedFarmsData, userDataLoaded } = farms\r\n  return {\r\n    loadArchivedFarmsData,\r\n    userDataLoaded,\r\n    data: deserializedFarmsData,\r\n  }\r\n}\r\n\r\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return deserializeFarm(farm)\r\n}\r\n\r\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return deserializeFarm(farm)\r\n}\r\n\r\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\r\n  const { userData } = useFarmFromPid(pid)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = userData\r\n  return {\r\n    allowance,\r\n    tokenBalance,\r\n    stakedBalance,\r\n    earnings,\r\n  }\r\n}\r\n\r\n// Return the base token price for a farm, from a given pid\r\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\r\n  const farm = useFarmFromPid(pid)\r\n  return farm && new BigNumber(farm.tokenPriceBusd)\r\n}\r\n\r\nexport const useLpTokenPrice = (symbol: string) => {\r\n  const farm = useFarmFromLpSymbol(symbol)\r\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\r\n  let lpTokenPrice = BIG_ZERO\r\n\r\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\r\n    // Total value of base token in LP\r\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\r\n    // Double it to get overall value in LP\r\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\r\n    // Divide total value of all tokens, by the number of LP tokens\r\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\r\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\r\n  }\r\n\r\n  return lpTokenPrice\r\n}\r\n\r\n// /!\\ Deprecated , use the BUSD hook in /hooks\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const cakeBnbFarm = useFarmFromPid(251)\r\n\r\n  const cakePriceBusdAsString = cakeBnbFarm.tokenPriceBusd\r\n\r\n  const cakePriceBusd = useMemo(() => {\r\n    return new BigNumber(cakePriceBusdAsString)\r\n  }, [cakePriceBusdAsString])\r\n\r\n  return cakePriceBusd\r\n}\r\n","import { ReactNode } from 'react'\r\n\r\nexport const types = {\r\n  SUCCESS: 'success',\r\n  DANGER: 'danger',\r\n  WARNING: 'warning',\r\n  INFO: 'info',\r\n}\r\n\r\nexport type Types = typeof types[keyof typeof types]\r\n\r\nexport interface Toast {\r\n  id: string\r\n  type: Types\r\n  title: string\r\n  description?: ReactNode\r\n}\r\n\r\nexport interface ToastContainerProps {\r\n  toasts: Toast[]\r\n  stackSpacing?: number\r\n  ttl?: number\r\n  onRemove: (id: string) => void\r\n}\r\n\r\nexport interface ToastProps {\r\n  toast: Toast\r\n  onRemove: ToastContainerProps['onRemove']\r\n  ttl: number\r\n  style: Partial<CSSStyleDeclaration>\r\n}\r\n","import React, { useCallback, useEffect, useRef } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport styled from 'styled-components'\r\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\r\nimport { ToastProps, types } from './types'\r\n\r\nconst alertTypeMap = {\r\n  [types.INFO]: alertVariants.INFO,\r\n  [types.SUCCESS]: alertVariants.SUCCESS,\r\n  [types.DANGER]: alertVariants.DANGER,\r\n  [types.WARNING]: alertVariants.WARNING,\r\n}\r\n\r\nconst StyledToast = styled.div`\r\n  right: 16px;\r\n  position: fixed;\r\n  max-width: calc(100% - 32px);\r\n  transition: all 250ms ease-in;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-width: 400px;\r\n  }\r\n`\r\n\r\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\r\n  const timer = useRef<number>()\r\n  const ref = useRef(null)\r\n  const removeHandler = useRef(onRemove)\r\n  const { id, title, description, type } = toast\r\n\r\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\r\n\r\n  const handleMouseEnter = () => {\r\n    clearTimeout(timer.current)\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n    }\r\n\r\n    timer.current = window.setTimeout(() => {\r\n      handleRemove()\r\n    }, ttl)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n    }\r\n\r\n    timer.current = window.setTimeout(() => {\r\n      handleRemove()\r\n    }, ttl)\r\n\r\n    return () => {\r\n      clearTimeout(timer.current)\r\n    }\r\n  }, [timer, ttl, handleRemove])\r\n\r\n  return (\r\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\r\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\r\n          {description}\r\n        </Alert>\r\n      </StyledToast>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nexport default Toast\r\n","import React from 'react'\r\nimport { TransitionGroup } from 'react-transition-group'\r\nimport styled from 'styled-components'\r\nimport Toast from './Toast'\r\nimport { ToastContainerProps } from './types'\r\n\r\nconst ZINDEX = 1000\r\nconst TOP_POSITION = 80 // Initial position from the top\r\n\r\nconst StyledToastContainer = styled.div`\r\n  .enter,\r\n  .appear {\r\n    opacity: 0.01;\r\n  }\r\n\r\n  .enter.enter-active,\r\n  .appear.appear-active {\r\n    opacity: 1;\r\n    transition: opacity 250ms ease-in;\r\n  }\r\n\r\n  .exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  .exit.exit-active {\r\n    opacity: 0.01;\r\n    transition: opacity 250ms ease-out;\r\n  }\r\n`\r\n\r\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\r\n  return (\r\n    <StyledToastContainer>\r\n      <TransitionGroup>\r\n        {toasts.map((toast, index) => {\r\n          const zIndex = (ZINDEX - index).toString()\r\n          const top = TOP_POSITION + index * stackSpacing\r\n\r\n          return (\r\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\r\n          )\r\n        })}\r\n      </TransitionGroup>\r\n    </StyledToastContainer>\r\n  )\r\n}\r\n\r\nexport default ToastContainer\r\n","import React from 'react'\r\nimport { Link, Text } from '@pancakeswap/uikit'\r\nimport { getBscScanLink } from 'utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport truncateHash from 'utils/truncateHash'\r\n\r\ninterface DescriptionWithTxProps {\r\n  description?: string\r\n  txHash?: string\r\n}\r\n\r\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\r\n      {txHash && (\r\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\r\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\r\n        </Link>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DescriptionWithTx\r\n","import { useEffect, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { setBlock } from '.'\r\nimport { State } from '../types'\r\n\r\nexport const usePollBlockNumber = () => {\r\n  const timer = useRef(null)\r\n  const dispatch = useAppDispatch()\r\n  const isWindowVisible = useIsWindowVisible()\r\n\r\n  useEffect(() => {\r\n    if (isWindowVisible) {\r\n      timer.current = setInterval(async () => {\r\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n        dispatch(setBlock(blockNumber))\r\n      }, 6000)\r\n    } else {\r\n      clearInterval(timer.current)\r\n    }\r\n\r\n    return () => clearInterval(timer.current)\r\n  }, [dispatch, timer, isWindowVisible])\r\n}\r\n\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport ERC20_INTERFACE from 'config/abi/erc20'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport { useMulticallContract } from 'hooks/useContract'\r\nimport { isAddress } from 'utils'\r\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\r\n\r\n/**\r\n * Returns a map of the given addresses to their eventually consistent BNB balances.\r\n */\r\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\r\n  [address: string]: CurrencyAmount | undefined\r\n} {\r\n  const multicallContract = useMulticallContract()\r\n\r\n  const addresses: string[] = useMemo(\r\n    () =>\r\n      uncheckedAddresses\r\n        ? uncheckedAddresses\r\n            .map(isAddress)\r\n            .filter((a): a is string => a !== false)\r\n            .sort()\r\n        : [],\r\n    [uncheckedAddresses],\r\n  )\r\n\r\n  const results = useSingleContractMultipleData(\r\n    multicallContract,\r\n    'getEthBalance',\r\n    addresses.map((address) => [address]),\r\n  )\r\n\r\n  return useMemo(\r\n    () =>\r\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\r\n        const value = results?.[i]?.result?.[0]\r\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\r\n        return memo\r\n      }, {}),\r\n    [addresses, results],\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\r\n */\r\nexport function useTokenBalancesWithLoadingIndicator(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\r\n  const validatedTokens: Token[] = useMemo(\r\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\r\n    [tokens],\r\n  )\r\n\r\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\r\n\r\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\r\n\r\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\r\n\r\n  return [\r\n    useMemo(\r\n      () =>\r\n        address && validatedTokens.length > 0\r\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\r\n              const value = balances?.[i]?.result?.[0]\r\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\r\n              if (amount) {\r\n                memo[token.address] = new TokenAmount(token, amount)\r\n              }\r\n              return memo\r\n            }, {})\r\n          : {},\r\n      [address, validatedTokens, balances],\r\n    ),\r\n    anyLoading,\r\n  ]\r\n}\r\n\r\nexport function useTokenBalances(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\r\n}\r\n\r\n// get the balance for a single token/account combo\r\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\r\n  const tokenBalances = useTokenBalances(account, [token])\r\n  if (!token) return undefined\r\n  return tokenBalances[token.address]\r\n}\r\n\r\nexport function useCurrencyBalances(\r\n  account?: string,\r\n  currencies?: (Currency | undefined)[],\r\n): (CurrencyAmount | undefined)[] {\r\n  const tokens = useMemo(\r\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\r\n    [currencies],\r\n  )\r\n\r\n  const tokenBalances = useTokenBalances(account, tokens)\r\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\r\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\r\n\r\n  return useMemo(\r\n    () =>\r\n      currencies?.map((currency) => {\r\n        if (!account || !currency) return undefined\r\n        if (currency instanceof Token) return tokenBalances[currency.address]\r\n        if (currency === ETHER) return ethBalance[account]\r\n        return undefined\r\n      }) ?? [],\r\n    [account, currencies, ethBalance, tokenBalances],\r\n  )\r\n}\r\n\r\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  return useCurrencyBalances(account, [currency])[0]\r\n}\r\n\r\n// mimics useAllBalances\r\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  const { account } = useWeb3React()\r\n  const allTokens = useAllTokens()\r\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\r\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\r\n  return balances ?? {}\r\n}\r\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\n\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\r\n\r\nexport enum PairState {\r\n  LOADING,\r\n  NOT_EXISTS,\r\n  EXISTS,\r\n  INVALID,\r\n}\r\n\r\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokens = useMemo(\r\n    () =>\r\n      currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n      ]),\r\n    [chainId, currencies],\r\n  )\r\n\r\n  const pairAddresses = useMemo(\r\n    () =>\r\n      tokens.map(([tokenA, tokenB]) => {\r\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\r\n      }),\r\n    [tokens],\r\n  )\r\n\r\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\r\n\r\n  return useMemo(() => {\r\n    return results.map((result, i) => {\r\n      const { result: reserves, loading } = result\r\n      const tokenA = tokens[i][0]\r\n      const tokenB = tokens[i][1]\r\n\r\n      if (loading) return [PairState.LOADING, null]\r\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\r\n      if (!reserves) return [PairState.NOT_EXISTS, null]\r\n      const { reserve0, reserve1 } = reserves\r\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return [\r\n        PairState.EXISTS,\r\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n      ]\r\n    })\r\n  }, [results, tokens])\r\n}\r\n\r\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\r\n  return usePairs([[tokenA, tokenB]])[0]\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ConnectWalletButton = (props) => {\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {t('Connect Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ConnectWalletButton\r\n","import { TransactionResponse } from '@ethersproject/providers'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { addTransaction } from './actions'\r\nimport { TransactionDetails } from './reducer'\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: {\r\n    summary?: string\r\n    approval?: { tokenAddress: string; spender: string }\r\n    claim?: { recipient: string }\r\n  },\r\n) => void {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      {\r\n        summary,\r\n        approval,\r\n        claim,\r\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return\r\n      if (!chainId) return\r\n\r\n      const { hash } = response\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.')\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\r\n    },\r\n    [dispatch, chainId, account],\r\n  )\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  return chainId ? state[chainId] ?? {} : {}\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions()\r\n\r\n  if (!transactionHash || !transactions[transactionHash]) return false\r\n\r\n  return !transactions[transactionHash].receipt\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions()\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash]\r\n        if (!tx) return false\r\n        if (tx.receipt) {\r\n          return false\r\n        }\r\n        const { approval } = tx\r\n        if (!approval) return false\r\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  )\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\n\r\nexport interface SerializableTransactionReceipt {\r\n  to: string\r\n  from: string\r\n  contractAddress: string\r\n  transactionIndex: number\r\n  blockHash: string\r\n  transactionHash: string\r\n  blockNumber: number\r\n  status?: number\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  from: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  claim?: { recipient: string }\r\n  summary?: string\r\n}>('transactions/addTransaction')\r\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\r\nexport const finalizeTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  receipt: SerializableTransactionReceipt\r\n}>('transactions/finalizeTransaction')\r\nexport const checkedTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  blockNumber: number\r\n}>('transactions/checkedTransaction')\r\n","import styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst Card = styled(Box)<{\r\n  width?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  border-radius: 16px;\r\n  padding: 1.25rem;\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\nexport default Card\r\n\r\nexport const LightCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.background};\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n`\r\n\r\nexport const LightGreyCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport const GreyCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n`\r\n","// 1 day, 7 days, 30 days, 1 year, 5 years\r\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\r\n\r\n/**\r\n *\r\n * @param principalInUSD - amount user wants to invest in USD\r\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\r\n * @param earningTokenPrice - price of reward token\r\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\r\n * @param performanceFee - performance fee as percentage\r\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\r\n */\r\nexport const getInterestBreakdown = ({\r\n  principalInUSD,\r\n  apr,\r\n  earningTokenPrice,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n}: {\r\n  principalInUSD: number\r\n  apr: number\r\n  earningTokenPrice: number\r\n  compoundFrequency?: number\r\n  performanceFee?: number\r\n}) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\r\n  const timesCompounded = 365 * compoundFrequency\r\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const aprAsDecimal = apr / 100\r\n\r\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\r\n  // and also cause rounding errors\r\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\r\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\r\n\r\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\r\n    const daysAsDecimalOfYear = days / 365\r\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\r\n    const principal = principalInUSD / earningTokenPrice\r\n    let interestEarned = principal * aprAsDecimal * (days / 365)\r\n    if (timesCompounded !== 0) {\r\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\r\n      interestEarned = accruedAmount - principal\r\n      if (performanceFee) {\r\n        const performanceFeeAsDecimal = performanceFee / 100\r\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\r\n        interestEarned -= performanceFeeAsAmount\r\n      }\r\n    }\r\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\r\n  })\r\n}\r\n\r\n/**\r\n * @param interest how much USD amount you aim to make\r\n * @param apr APR of farm/pool\r\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\r\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\r\n */\r\nexport const getPrincipalForInterest = (\r\n  interest: number,\r\n  apr: number,\r\n  compoundingFrequency: number,\r\n  performanceFee = 0,\r\n) => {\r\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\r\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\r\n    // console.log('inside', interest, apyAsDecimal)\r\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\r\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\r\n  })\r\n}\r\n\r\n/**\r\n * Given APR returns APY\r\n * @param apr APR as percentage\r\n * @param compoundFrequency how many compounds per day\r\n * @param days if other than 365 adjusts (A)PY for period less than a year\r\n * @param performanceFee performance fee as percentage\r\n * @returns APY as decimal\r\n */\r\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\r\n  const daysAsDecimalOfYear = days / 365\r\n  const aprAsDecimal = apr / 100\r\n  const timesCompounded = 365 * compoundFrequency\r\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\r\n  if (timesCompounded > 0) {\r\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\r\n  }\r\n  if (performanceFee) {\r\n    const performanceFeeAsDecimal = performanceFee / 100\r\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\r\n    apyAsDecimal -= takenAsPerformanceFee\r\n  }\r\n  return apyAsDecimal\r\n}\r\n\r\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\r\n  if (amountInvested === 0) {\r\n    return 0\r\n  }\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport store from 'state'\r\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\r\n\r\n/**\r\n * Function to return gasPrice outwith a react component\r\n */\r\nconst getGasPrice = (): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const state = store.getState()\r\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport default getGasPrice\r\n","import { Language } from '@pancakeswap/uikit'\r\n\r\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\r\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\r\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\r\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\r\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\r\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\r\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\r\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\r\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\r\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\r\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\r\n\r\n\r\nexport const languages = {\r\n  'ar-SA': AR,\r\n  'bn-BD': BN,\r\n  'en-US': EN,\r\n  'de-DE': DE,\r\n  'el-GR': EL,\r\n  'fil-PH': FIL,\r\n  'fr-FR': FR,\r\n  'pt-BR': PTBR,\r\n  'pt-PT': PTPT,\r\n  'ro-RO': RO,\r\n  'ru-RU': RU,\r\n\r\n}\r\n\r\nexport const languageList = Object.values(languages)\r\n","import Cookies from 'js-cookie'\r\nimport { Profile } from 'state/types'\r\nimport { GetUserProfileResponse } from 'utils/types'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Nft } from 'config/constants/nfts/types'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\nimport { getTeam } from 'state/teams/helpers'\r\n\r\nexport interface GetProfileResponse {\r\n  hasRegistered: boolean\r\n  profile?: Profile\r\n}\r\n\r\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\r\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\r\n\r\n  return {\r\n    userId: userId.toNumber(),\r\n    points: numberPoints.toNumber(),\r\n    teamId: teamId.toNumber(),\r\n    tokenId: tokenId.toNumber(),\r\n    nftAddress,\r\n    isActive,\r\n  }\r\n}\r\n\r\nconst profileContract = getProfileContract()\r\nconst profileApi = process.env.REACT_APP_API_PROFILE\r\n\r\nexport const getUsername = async (address: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\r\n\r\n    if (!response.ok) {\r\n      return ''\r\n    }\r\n\r\n    const { username = '' } = await response.json()\r\n\r\n    return username\r\n  } catch (error) {\r\n    return ''\r\n  }\r\n}\r\n\r\n/**\r\n * Intended to be used for getting a profile avatar\r\n */\r\nexport const getProfileAvatar = async (address: string) => {\r\n  try {\r\n    const hasRegistered = await profileContract.hasRegistered(address)\r\n\r\n    if (!hasRegistered) {\r\n      return null\r\n    }\r\n\r\n    const profileResponse = await profileContract.getUserProfile(address)\r\n    const { tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n\r\n    if (!isActive) {\r\n      return null\r\n    }\r\n\r\n    const nft = await getNftByTokenId(nftAddress, tokenId)\r\n    return nft\r\n  } catch {\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\r\n  try {\r\n    const hasRegistered = await profileContract.hasRegistered(address)\r\n\r\n    if (!hasRegistered) {\r\n      return { hasRegistered, profile: null }\r\n    }\r\n\r\n    const profileResponse = await profileContract.getUserProfile(address)\r\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n    const team = await getTeam(teamId)\r\n    const username = await getUsername(address)\r\n\r\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\r\n    // so only fetch the nft data if active\r\n    let nft: Nft\r\n    if (isActive) {\r\n      nft = await getNftByTokenId(nftAddress, tokenId)\r\n\r\n      // Save the preview image in a cookie so it can be used on the exchange\r\n      Cookies.set(\r\n        `profile_${address}`,\r\n        {\r\n          username,\r\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\r\n        },\r\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\r\n      )\r\n    }\r\n\r\n    const profile = {\r\n      userId,\r\n      points,\r\n      teamId,\r\n      tokenId,\r\n      username,\r\n      nftAddress,\r\n      isActive,\r\n      nft,\r\n      team,\r\n    } as Profile\r\n\r\n    return { hasRegistered, profile }\r\n  } catch (e) {\r\n    console.error(e)\r\n    return null\r\n  }\r\n}\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState } from 'state/types'\r\nimport type { AppDispatch } from 'state'\r\nimport { Nft } from 'config/constants/nfts/types'\r\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  hasRegistered: false,\r\n  data: null,\r\n  profileAvatars: {},\r\n}\r\n\r\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: Nft }, string>(\r\n  'profile/fetchProfileAvatar',\r\n  async (account) => {\r\n    const nft = await getProfileAvatar(account)\r\n    return { account, nft }\r\n  },\r\n)\r\n\r\nexport const fetchProfileUsername = createAsyncThunk<{ account: string; username: string }, string>(\r\n  'profile/fetchProfileUsername',\r\n  async (account) => {\r\n    const username = await getUsername(account)\r\n    return { account, username }\r\n  },\r\n)\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\r\n      const { profile, hasRegistered } = action.payload\r\n\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.hasRegistered = hasRegistered\r\n      state.data = profile\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    profileClear: () => ({\r\n      ...initialState,\r\n      isLoading: false,\r\n    }),\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\r\n      const { account, username } = action.payload\r\n\r\n      if (state.profileAvatars[account]) {\r\n        state.profileAvatars[account] = {\r\n          ...state.profileAvatars[account],\r\n          username,\r\n        }\r\n      } else {\r\n        state.profileAvatars[account] = { username, nft: null }\r\n      }\r\n    })\r\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\r\n      const { account, nft } = action.payload\r\n\r\n      if (state.profileAvatars[account]) {\r\n        state.profileAvatars[account] = {\r\n          ...state.profileAvatars[account],\r\n          nft,\r\n        }\r\n      } else {\r\n        state.profileAvatars[account] = { username: null, nft }\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\r\n  profileSlice.actions\r\n\r\n// Thunks\r\n// TODO: this should be an AsyncThunk\r\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (e) {\r\n    console.error(e)\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","const ARCHIVED_FARMS_START_PID = 139\r\nconst ARCHIVED_FARMS_END_PID = 250\r\n\r\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\r\n\r\nexport default isArchivedPid\r\n","import tokens from './tokens'\r\nimport { SerializedFarmConfig } from './types'\r\n\r\nconst priceHelperLps: SerializedFarmConfig[] = [\r\n  /**\r\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\r\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\r\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\r\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\r\n   * Before storing to redux, farms without a PID are filtered out.\r\n   */\r\n  {\r\n    pid: null,\r\n    lpSymbol: 'QSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\r\n    },\r\n    token: tokens.qsd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n]\r\n\r\nexport default priceHelperLps\r\n","import BigNumber from 'bignumber.js'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\r\nimport multicall from 'utils/multicall'\r\nimport { SerializedFarm, SerializedBigNumber } from '../types'\r\n\r\ntype PublicFarmData = {\r\n  tokenAmountTotal: SerializedBigNumber\r\n  lpTotalInQuoteToken: SerializedBigNumber\r\n  lpTotalSupply: SerializedBigNumber\r\n  tokenPriceVsQuote: SerializedBigNumber\r\n  poolWeight: SerializedBigNumber\r\n  multiplier: string\r\n}\r\n\r\nconst fetchFarm = async (farm: SerializedFarm): Promise<PublicFarmData> => {\r\n  const { pid, lpAddresses, token, quoteToken } = farm\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const calls = [\r\n    // Balance of token in the LP contract\r\n    {\r\n      address: token.address,\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of quote token on LP contract\r\n    {\r\n      address: quoteToken.address,\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of LP tokens in the master chef contract\r\n    {\r\n      address: lpAddress,\r\n      name: 'balanceOf',\r\n      params: [getMasterChefAddress()],\r\n    },\r\n    // Total supply of LP tokens\r\n    {\r\n      address: lpAddress,\r\n      name: 'totalSupply',\r\n    },\r\n    // Token decimals\r\n    {\r\n      address: token.address,\r\n      name: 'decimals',\r\n    },\r\n    // Quote token decimals\r\n    {\r\n      address: quoteToken.address,\r\n      name: 'decimals',\r\n    },\r\n  ]\r\n\r\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\r\n    await multicall(erc20, calls)\r\n\r\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\r\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n  // Raw amount of token in the LP, including those not staked\r\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\r\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\r\n\r\n  // Amount of quoteToken in the LP that are staked in the MC\r\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\r\n\r\n  // Total staked in LP, in quote token value\r\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\r\n\r\n  // Only make masterchef calls if farm has pid\r\n  const [info, totalAllocPoint] =\r\n    pid || pid === 0\r\n      ? await multicall(masterchefABI, [\r\n          {\r\n            address: getMasterChefAddress(),\r\n            name: 'poolInfo',\r\n            params: [pid],\r\n          },\r\n          {\r\n            address: getMasterChefAddress(),\r\n            name: 'totalAllocPoint',\r\n          },\r\n        ])\r\n      : [null, null]\r\n\r\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\r\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\r\n\r\n  return {\r\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\r\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\r\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\r\n    poolWeight: poolWeight.toJSON(),\r\n    multiplier: `${allocPoint.div(100).toString()}X`,\r\n  }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { SerializedFarm } from 'state/types'\r\nimport fetchPublicFarmData from './fetchPublicFarmData'\r\n\r\nconst fetchFarm = async (farm: SerializedFarm): Promise<SerializedFarm> => {\r\n  const farmPublicData = await fetchPublicFarmData(farm)\r\n\r\n  return { ...farm, ...farmPublicData }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { SerializedFarmConfig } from 'config/constants/types'\r\nimport fetchFarm from './fetchFarm'\r\n\r\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\r\n  const data = await Promise.all(\r\n    farmsToFetch.map(async (farmConfig) => {\r\n      const farm = await fetchFarm(farmConfig)\r\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\r\n      return serializedFarm\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import { SerializedFarm } from 'state/types'\r\n\r\n/**\r\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\r\n * @param farms Array of farms\r\n * @param preferredQuoteTokens Array of preferred quote tokens\r\n * @returns A preferred farm, if found - or the first element of the farms array\r\n */\r\nexport const filterFarmsByQuoteToken = (\r\n  farms: SerializedFarm[],\r\n  preferredQuoteTokens: string[] = ['BUSD', 'WBNB'],\r\n): SerializedFarm => {\r\n  const preferredFarm = farms.find((farm) => {\r\n    return preferredQuoteTokens.some((quoteToken) => {\r\n      return farm.quoteToken.symbol === quoteToken\r\n    })\r\n  })\r\n  return preferredFarm || farms[0]\r\n}\r\n\r\nexport default filterFarmsByQuoteToken\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport { SerializedFarm } from 'state/types'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nconst getFarmFromTokenSymbol = (\r\n  farms: SerializedFarm[],\r\n  tokenSymbol: string,\r\n  preferredQuoteTokens?: string[],\r\n): SerializedFarm => {\r\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\r\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\nconst getFarmBaseTokenPrice = (\r\n  farm: SerializedFarm,\r\n  quoteTokenFarm: SerializedFarm,\r\n  bnbPriceBusd: BigNumber,\r\n): BigNumber => {\r\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\r\n\r\n  if (farm.quoteToken.symbol === tokens.busd.symbol) {\r\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === tokens.wbnb.symbol) {\r\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  // Possible alternative farm quoteTokens:\r\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\r\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\r\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\r\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\r\n  if (quoteTokenFarm.quoteToken.symbol === tokens.wbnb.symbol) {\r\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === tokens.busd.symbol) {\r\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\r\n  return BIG_ZERO\r\n}\r\n\r\nconst getFarmQuoteTokenPrice = (\r\n  farm: SerializedFarm,\r\n  quoteTokenFarm: SerializedFarm,\r\n  bnbPriceBusd: BigNumber,\r\n): BigNumber => {\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return BIG_ONE\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'WBNB') {\r\n    return bnbPriceBusd\r\n  }\r\n\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  return BIG_ZERO\r\n}\r\n\r\nconst fetchFarmsPrices = async (farms: SerializedFarm[]) => {\r\n  const bnbBusdFarm = farms.find((farm) => farm.pid === 252)\r\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\r\n\r\n  const farmsWithPrices = farms.map((farm) => {\r\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\r\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n\r\n    return {\r\n      ...farm,\r\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\r\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\r\n    }\r\n  })\r\n\r\n  return farmsWithPrices\r\n}\r\n\r\nexport default fetchFarmsPrices\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { SerializedFarmConfig } from 'config/constants/types'\r\n\r\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'pendingCake',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\r\nimport fetchFarms from './fetchFarms'\r\nimport fetchFarmsPrices from './fetchFarmsPrices'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { SerializedFarmsState, SerializedFarm } from '../types'\r\n\r\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\r\n  ...farm,\r\n  userData: {\r\n    allowance: '0',\r\n    tokenBalance: '0',\r\n    stakedBalance: '0',\r\n    earnings: '0',\r\n  },\r\n}))\r\n\r\nconst initialState: SerializedFarmsState = {\r\n  data: noAccountFarmConfig,\r\n  loadArchivedFarmsData: false,\r\n  userDataLoaded: false,\r\n}\r\n\r\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\r\n\r\n// Async thunks\r\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<SerializedFarm[], number[]>(\r\n  'farms/fetchFarmsPublicDataAsync',\r\n  async (pids) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n\r\n    // Add price helper farms\r\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\r\n\r\n    const farms = await fetchFarms(farmsWithPriceHelpers)\r\n    const farmsWithPrices = await fetchFarmsPrices(farms)\r\n\r\n    // Filter out price helper LP config farms\r\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\r\n      return farm.pid || farm.pid === 0\r\n    })\r\n\r\n    return farmsWithoutHelperLps\r\n  },\r\n)\r\n\r\ninterface FarmUserDataResponse {\r\n  pid: number\r\n  allowance: string\r\n  tokenBalance: string\r\n  stakedBalance: string\r\n  earnings: string\r\n}\r\n\r\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\r\n  'farms/fetchFarmUserDataAsync',\r\n  async ({ account, pids }) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\r\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\r\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\r\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\r\n\r\n    return userFarmAllowances.map((farmAllowance, index) => {\r\n      return {\r\n        pid: farmsToFetch[index].pid,\r\n        allowance: userFarmAllowances[index],\r\n        tokenBalance: userFarmTokenBalances[index],\r\n        stakedBalance: userStakedBalances[index],\r\n        earnings: userFarmEarnings[index],\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setLoadArchivedFarmsData: (state, action) => {\r\n      const loadArchivedFarmsData = action.payload\r\n      state.loadArchivedFarmsData = loadArchivedFarmsData\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Update farms with live data\r\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    })\r\n\r\n    // Update farms with user data\r\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\r\n      action.payload.forEach((userDataEl) => {\r\n        const { pid } = userDataEl\r\n        const index = state.data.findIndex((farm) => farm.pid === pid)\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n      state.userDataLoaded = true\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\r\n\r\nexport default farmsSlice.reducer\r\n","import { parseUnits } from '@ethersproject/units'\r\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\r\nimport { ParsedQs } from 'qs'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useENS from 'hooks/ENS/useENS'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { isAddress } from 'utils'\r\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\nimport { SwapState } from './reducer'\r\nimport { useUserSlippageTolerance } from '../user/hooks'\r\n\r\nexport function useSwapState(): AppState['swap'] {\r\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\r\n}\r\n\r\nexport function useSwapActionHandlers(): {\r\n  onCurrencySelection: (field: Field, currency: Currency) => void\r\n  onSwitchTokens: () => void\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n  onChangeRecipient: (recipient: string | null) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const onCurrencySelection = useCallback(\r\n    (field: Field, currency: Currency) => {\r\n      dispatch(\r\n        selectCurrency({\r\n          field,\r\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\r\n        }),\r\n      )\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onSwitchTokens = useCallback(() => {\r\n    dispatch(switchCurrencies())\r\n  }, [dispatch])\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onChangeRecipient = useCallback(\r\n    (recipient: string | null) => {\r\n      dispatch(setRecipient({ recipient }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return {\r\n    onSwitchTokens,\r\n    onCurrencySelection,\r\n    onUserInput,\r\n    onChangeRecipient,\r\n  }\r\n}\r\n\r\n// try to parse a user entered amount for a given token\r\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  if (!value || !currency) {\r\n    return undefined\r\n  }\r\n  try {\r\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\r\n    if (typedValueParsed !== '0') {\r\n      return currency instanceof Token\r\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\r\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\r\n    }\r\n  } catch (error) {\r\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\r\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\r\n  }\r\n  // necessary for all paths to return a value\r\n  return undefined\r\n}\r\n\r\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\r\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\r\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\r\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\r\n]\r\n\r\n/**\r\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\r\n * @param trade to check for the given address\r\n * @param checksummedAddress address to check in the pairs and tokens\r\n */\r\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\r\n  return (\r\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\r\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\r\n  )\r\n}\r\n\r\n// from the current swap inputs, compute the best trade and return it.\r\nexport function useDerivedSwapInfo(): {\r\n  currencies: { [field in Field]?: Currency }\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmount: CurrencyAmount | undefined\r\n  v2Trade: Trade | undefined\r\n  inputError?: string\r\n} {\r\n  const { account } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const {\r\n    independentField,\r\n    typedValue,\r\n    [Field.INPUT]: { currencyId: inputCurrencyId },\r\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\r\n    recipient,\r\n  } = useSwapState()\r\n\r\n  const inputCurrency = useCurrency(inputCurrencyId)\r\n  const outputCurrency = useCurrency(outputCurrencyId)\r\n  const recipientLookup = useENS(recipient ?? undefined)\r\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\r\n\r\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\r\n    inputCurrency ?? undefined,\r\n    outputCurrency ?? undefined,\r\n  ])\r\n\r\n  const isExactIn: boolean = independentField === Field.INPUT\r\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\r\n\r\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\r\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\r\n\r\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\r\n\r\n  const currencyBalances = {\r\n    [Field.INPUT]: relevantTokenBalances[0],\r\n    [Field.OUTPUT]: relevantTokenBalances[1],\r\n  }\r\n\r\n  const currencies: { [field in Field]?: Currency } = {\r\n    [Field.INPUT]: inputCurrency ?? undefined,\r\n    [Field.OUTPUT]: outputCurrency ?? undefined,\r\n  }\r\n\r\n  let inputError: string | undefined\r\n  if (!account) {\r\n    inputError = t('Connect Wallet')\r\n  }\r\n\r\n  if (!parsedAmount) {\r\n    inputError = inputError ?? t('Enter an amount')\r\n  }\r\n\r\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\r\n    inputError = inputError ?? t('Select a token')\r\n  }\r\n\r\n  const formattedTo = isAddress(to)\r\n  if (!to || !formattedTo) {\r\n    inputError = inputError ?? t('Enter a recipient')\r\n  } else if (\r\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\r\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\r\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\r\n  ) {\r\n    inputError = inputError ?? t('Invalid recipient')\r\n  }\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\r\n\r\n  // compare input balance to max input based on version\r\n  const [balanceIn, amountIn] = [\r\n    currencyBalances[Field.INPUT],\r\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\r\n  ]\r\n\r\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\r\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\r\n  }\r\n\r\n  return {\r\n    currencies,\r\n    currencyBalances,\r\n    parsedAmount,\r\n    v2Trade: v2Trade ?? undefined,\r\n    inputError,\r\n  }\r\n}\r\n\r\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\r\n  if (typeof urlParam === 'string') {\r\n    const valid = isAddress(urlParam)\r\n    if (valid) return valid\r\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\r\n    if (valid === false) return 'BNB'\r\n  }\r\n  return 'BNB' ?? ''\r\n}\r\n\r\nfunction parseTokenAmountURLParameter(urlParam: any): string {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\r\n}\r\n\r\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\r\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\r\n}\r\n\r\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nfunction validatedRecipient(recipient: any): string | null {\r\n  if (typeof recipient !== 'string') return null\r\n  const address = isAddress(recipient)\r\n  if (address) return address\r\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\r\n  if (ADDRESS_REGEX.test(recipient)) return recipient\r\n  return null\r\n}\r\n\r\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\r\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\r\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\r\n  if (inputCurrency === outputCurrency) {\r\n    if (typeof parsedQs.outputCurrency === 'string') {\r\n      inputCurrency = ''\r\n    } else {\r\n      outputCurrency = ''\r\n    }\r\n  }\r\n\r\n  const recipient = validatedRecipient(parsedQs.recipient)\r\n\r\n  return {\r\n    [Field.INPUT]: {\r\n      currencyId: inputCurrency,\r\n    },\r\n    [Field.OUTPUT]: {\r\n      currencyId: outputCurrency,\r\n    },\r\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\r\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\r\n    recipient,\r\n  }\r\n}\r\n\r\n// updates the swap state to use the defaults for a given network\r\nexport function useDefaultsFromURLSearch():\r\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\r\n  | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const parsedQs = useParsedQueryString()\r\n  const [result, setResult] = useState<\r\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    if (!chainId) return\r\n    const parsed = queryParametersToSwapState(parsedQs)\r\n\r\n    dispatch(\r\n      replaceSwapState({\r\n        typedValue: parsed.typedValue,\r\n        field: parsed.independentField,\r\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\r\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\r\n        recipient: null,\r\n      }),\r\n    )\r\n\r\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, chainId])\r\n\r\n  return result\r\n}\r\n","import { parse, ParsedQs } from 'qs'\r\nimport { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function useParsedQueryString(): ParsedQs {\r\n  const { search } = useLocation()\r\n  return useMemo(\r\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\r\n    [search],\r\n  )\r\n}\r\n","import { useCallback } from 'react'\r\nimport ethers, { Contract, CallOverrides } from 'ethers'\r\nimport { useGasPrice } from 'state/user/hooks'\r\nimport { get } from 'lodash'\r\n\r\n/**\r\n * Perform a contract call with a gas price returned from useGasPrice\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport function useCallWithGasPrice() {\r\n  const gasPrice = useGasPrice()\r\n\r\n  const callWithGasPrice = useCallback(\r\n    async (\r\n      contract: Contract,\r\n      methodName: string,\r\n      methodArgs: any[] = [],\r\n      overrides: CallOverrides = null,\r\n    ): Promise<ethers.providers.TransactionResponse> => {\r\n      const contractMethod = get(contract, methodName)\r\n      const hasManualGasPriceOverride = overrides?.gasPrice\r\n\r\n      const tx = await contractMethod(\r\n        ...methodArgs,\r\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\r\n      )\r\n\r\n      return tx\r\n    },\r\n    [gasPrice],\r\n  )\r\n\r\n  return { callWithGasPrice }\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport tokens from 'config/constants/tokens'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport useRefresh from './useRefresh'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\ntype UseTokenBalanceState = {\r\n  balance: BigNumber\r\n  fetchStatus: FetchStatus\r\n}\r\n\r\nexport enum FetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  SUCCESS = 'success',\r\n  FAILED = 'failed',\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\r\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\r\n    balance: BIG_ZERO,\r\n    fetchStatus: NOT_FETCHED,\r\n  })\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress)\r\n      try {\r\n        const res = await contract.balanceOf(account)\r\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\r\n      } catch (e) {\r\n        console.error(e)\r\n        setBalanceState((prev) => ({\r\n          ...prev,\r\n          fetchStatus: FAILED,\r\n        }))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\r\n\r\n  return balanceState\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.totalSupply()\r\n      setTotalSupply(new BigNumber(supply.toString()))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress)\r\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\r\n      setBalance(new BigNumber(res.toString()))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useGetBnbBalance = () => {\r\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\r\n  const [balance, setBalance] = useState(ethers.BigNumber.from(0))\r\n  const { account } = useWeb3React()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      try {\r\n        const walletBalance = await simpleRpcProvider.getBalance(account)\r\n        setBalance(walletBalance)\r\n        setFetchStatus(FetchStatus.SUCCESS)\r\n      } catch {\r\n        setFetchStatus(FetchStatus.FAILED)\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lastUpdated, setBalance, setFetchStatus])\r\n\r\n  return { balance, fetchStatus, refresh: setLastUpdated }\r\n}\r\n\r\nexport const useGetCakeBalance = () => {\r\n  const { balance, fetchStatus } = useTokenBalance(tokens.cake.address)\r\n\r\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\r\n  return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus }\r\n}\r\n\r\nexport default useTokenBalance\r\n","const getTokenLogoURL = (address: string) =>\r\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\r\n\r\nexport default getTokenLogoURL\r\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { BinanceIcon } from '@pancakeswap/uikit'\r\nimport React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\r\nimport Logo from './Logo'\r\n\r\nconst StyledLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function CurrencyLogo({\r\n  currency,\r\n  size = '24px',\r\n  style,\r\n}: {\r\n  currency?: Currency\r\n  size?: string\r\n  style?: React.CSSProperties\r\n}) {\r\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\r\n\r\n  const srcs: string[] = useMemo(() => {\r\n    if (currency === ETHER) return []\r\n\r\n    if (currency instanceof Token) {\r\n      if (currency instanceof WrappedTokenInfo) {\r\n        return [...uriLocations, getTokenLogoURL(currency.address)]\r\n      }\r\n      return [getTokenLogoURL(currency.address)]\r\n    }\r\n    return []\r\n  }, [currency, uriLocations])\r\n\r\n  if (currency === ETHER) {\r\n    return <BinanceIcon width={size} style={style} />\r\n  }\r\n\r\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n}\r\n","import { serializeTokens } from './tokens'\r\nimport { SerializedFarmConfig } from './types'\r\n\r\nconst serializedTokens = serializeTokens()\r\n\r\nconst farms: SerializedFarmConfig[] = [\r\n  /**\r\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\r\n   */\r\n  {\r\n    pid: 0,\r\n    lpSymbol: 'CAKE',\r\n    lpAddresses: {\r\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n      56: '0xfc1C7aE28C07FBA0fD99DF0c3EA272C96B9293b5',\r\n    },\r\n    token: serializedTokens.syrup,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 251,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\r\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 252,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n    },\r\n    token: serializedTokens.busd,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  /**\r\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\r\n   */\r\n  {\r\n    pid: 429,\r\n    lpSymbol: 'CHESS-USDC LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1472976e0b97f5b2fc93f1fff14e2b5c4447b64f',\r\n    },\r\n    token: serializedTokens.chess,\r\n    quoteToken: serializedTokens.usdc,\r\n  },\r\n  {\r\n    pid: 447,\r\n    lpSymbol: 'GNT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3747e3e107223539FD09bb730b055A1f11F78Adf',\r\n    },\r\n    token: serializedTokens.gnt,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 425,\r\n    lpSymbol: 'DVI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x89ebf9cd99864f6e51bd7a578965922029cab977',\r\n    },\r\n    token: serializedTokens.dvi,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 439,\r\n    lpSymbol: 'MCRN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe8D5d81dac092Ae61d097f84EFE230759BF2e522',\r\n    },\r\n    token: serializedTokens.mcrn,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 456,\r\n    lpSymbol: 'TLOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3eDb06e2d182d133864fe7C0f9B4C204bBf61D4E',\r\n    },\r\n    token: serializedTokens.tlos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 455,\r\n    lpSymbol: 'HERO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5d937c3966002cbD9d32c890a59439b4b300a14d',\r\n    },\r\n    token: serializedTokens.stephero,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 449,\r\n    lpSymbol: 'BP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2bF2dEB40639201C9A94c9e33b4852D9AEa5fd2D',\r\n    },\r\n    token: serializedTokens.bp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 454,\r\n    lpSymbol: 'BSCDEFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5B0A3b98C2f01741A11E57A9d0595B254E62F9F2',\r\n    },\r\n    token: serializedTokens.bscdefi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 453,\r\n    lpSymbol: 'QBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x67EFeF66A55c4562144B9AcfCFbc62F9E4269b3e',\r\n    },\r\n    token: serializedTokens.qbt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 452,\r\n    lpSymbol: 'NAOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcaa662ad41a662b81be2aea5d59ec0697628665f',\r\n    },\r\n    token: serializedTokens.naos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 451,\r\n    lpSymbol: 'PHA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4ddd56e2f34338839BB5953515833950eA680aFb',\r\n    },\r\n    token: serializedTokens.pha,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 314,\r\n    lpSymbol: 'BEL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\r\n    },\r\n    token: serializedTokens.bel,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 446,\r\n    lpSymbol: 'BMON-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x00e53C169dA54a7E11172aEEDf8Eb87F060F479e',\r\n    },\r\n    token: serializedTokens.bmon,\r\n    quoteToken: serializedTokens.busd,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 450,\r\n    lpSymbol: 'SFUND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74fA517715C4ec65EF01d55ad5335f90dce7CC87',\r\n    },\r\n    token: serializedTokens.sfund,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 448,\r\n    lpSymbol: 'RUSD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x59FaC9e98479fc9979aE2a0C7422Af50bCBB9B26',\r\n    },\r\n    token: serializedTokens.rusd,\r\n    quoteToken: serializedTokens.busd,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 317,\r\n    lpSymbol: 'RAMP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\r\n    },\r\n    token: serializedTokens.ramp,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 445,\r\n    lpSymbol: 'POTS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF90BAA331Cfd40F094476E752Bf272892170d399',\r\n    },\r\n    token: serializedTokens.pots,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 397,\r\n    lpSymbol: 'TUSD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\r\n    },\r\n    token: serializedTokens.tusd,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 443,\r\n    lpSymbol: 'BTT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdcfbb12ded3fea12d2a078bc6324131cd14bf835',\r\n    },\r\n    token: serializedTokens.btt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 442,\r\n    lpSymbol: 'TRX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5d108578be3750209d1b3a8f45ffee8c5a75146',\r\n    },\r\n    token: serializedTokens.trx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 441,\r\n    lpSymbol: 'WIN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6a445ceb72c8b1751755386c3990055ff92e14a0',\r\n    },\r\n    token: serializedTokens.win,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 436,\r\n    lpSymbol: 'BABYCAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5e33fE13a821e55ED33C884589a804B1b4F6fD8',\r\n    },\r\n    token: serializedTokens.babycake,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 437,\r\n    lpSymbol: 'BMON-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3C2b7B578Dd2175A1c3524Aa0D515106282Bf108',\r\n    },\r\n    token: serializedTokens.bmon,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 440,\r\n    lpSymbol: 'HERO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe267018C943E77992e7e515724B07b9CE7938124',\r\n    },\r\n    token: serializedTokens.hero,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 438,\r\n    lpSymbol: 'WSG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x37Ff7D4459ad96E0B01275E5efffe091f33c2CAD',\r\n    },\r\n    token: serializedTokens.wsg,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 435,\r\n    lpSymbol: 'REVV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1cc18962b919ef90085a8b21f8ddc95824fbad9e',\r\n    },\r\n    token: serializedTokens.revv,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 367,\r\n    lpSymbol: 'BTT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\r\n    },\r\n    token: serializedTokens.btt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 434,\r\n    lpSymbol: 'SKILL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc19dfd34d3ba5816df9cbdaa02d32a9f8dc6f6fc',\r\n    },\r\n    token: serializedTokens.skill,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 369,\r\n    lpSymbol: 'WIN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\r\n    },\r\n    token: serializedTokens.win,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 433,\r\n    lpSymbol: 'IF-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7b4682D2B3f8670b125aF6AEA8d7eD2Daa43Bdc1',\r\n    },\r\n    token: serializedTokens.if,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 432,\r\n    lpSymbol: 'SPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfdfde3af740a22648b9dd66d05698e5095940850',\r\n    },\r\n    token: serializedTokens.sps,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 431,\r\n    lpSymbol: 'C98-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x92247860A03F48d5c6425c7CA35CDcFCB1013AA1',\r\n    },\r\n    token: serializedTokens.c98,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 430,\r\n    lpSymbol: 'AXS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC2d00De94795e60FB76Bc37d899170996cBdA436',\r\n    },\r\n    token: serializedTokens.axs,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 379,\r\n    lpSymbol: 'PMON-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\r\n    },\r\n    token: serializedTokens.pmon,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 368,\r\n    lpSymbol: 'TRX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\r\n    },\r\n    token: serializedTokens.trx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 428,\r\n    lpSymbol: 'TITAN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9392a1f471d9aa14c0b8eb28bd7a3f4a814727be',\r\n    },\r\n    token: serializedTokens.titan,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 427,\r\n    lpSymbol: 'ONE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9d2296e2fe3cdbf2eb3e3e2ca8811bafa42eedff',\r\n    },\r\n    token: serializedTokens.harmony,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 426,\r\n    lpSymbol: 'MASK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x46c6bA71af7648cD7f67D0AD4d16f75bE251ed12',\r\n    },\r\n    token: serializedTokens.mask,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 339,\r\n    lpSymbol: 'GUM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\r\n    },\r\n    token: serializedTokens.gum,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 424,\r\n    lpSymbol: 'ADX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0648ff5de80adf54aac07ece2490f50a418dde23',\r\n    },\r\n    token: serializedTokens.adx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 423,\r\n    lpSymbol: 'USDC-USDT LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.usdt,\r\n  },\r\n  {\r\n    pid: 422,\r\n    lpSymbol: 'CAKE-USDT LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA39Af17CE4a8eb807E076805Da1e2B8EA7D0755b',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.usdt,\r\n  },\r\n  {\r\n    pid: 357,\r\n    lpSymbol: 'SUTER-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\r\n    },\r\n    token: serializedTokens.suter,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 421,\r\n    lpSymbol: 'BSCPAD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\r\n    },\r\n    token: serializedTokens.bscpad,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 420,\r\n    lpSymbol: 'RABBIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\r\n    },\r\n    token: serializedTokens.rabbit,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 419,\r\n    lpSymbol: 'WAULTx-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3e4370204f598205998143F07ebCC486E441b456',\r\n    },\r\n    token: serializedTokens.waultx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 418,\r\n    lpSymbol: 'WEX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\r\n    },\r\n    token: serializedTokens.wex,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 417,\r\n    lpSymbol: 'FORM-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\r\n    },\r\n    token: serializedTokens.form,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 416,\r\n    lpSymbol: 'ORBS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\r\n    },\r\n    token: serializedTokens.orbs,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 415,\r\n    lpSymbol: 'DG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\r\n    },\r\n    token: serializedTokens.$dg,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 414,\r\n    lpSymbol: 'WOO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x89eE0491CE55d2f7472A97602a95426216167189',\r\n    },\r\n    token: serializedTokens.woo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 413,\r\n    lpSymbol: 'HTB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2a995d355d5df641e878c0f366685741fd18d004',\r\n    },\r\n    token: serializedTokens.htb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 351,\r\n    lpSymbol: 'JGN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\r\n    },\r\n    token: serializedTokens.jgn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 337,\r\n    lpSymbol: 'DFT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\r\n    },\r\n    token: serializedTokens.dft,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 412,\r\n    lpSymbol: 'HAI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\r\n    },\r\n    token: serializedTokens.hai,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 411,\r\n    lpSymbol: 'O3-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\r\n    },\r\n    token: serializedTokens.o3,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 410,\r\n    lpSymbol: 'AMPL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\r\n    },\r\n    token: serializedTokens.ampl,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 343,\r\n    lpSymbol: 'ODDZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\r\n    },\r\n    token: serializedTokens.oddz,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 409,\r\n    lpSymbol: 'ETH-USDC LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\r\n    },\r\n    token: serializedTokens.eth,\r\n    quoteToken: serializedTokens.usdc,\r\n  },\r\n  {\r\n    pid: 408,\r\n    lpSymbol: 'BTCB-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 347,\r\n    lpSymbol: 'BONDLY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\r\n    },\r\n    token: serializedTokens.bondly,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 407,\r\n    lpSymbol: 'MARSH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\r\n    },\r\n    token: serializedTokens.marsh,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 406,\r\n    lpSymbol: 'BORING-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\r\n    },\r\n    token: serializedTokens.boring,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 405,\r\n    lpSymbol: 'MBOX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\r\n    },\r\n    token: serializedTokens.mbox,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 404,\r\n    lpSymbol: 'ATA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xef7767677867552cfa699148b96a03358a9be779',\r\n    },\r\n    token: serializedTokens.ata,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 403,\r\n    lpSymbol: 'MX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\r\n    },\r\n    token: serializedTokens.mx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 402,\r\n    lpSymbol: 'bCFX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\r\n    },\r\n    token: serializedTokens.bcfx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 401,\r\n    lpSymbol: 'QKC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\r\n    },\r\n    token: serializedTokens.qkc,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 400,\r\n    lpSymbol: 'KTN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\r\n    },\r\n    token: serializedTokens.ktn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 399,\r\n    lpSymbol: 'MTRG-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\r\n    },\r\n    token: serializedTokens.mtrg,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 398,\r\n    lpSymbol: 'SWG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\r\n    },\r\n    token: serializedTokens.swg,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 396,\r\n    lpSymbol: 'VRT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\r\n    },\r\n    token: serializedTokens.vrt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 395,\r\n    lpSymbol: 'EZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\r\n    },\r\n    token: serializedTokens.ez,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 394,\r\n    lpSymbol: 'KALM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\r\n    },\r\n    token: serializedTokens.kalm,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 393,\r\n    lpSymbol: 'pOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\r\n    },\r\n    token: serializedTokens.popen,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 335,\r\n    lpSymbol: 'LIEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\r\n    },\r\n    token: serializedTokens.lien,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 392,\r\n    lpSymbol: 'WELL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\r\n    },\r\n    token: serializedTokens.well,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 391,\r\n    lpSymbol: 'DERI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\r\n    },\r\n    token: serializedTokens.deri,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 390,\r\n    lpSymbol: 'CHR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\r\n    },\r\n    token: serializedTokens.chr,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 389,\r\n    lpSymbol: 'CAKE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 388,\r\n    lpSymbol: 'CYC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\r\n    },\r\n    token: serializedTokens.cyc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 387,\r\n    lpSymbol: 'XEND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\r\n    },\r\n    token: serializedTokens.xend,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 296,\r\n    lpSymbol: 'HGET-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\r\n    },\r\n    token: serializedTokens.hget,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 386,\r\n    lpSymbol: 'HOTCROSS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\r\n    },\r\n    token: serializedTokens.hotcross,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 385,\r\n    lpSymbol: 'RFOX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\r\n    },\r\n    token: serializedTokens.rfox,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 384,\r\n    lpSymbol: 'WMASS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\r\n    },\r\n    token: serializedTokens.wmass,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 383,\r\n    lpSymbol: 'UBXT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\r\n    },\r\n    token: serializedTokens.ubxt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 381,\r\n    lpSymbol: 'BTR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\r\n    },\r\n    token: serializedTokens.btr,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 380,\r\n    lpSymbol: 'τDOGE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\r\n    },\r\n    token: serializedTokens.τdoge,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 378,\r\n    lpSymbol: 'ONE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\r\n    },\r\n    token: serializedTokens.one,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 377,\r\n    lpSymbol: 'FINE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\r\n    },\r\n    token: serializedTokens.fine,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 376,\r\n    lpSymbol: 'DOGE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xac109c8025f272414fd9e2faa805a583708a017f',\r\n    },\r\n    token: serializedTokens.doge,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 310,\r\n    lpSymbol: 'bMXX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\r\n    },\r\n    token: serializedTokens.bmxx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 375,\r\n    lpSymbol: 'OIN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\r\n    },\r\n    token: serializedTokens.oin,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 374,\r\n    lpSymbol: 'HYFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\r\n    },\r\n    token: serializedTokens.hyfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 373,\r\n    lpSymbol: 'KUN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\r\n    },\r\n    token: serializedTokens.kun,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 372,\r\n    lpSymbol: 'KUN-QSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\r\n    },\r\n    token: serializedTokens.kun,\r\n    quoteToken: serializedTokens.qsd,\r\n  },\r\n  {\r\n    pid: 371,\r\n    lpSymbol: 'MATH-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\r\n    },\r\n    token: serializedTokens.math,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 370,\r\n    lpSymbol: 'mCOIN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\r\n    },\r\n    token: serializedTokens.mcoin,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 366,\r\n    lpSymbol: 'PNT-pBTC LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\r\n    },\r\n    token: serializedTokens.pnt,\r\n    quoteToken: serializedTokens.pbtc,\r\n  },\r\n  {\r\n    pid: 311,\r\n    lpSymbol: 'xMARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\r\n    },\r\n    token: serializedTokens.xmark,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 365,\r\n    lpSymbol: 'BTCB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 364,\r\n    lpSymbol: 'LMT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\r\n    },\r\n    token: serializedTokens.lmt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 363,\r\n    lpSymbol: 'DFD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\r\n    },\r\n    token: serializedTokens.dfd,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 362,\r\n    lpSymbol: 'ALPACA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\r\n    },\r\n    token: serializedTokens.alpaca,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 361,\r\n    lpSymbol: 'τBTC-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\r\n    },\r\n    token: serializedTokens.τbtc,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 304,\r\n    lpSymbol: 'SWINGBY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\r\n    },\r\n    token: serializedTokens.swingby,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 360,\r\n    lpSymbol: 'XED-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\r\n    },\r\n    token: serializedTokens.xed,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 359,\r\n    lpSymbol: 'HAKKA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\r\n    },\r\n    token: serializedTokens.hakka,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 358,\r\n    lpSymbol: 'CGG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\r\n    },\r\n    token: serializedTokens.cgg,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 356,\r\n    lpSymbol: 'bROOBEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\r\n    },\r\n    token: serializedTokens.broobee,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 355,\r\n    lpSymbol: 'HZN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\r\n    },\r\n    token: serializedTokens.hzn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 354,\r\n    lpSymbol: 'ALPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\r\n    },\r\n    token: serializedTokens.alpa,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 353,\r\n    lpSymbol: 'PERL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\r\n    },\r\n    token: serializedTokens.perl,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 352,\r\n    lpSymbol: 'TLM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\r\n    },\r\n    token: serializedTokens.tlm,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 350,\r\n    lpSymbol: 'EPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\r\n    },\r\n    token: serializedTokens.eps,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 349,\r\n    lpSymbol: 'ARPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\r\n    },\r\n    token: serializedTokens.arpa,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 348,\r\n    lpSymbol: 'ITAM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\r\n    },\r\n    token: serializedTokens.itam,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 346,\r\n    lpSymbol: 'TKO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\r\n    },\r\n    token: serializedTokens.tko,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 345,\r\n    lpSymbol: 'APYS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\r\n    },\r\n    token: serializedTokens.apys,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 344,\r\n    lpSymbol: 'HOO-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\r\n    },\r\n    token: serializedTokens.hoo,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 342,\r\n    lpSymbol: 'EASY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\r\n    },\r\n    token: serializedTokens.easy,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 341,\r\n    lpSymbol: 'NRV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\r\n    },\r\n    token: serializedTokens.nrv,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 340,\r\n    lpSymbol: 'DEGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\r\n    },\r\n    token: serializedTokens.dego,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 338,\r\n    lpSymbol: 'pBTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\r\n    },\r\n    token: serializedTokens.pbtc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 336,\r\n    lpSymbol: 'SWTH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\r\n    },\r\n    token: serializedTokens.swth,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 334,\r\n    lpSymbol: 'ZIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\r\n    },\r\n    token: serializedTokens.zil,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 333,\r\n    lpSymbol: 'pCWS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\r\n    },\r\n    token: serializedTokens.pcws,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 332,\r\n    lpSymbol: 'bBADGER-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\r\n    },\r\n    token: serializedTokens.bbadger,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 331,\r\n    lpSymbol: 'bDIGG-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\r\n    },\r\n    token: serializedTokens.bdigg,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 330,\r\n    lpSymbol: 'LTO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\r\n    },\r\n    token: serializedTokens.lto,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 329,\r\n    lpSymbol: 'MIR-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\r\n    },\r\n    token: serializedTokens.mir,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 328,\r\n    lpSymbol: 'TRADE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\r\n    },\r\n    token: serializedTokens.trade,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 327,\r\n    lpSymbol: 'DUSK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\r\n    },\r\n    token: serializedTokens.dusk,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 326,\r\n    lpSymbol: 'BIFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\r\n    },\r\n    token: serializedTokens.bifi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 325,\r\n    lpSymbol: 'TXL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\r\n    },\r\n    token: serializedTokens.txl,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 324,\r\n    lpSymbol: 'COS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\r\n    },\r\n    token: serializedTokens.cos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 323,\r\n    lpSymbol: 'BUNNY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\r\n    },\r\n    token: serializedTokens.bunny,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 322,\r\n    lpSymbol: 'ALICE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\r\n    },\r\n    token: serializedTokens.alice,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 321,\r\n    lpSymbol: 'FOR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\r\n    },\r\n    token: serializedTokens.for,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 320,\r\n    lpSymbol: 'BUX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\r\n    },\r\n    token: serializedTokens.bux,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 319,\r\n    lpSymbol: 'NULS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x853784B7BDe87d858555715c0123374242db7943',\r\n    },\r\n    token: serializedTokens.nuls,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 318,\r\n    lpSymbol: 'BELT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\r\n    },\r\n    token: serializedTokens.belt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 316,\r\n    lpSymbol: 'BFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\r\n    },\r\n    token: serializedTokens.bfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 315,\r\n    lpSymbol: 'DEXE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\r\n    },\r\n    token: serializedTokens.dexe,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 313,\r\n    lpSymbol: 'TPT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\r\n    },\r\n    token: serializedTokens.tpt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 312,\r\n    lpSymbol: 'WATCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\r\n    },\r\n    token: serializedTokens.watch,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 309,\r\n    lpSymbol: 'IOTX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\r\n    },\r\n    token: serializedTokens.iotx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 308,\r\n    lpSymbol: 'BOR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\r\n    },\r\n    token: serializedTokens.bor,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 307,\r\n    lpSymbol: 'bOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\r\n    },\r\n    token: serializedTokens.bopen,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 306,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\r\n    },\r\n    token: serializedTokens.sushi,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 305,\r\n    lpSymbol: 'DODO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\r\n    },\r\n    token: serializedTokens.dodo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 303,\r\n    lpSymbol: 'BRY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\r\n    },\r\n    token: serializedTokens.bry,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 302,\r\n    lpSymbol: 'ZEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\r\n    },\r\n    token: serializedTokens.zee,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 301,\r\n    lpSymbol: 'SWGb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\r\n    },\r\n    token: serializedTokens.swgb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 300,\r\n    lpSymbol: 'COMP-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\r\n    },\r\n    token: serializedTokens.comp,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 299,\r\n    lpSymbol: 'SFP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\r\n    },\r\n    token: serializedTokens.sfp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 298,\r\n    lpSymbol: 'LINA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\r\n    },\r\n    token: serializedTokens.lina,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 297,\r\n    lpSymbol: 'LIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\r\n    },\r\n    token: serializedTokens.lit,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 295,\r\n    lpSymbol: 'BDO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\r\n    },\r\n    token: serializedTokens.bdo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 294,\r\n    lpSymbol: 'EGLD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\r\n    },\r\n    token: serializedTokens.egld,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 293,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x05faf555522Fa3F93959F86B41A3808666093210',\r\n    },\r\n    token: serializedTokens.ust,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 292,\r\n    lpSymbol: 'mAMZN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\r\n    },\r\n    token: serializedTokens.mamzn,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 291,\r\n    lpSymbol: 'mGOOGL-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\r\n    },\r\n    token: serializedTokens.mgoogl,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 290,\r\n    lpSymbol: 'mNFLX-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\r\n    },\r\n    token: serializedTokens.mnflx,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 289,\r\n    lpSymbol: 'mTSLA-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\r\n    },\r\n    token: serializedTokens.mtsla,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 288,\r\n    lpSymbol: 'wSOTE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\r\n    },\r\n    token: serializedTokens.wsote,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 287,\r\n    lpSymbol: 'FRONT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\r\n    },\r\n    token: serializedTokens.front,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 286,\r\n    lpSymbol: 'Helmet-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\r\n    },\r\n    token: serializedTokens.helmet,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 285,\r\n    lpSymbol: 'BTCST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\r\n    },\r\n    token: serializedTokens.btcst,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 284,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\r\n    },\r\n    token: serializedTokens.ltc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 283,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 282,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\r\n    },\r\n    token: serializedTokens.dai,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 281,\r\n    lpSymbol: 'BSCX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\r\n    },\r\n    token: serializedTokens.bscx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 280,\r\n    lpSymbol: 'TEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\r\n    },\r\n    token: serializedTokens.ten,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 279,\r\n    lpSymbol: 'bALBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\r\n    },\r\n    token: serializedTokens.balbt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 278,\r\n    lpSymbol: 'REEF-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\r\n    },\r\n    token: serializedTokens.reef,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 277,\r\n    lpSymbol: 'Ditto-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\r\n    },\r\n    token: serializedTokens.ditto,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 276,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\r\n    },\r\n    token: serializedTokens.vai,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 275,\r\n    lpSymbol: 'BLK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\r\n    },\r\n    token: serializedTokens.blink,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 274,\r\n    lpSymbol: 'UNFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\r\n    },\r\n    token: serializedTokens.unfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 273,\r\n    lpSymbol: 'HARD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\r\n    },\r\n    token: serializedTokens.hard,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 272,\r\n    lpSymbol: 'CTK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\r\n    },\r\n    token: serializedTokens.ctk,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 271,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\r\n    },\r\n    token: serializedTokens.sxp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 270,\r\n    lpSymbol: 'INJ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\r\n    },\r\n    token: serializedTokens.inj,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 269,\r\n    lpSymbol: 'FIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\r\n    },\r\n    token: serializedTokens.fil,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 268,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\r\n    },\r\n    token: serializedTokens.uni,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 267,\r\n    lpSymbol: 'YFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\r\n    },\r\n    token: serializedTokens.yfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 266,\r\n    lpSymbol: 'ATOM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\r\n    },\r\n    token: serializedTokens.atom,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 265,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\r\n    },\r\n    token: serializedTokens.xrp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 264,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 263,\r\n    lpSymbol: 'ALPHA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\r\n    },\r\n    token: serializedTokens.alpha,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 262,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 261,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\r\n    },\r\n    token: serializedTokens.eth,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 260,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\r\n    },\r\n    token: serializedTokens.xvs,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 259,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\r\n    },\r\n    token: serializedTokens.twt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 258,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 257,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\r\n    },\r\n    token: serializedTokens.link,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 256,\r\n    lpSymbol: 'EOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\r\n    },\r\n    token: serializedTokens.eos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 255,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\r\n    },\r\n    token: serializedTokens.dot,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 254,\r\n    lpSymbol: 'BAND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\r\n    },\r\n    token: serializedTokens.band,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 253,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\r\n    },\r\n    token: serializedTokens.ada,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  /**\r\n   * V2 farms, set to be removed once unstaked\r\n   */\r\n  {\r\n    pid: 139,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 250,\r\n    lpSymbol: 'τBTC-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\r\n    },\r\n    token: serializedTokens.τbtc,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 193,\r\n    lpSymbol: 'SWINGBY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\r\n    },\r\n    token: serializedTokens.swingby,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 249,\r\n    lpSymbol: 'XED-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\r\n    },\r\n    token: serializedTokens.xed,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 248,\r\n    lpSymbol: 'HAKKA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\r\n    },\r\n    token: serializedTokens.hakka,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 247,\r\n    lpSymbol: 'CGG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\r\n    },\r\n    token: serializedTokens.cgg,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 246,\r\n    lpSymbol: 'SUTER-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\r\n    },\r\n    token: serializedTokens.suter,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 245,\r\n    lpSymbol: 'bROOBEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\r\n    },\r\n    token: serializedTokens.broobee,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 244,\r\n    lpSymbol: 'HZN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\r\n    },\r\n    token: serializedTokens.hzn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 243,\r\n    lpSymbol: 'ALPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\r\n    },\r\n    token: serializedTokens.alpa,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 242,\r\n    lpSymbol: 'PERL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\r\n    },\r\n    token: serializedTokens.perl,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 241,\r\n    lpSymbol: 'TLM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\r\n    },\r\n    token: serializedTokens.tlm,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 240,\r\n    lpSymbol: 'JGN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\r\n    },\r\n    token: serializedTokens.jgn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 239,\r\n    lpSymbol: 'EPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\r\n    },\r\n    token: serializedTokens.eps,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 238,\r\n    lpSymbol: 'ARPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\r\n    },\r\n    token: serializedTokens.arpa,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 237,\r\n    lpSymbol: 'ITAM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\r\n    },\r\n    token: serializedTokens.itam,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 236,\r\n    lpSymbol: 'BONDLY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\r\n    },\r\n    token: serializedTokens.bondly,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 235,\r\n    lpSymbol: 'TKO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\r\n    },\r\n    token: serializedTokens.tko,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 234,\r\n    lpSymbol: 'APYS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\r\n    },\r\n    token: serializedTokens.apys,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 233,\r\n    lpSymbol: 'HOO-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\r\n    },\r\n    token: serializedTokens.hoo,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 232,\r\n    lpSymbol: 'ODDZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\r\n    },\r\n    token: serializedTokens.oddz,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 231,\r\n    lpSymbol: 'EASY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\r\n    },\r\n    token: serializedTokens.easy,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 230,\r\n    lpSymbol: 'NRV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\r\n    },\r\n    token: serializedTokens.nrv,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 229,\r\n    lpSymbol: 'DEGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\r\n    },\r\n    token: serializedTokens.dego,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 228,\r\n    lpSymbol: 'GUM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\r\n    },\r\n    token: serializedTokens.gum,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 227,\r\n    lpSymbol: 'pBTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\r\n    },\r\n    token: serializedTokens.pbtc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 226,\r\n    lpSymbol: 'DFT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\r\n    },\r\n    token: serializedTokens.dft,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 225,\r\n    lpSymbol: 'SWTH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\r\n    },\r\n    token: serializedTokens.swth,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 224,\r\n    lpSymbol: 'LIEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\r\n    },\r\n    token: serializedTokens.lien,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 223,\r\n    lpSymbol: 'ZIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\r\n    },\r\n    token: serializedTokens.zil,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 222,\r\n    lpSymbol: 'pCWS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe3D941e74141311436F82523817EBaa26462967d',\r\n    },\r\n    token: serializedTokens.pcws,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 221,\r\n    lpSymbol: 'bBADGER-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\r\n    },\r\n    token: serializedTokens.bbadger,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 220,\r\n    lpSymbol: 'bDIGG-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\r\n    },\r\n    token: serializedTokens.bdigg,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 219,\r\n    lpSymbol: 'LTO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\r\n    },\r\n    token: serializedTokens.lto,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 218,\r\n    lpSymbol: 'MIR-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\r\n    },\r\n    token: serializedTokens.mir,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 217,\r\n    lpSymbol: 'TRADE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\r\n    },\r\n    token: serializedTokens.trade,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 216,\r\n    lpSymbol: 'DUSK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\r\n    },\r\n    token: serializedTokens.dusk,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 215,\r\n    lpSymbol: 'BIFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\r\n    },\r\n    token: serializedTokens.bifi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 214,\r\n    lpSymbol: 'TXL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\r\n    },\r\n    token: serializedTokens.txl,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 213,\r\n    lpSymbol: 'COS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\r\n    },\r\n    token: serializedTokens.cos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 212,\r\n    lpSymbol: 'BUNNY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\r\n    },\r\n    token: serializedTokens.bunny,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 211,\r\n    lpSymbol: 'ALICE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\r\n    },\r\n    token: serializedTokens.alice,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 210,\r\n    lpSymbol: 'FOR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\r\n    },\r\n    token: serializedTokens.for,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 209,\r\n    lpSymbol: 'BUX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\r\n    },\r\n    token: serializedTokens.bux,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 208,\r\n    lpSymbol: 'NULS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\r\n    },\r\n    token: serializedTokens.nuls,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 207,\r\n    lpSymbol: 'BELT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\r\n    },\r\n    token: serializedTokens.belt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 206,\r\n    lpSymbol: 'RAMP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\r\n    },\r\n    token: serializedTokens.ramp,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 205,\r\n    lpSymbol: 'BFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\r\n    },\r\n    token: serializedTokens.bfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 204,\r\n    lpSymbol: 'DEXE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\r\n    },\r\n    token: serializedTokens.dexe,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 203,\r\n    lpSymbol: 'BEL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\r\n    },\r\n    token: serializedTokens.bel,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 202,\r\n    lpSymbol: 'TPT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\r\n    },\r\n    token: serializedTokens.tpt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 201,\r\n    lpSymbol: 'WATCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\r\n    },\r\n    token: serializedTokens.watch,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 200,\r\n    lpSymbol: 'xMARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\r\n    },\r\n    token: serializedTokens.xmark,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 199,\r\n    lpSymbol: 'bMXX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\r\n    },\r\n    token: serializedTokens.bmxx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 198,\r\n    lpSymbol: 'IOTX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\r\n    },\r\n    token: serializedTokens.iotx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 197,\r\n    lpSymbol: 'BOR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\r\n    },\r\n    token: serializedTokens.bor,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 196,\r\n    lpSymbol: 'bOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\r\n    },\r\n    token: serializedTokens.bopen,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 195,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\r\n    },\r\n    token: serializedTokens.sushi,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 194,\r\n    lpSymbol: 'DODO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\r\n    },\r\n    token: serializedTokens.dodo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 192,\r\n    lpSymbol: 'BRY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\r\n    },\r\n    token: serializedTokens.bry,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 191,\r\n    lpSymbol: 'ZEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\r\n    },\r\n    token: serializedTokens.zee,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 190,\r\n    lpSymbol: 'SWGb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\r\n    },\r\n    token: serializedTokens.swgb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 189,\r\n    lpSymbol: 'COMP-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\r\n    },\r\n    token: serializedTokens.comp,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 188,\r\n    lpSymbol: 'SFP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\r\n    },\r\n    token: serializedTokens.sfp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 187,\r\n    lpSymbol: 'LINA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\r\n    },\r\n    token: serializedTokens.lina,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 186,\r\n    lpSymbol: 'LIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\r\n    },\r\n    token: serializedTokens.lit,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 185,\r\n    lpSymbol: 'HGET-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\r\n    },\r\n    token: serializedTokens.hget,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 184,\r\n    lpSymbol: 'BDO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\r\n    },\r\n    token: serializedTokens.bdo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 183,\r\n    lpSymbol: 'EGLD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\r\n    },\r\n    token: serializedTokens.egld,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 182,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\r\n    },\r\n    token: serializedTokens.ust,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 181,\r\n    lpSymbol: 'mAMZN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2c065E42B464ef38480778B0624A207A09042481',\r\n    },\r\n    token: serializedTokens.mamzn,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 180,\r\n    lpSymbol: 'mGOOGL-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\r\n    },\r\n    token: serializedTokens.mgoogl,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 179,\r\n    lpSymbol: 'mNFLX-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\r\n    },\r\n    token: serializedTokens.mnflx,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 178,\r\n    lpSymbol: 'mTSLA-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\r\n    },\r\n    token: serializedTokens.mtsla,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 177,\r\n    lpSymbol: 'wSOTE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\r\n    },\r\n    token: serializedTokens.wsote,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 176,\r\n    lpSymbol: 'FRONT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\r\n    },\r\n    token: serializedTokens.front,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 175,\r\n    lpSymbol: 'Helmet-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\r\n    },\r\n    token: serializedTokens.helmet,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 174,\r\n    lpSymbol: 'BTCST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\r\n    },\r\n    token: serializedTokens.btcst,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 173,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\r\n    },\r\n    token: serializedTokens.ltc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 172,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 171,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\r\n    },\r\n    token: serializedTokens.dai,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 170,\r\n    lpSymbol: 'BSCX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\r\n    },\r\n    token: serializedTokens.bscx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 169,\r\n    lpSymbol: 'TEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\r\n    },\r\n    token: serializedTokens.ten,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 168,\r\n    lpSymbol: 'bALBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\r\n    },\r\n    token: serializedTokens.balbt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 167,\r\n    lpSymbol: 'REEF-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\r\n    },\r\n    token: serializedTokens.reef,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 166,\r\n    lpSymbol: 'Ditto-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\r\n    },\r\n    token: serializedTokens.ditto,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 165,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\r\n    },\r\n    token: serializedTokens.vai,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 164,\r\n    lpSymbol: 'BLK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\r\n    },\r\n    token: serializedTokens.blink,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 163,\r\n    lpSymbol: 'UNFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\r\n    },\r\n    token: serializedTokens.unfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 162,\r\n    lpSymbol: 'HARD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\r\n    },\r\n    token: serializedTokens.hard,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 161,\r\n    lpSymbol: 'CTK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\r\n    },\r\n    token: serializedTokens.ctk,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 160,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\r\n    },\r\n    token: serializedTokens.sxp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 159,\r\n    lpSymbol: 'INJ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\r\n    },\r\n    token: serializedTokens.inj,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 158,\r\n    lpSymbol: 'FIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\r\n    },\r\n    token: serializedTokens.fil,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 157,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\r\n    },\r\n    token: serializedTokens.uni,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 156,\r\n    lpSymbol: 'YFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\r\n    },\r\n    token: serializedTokens.yfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 155,\r\n    lpSymbol: 'YFII-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\r\n    },\r\n    token: serializedTokens.yfii,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 154,\r\n    lpSymbol: 'ATOM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\r\n    },\r\n    token: serializedTokens.atom,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 153,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\r\n    },\r\n    token: serializedTokens.xrp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 152,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 151,\r\n    lpSymbol: 'ALPHA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\r\n    },\r\n    token: serializedTokens.alpha,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 150,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 149,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\r\n    },\r\n    token: serializedTokens.eth,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 148,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\r\n    },\r\n    token: serializedTokens.xvs,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 147,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\r\n    },\r\n    token: serializedTokens.twt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 146,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 145,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\r\n    },\r\n    token: serializedTokens.link,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 144,\r\n    lpSymbol: 'EOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x082A80b3a55BD3B320a16678784186a979882b21',\r\n    },\r\n    token: serializedTokens.eos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 143,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\r\n    },\r\n    token: serializedTokens.dot,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 142,\r\n    lpSymbol: 'BAND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x473390697036E7611a670575eA9141583471fF47',\r\n    },\r\n    token: serializedTokens.band,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 141,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\r\n    },\r\n    token: serializedTokens.ada,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 140,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\r\n    },\r\n    token: serializedTokens.busd,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  /**\r\n   * All farms below here are from v1 and are to be set to 0x\r\n   */\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\r\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 136,\r\n    lpSymbol: 'τBTC-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\r\n    },\r\n    token: serializedTokens.τbtc,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 76,\r\n    lpSymbol: 'SWINGBY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\r\n    },\r\n    token: serializedTokens.swingby,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 135,\r\n    lpSymbol: 'XED-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\r\n    },\r\n    token: serializedTokens.xed,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 134,\r\n    lpSymbol: 'HAKKA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\r\n    },\r\n    token: serializedTokens.hakka,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 133,\r\n    lpSymbol: 'CGG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\r\n    },\r\n    token: serializedTokens.cgg,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 132,\r\n    lpSymbol: 'SUTER-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\r\n    },\r\n    token: serializedTokens.suter,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 131,\r\n    lpSymbol: 'bROOBEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\r\n    },\r\n    token: serializedTokens.broobee,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 130,\r\n    lpSymbol: 'HZN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\r\n    },\r\n    token: serializedTokens.hzn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 129,\r\n    lpSymbol: 'ALPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\r\n    },\r\n    token: serializedTokens.alpa,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 128,\r\n    lpSymbol: 'PERL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\r\n    },\r\n    token: serializedTokens.perl,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 127,\r\n    lpSymbol: 'TLM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\r\n    },\r\n    token: serializedTokens.tlm,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 125,\r\n    lpSymbol: 'JGN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x890479844484D67e34B99e1BBc1468231b254c08',\r\n    },\r\n    token: serializedTokens.jgn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 124,\r\n    lpSymbol: 'EPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\r\n    },\r\n    token: serializedTokens.eps,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 123,\r\n    lpSymbol: 'ARPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\r\n    },\r\n    token: serializedTokens.arpa,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 122,\r\n    lpSymbol: 'ITAM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\r\n    },\r\n    token: serializedTokens.itam,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 121,\r\n    lpSymbol: 'BONDLY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\r\n    },\r\n    token: serializedTokens.bondly,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 120,\r\n    lpSymbol: 'TKO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\r\n    },\r\n    token: serializedTokens.tko,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 119,\r\n    lpSymbol: 'APYS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\r\n    },\r\n    token: serializedTokens.apys,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 118,\r\n    lpSymbol: 'HOO-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\r\n    },\r\n    token: serializedTokens.hoo,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 117,\r\n    lpSymbol: 'ODDZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61376b56ff33c618b115131712a4138f98810a6a',\r\n    },\r\n    token: serializedTokens.oddz,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 116,\r\n    lpSymbol: 'EASY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\r\n    },\r\n    token: serializedTokens.easy,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 115,\r\n    lpSymbol: 'NRV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\r\n    },\r\n    token: serializedTokens.nrv,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 114,\r\n    lpSymbol: 'DEGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\r\n    },\r\n    token: serializedTokens.dego,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 113,\r\n    lpSymbol: 'GUM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\r\n    },\r\n    token: serializedTokens.gum,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 112,\r\n    lpSymbol: 'pBTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\r\n    },\r\n    token: serializedTokens.pbtc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 111,\r\n    lpSymbol: 'DFT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\r\n    },\r\n    token: serializedTokens.dft,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 110,\r\n    lpSymbol: 'SWTH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\r\n    },\r\n    token: serializedTokens.swth,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 109,\r\n    lpSymbol: 'LIEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcd14855150335AAE984aa6D281E090c27035C692',\r\n    },\r\n    token: serializedTokens.lien,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 108,\r\n    lpSymbol: 'ZIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\r\n    },\r\n    token: serializedTokens.zil,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 107,\r\n    lpSymbol: 'pCWS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\r\n    },\r\n    token: serializedTokens.pcws,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 106,\r\n    lpSymbol: 'bBADGER-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\r\n    },\r\n    token: serializedTokens.bbadger,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 104,\r\n    lpSymbol: 'bDIGG-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\r\n    },\r\n    token: serializedTokens.bdigg,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 103,\r\n    lpSymbol: 'LTO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\r\n    },\r\n    token: serializedTokens.lto,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 102,\r\n    lpSymbol: 'MIR-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\r\n    },\r\n    token: serializedTokens.mir,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 101,\r\n    lpSymbol: 'TRADE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\r\n    },\r\n    token: serializedTokens.trade,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 100,\r\n    lpSymbol: 'DUSK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\r\n    },\r\n    token: serializedTokens.dusk,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 99,\r\n    lpSymbol: 'BIFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\r\n    },\r\n    token: serializedTokens.bifi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 98,\r\n    lpSymbol: 'TXL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\r\n    },\r\n    token: serializedTokens.txl,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 97,\r\n    lpSymbol: 'COS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\r\n    },\r\n    token: serializedTokens.cos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 96,\r\n    lpSymbol: 'BUNNY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\r\n    },\r\n    token: serializedTokens.bunny,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 95,\r\n    lpSymbol: 'ALICE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\r\n    },\r\n    token: serializedTokens.alice,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 94,\r\n    lpSymbol: 'FOR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\r\n    },\r\n    token: serializedTokens.for,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 93,\r\n    lpSymbol: 'BUX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\r\n    },\r\n    token: serializedTokens.bux,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 92,\r\n    lpSymbol: 'NULS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\r\n    },\r\n    token: serializedTokens.nuls,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 91,\r\n    lpSymbol: 'NULS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\r\n    },\r\n    token: serializedTokens.nuls,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 90,\r\n    lpSymbol: 'BELT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\r\n    },\r\n    token: serializedTokens.belt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 89,\r\n    lpSymbol: 'RAMP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\r\n    },\r\n    token: serializedTokens.ramp,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 88,\r\n    lpSymbol: 'BFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\r\n    },\r\n    token: serializedTokens.bfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 87,\r\n    lpSymbol: 'DEXE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\r\n    },\r\n    token: serializedTokens.dexe,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 86,\r\n    lpSymbol: 'BEL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\r\n    },\r\n    token: serializedTokens.bel,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 85,\r\n    lpSymbol: 'TPT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\r\n    },\r\n    token: serializedTokens.tpt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 84,\r\n    lpSymbol: 'WATCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\r\n    },\r\n    token: serializedTokens.watch,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 83,\r\n    lpSymbol: 'xMARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\r\n    },\r\n    token: serializedTokens.xmark,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 82,\r\n    lpSymbol: 'bMXX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\r\n    },\r\n    token: serializedTokens.bmxx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 81,\r\n    lpSymbol: 'IOTX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\r\n    },\r\n    token: serializedTokens.iotx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 80,\r\n    lpSymbol: 'BOR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\r\n    },\r\n    token: serializedTokens.bor,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 79,\r\n    lpSymbol: 'bOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\r\n    },\r\n    token: serializedTokens.bopen,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 78,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\r\n    },\r\n    token: serializedTokens.sushi,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 77,\r\n    lpSymbol: 'DODO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\r\n    },\r\n    token: serializedTokens.dodo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 75,\r\n    lpSymbol: 'BRY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\r\n    },\r\n    token: serializedTokens.bry,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 74,\r\n    lpSymbol: 'ZEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\r\n    },\r\n    token: serializedTokens.zee,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 73,\r\n    lpSymbol: 'SWGb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\r\n    },\r\n    token: serializedTokens.swgb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 72,\r\n    lpSymbol: 'COMP-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0392957571f28037607c14832d16f8b653edd472',\r\n    },\r\n    token: serializedTokens.comp,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 71,\r\n    lpSymbol: 'SFP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\r\n    },\r\n    token: serializedTokens.sfp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 70,\r\n    lpSymbol: 'BETH-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\r\n    },\r\n    token: serializedTokens.beth,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 69,\r\n    lpSymbol: 'LINA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\r\n    },\r\n    token: serializedTokens.lina,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 68,\r\n    lpSymbol: 'LIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\r\n    },\r\n    token: serializedTokens.lit,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 67,\r\n    lpSymbol: 'HGET-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\r\n    },\r\n    token: serializedTokens.hget,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 66,\r\n    lpSymbol: 'BDO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\r\n    },\r\n    token: serializedTokens.bdo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 65,\r\n    lpSymbol: 'EGLD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\r\n    },\r\n    token: serializedTokens.egld,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 63,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\r\n    },\r\n    token: serializedTokens.ust,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 62,\r\n    lpSymbol: 'mAMZN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\r\n    },\r\n    token: serializedTokens.mamzn,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 61,\r\n    lpSymbol: 'mGOOGL-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\r\n    },\r\n    token: serializedTokens.mgoogl,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 60,\r\n    lpSymbol: 'mNFLX-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF609ade3846981825776068a8eD7746470029D1f',\r\n    },\r\n    token: serializedTokens.mnflx,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 59,\r\n    lpSymbol: 'mTSLA-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\r\n    },\r\n    token: serializedTokens.mtsla,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 58,\r\n    lpSymbol: 'wSOTE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\r\n    },\r\n    token: serializedTokens.wsote,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 57,\r\n    lpSymbol: 'FRONT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\r\n    },\r\n    token: serializedTokens.front,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 56,\r\n    lpSymbol: 'Helmet-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\r\n    },\r\n    token: serializedTokens.helmet,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 55,\r\n    lpSymbol: 'BTCST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\r\n    },\r\n    token: serializedTokens.btcst,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 54,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\r\n    },\r\n    token: serializedTokens.ltc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 53,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 52,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\r\n    },\r\n    token: serializedTokens.dai,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 51,\r\n    lpSymbol: 'BSCX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\r\n    },\r\n    token: serializedTokens.bscx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 50,\r\n    lpSymbol: 'TEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\r\n    },\r\n    token: serializedTokens.ten,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 49,\r\n    lpSymbol: 'bALBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\r\n    },\r\n    token: serializedTokens.balbt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 46,\r\n    lpSymbol: 'OG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\r\n    },\r\n    token: serializedTokens.og,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 47,\r\n    lpSymbol: 'ASR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd6b900d5308356317299dafe303e661271aa12f1',\r\n    },\r\n    token: serializedTokens.asr,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 48,\r\n    lpSymbol: 'ATM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\r\n    },\r\n    token: serializedTokens.atm,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 45,\r\n    lpSymbol: 'REEF-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\r\n    },\r\n    token: serializedTokens.reef,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 44,\r\n    lpSymbol: 'Ditto-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\r\n    },\r\n    token: serializedTokens.ditto,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 43,\r\n    lpSymbol: 'JUV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\r\n    },\r\n    token: serializedTokens.juv,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 42,\r\n    lpSymbol: 'PSG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\r\n    },\r\n    token: serializedTokens.psg,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 39,\r\n    lpSymbol: 'UNFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\r\n    },\r\n    token: serializedTokens.unfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 41,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xff17ff314925dff772b71abdff2782bc913b3575',\r\n    },\r\n    token: serializedTokens.vai,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 40,\r\n    lpSymbol: 'BLK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\r\n    },\r\n    token: serializedTokens.blink,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 37,\r\n    lpSymbol: 'HARD-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\r\n    },\r\n    token: serializedTokens.hard,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\r\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\r\n    },\r\n    token: serializedTokens.busd,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 3,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\r\n      56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\r\n    },\r\n    token: serializedTokens.ada,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 4,\r\n    lpSymbol: 'BAND-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\r\n      56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\r\n    },\r\n    token: serializedTokens.band,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 5,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\r\n    },\r\n    token: serializedTokens.dot,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 6,\r\n    lpSymbol: 'EOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\r\n    },\r\n    token: serializedTokens.eos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 7,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\r\n    },\r\n    token: serializedTokens.link,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 11,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 12,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\r\n    },\r\n    token: serializedTokens.twt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 13,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\r\n    },\r\n    token: serializedTokens.xvs,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 14,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\r\n    },\r\n    token: serializedTokens.eth,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 15,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 16,\r\n    lpSymbol: 'ALPHA-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\r\n    },\r\n    token: serializedTokens.alpha,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 17,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 18,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\r\n    },\r\n    token: serializedTokens.xrp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 19,\r\n    lpSymbol: 'ATOM-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\r\n    },\r\n    token: serializedTokens.atom,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 20,\r\n    lpSymbol: 'YFII-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\r\n    },\r\n    token: serializedTokens.yfii,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 21,\r\n    lpSymbol: 'DAI-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\r\n    },\r\n    token: serializedTokens.dai,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 22,\r\n    lpSymbol: 'XTZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\r\n    },\r\n    token: serializedTokens.xtz,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 23,\r\n    lpSymbol: 'BCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x54edd846db17f43b6e43296134ecd96284671e81',\r\n    },\r\n    token: serializedTokens.bch,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 24,\r\n    lpSymbol: 'YFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\r\n    },\r\n    token: serializedTokens.yfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 25,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\r\n    },\r\n    token: serializedTokens.uni,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 26,\r\n    lpSymbol: 'FIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\r\n    },\r\n    token: serializedTokens.fil,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 27,\r\n    lpSymbol: 'INJ-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\r\n    },\r\n    token: serializedTokens.inj,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 29,\r\n    lpSymbol: 'USDC-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 30,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\r\n    },\r\n    token: serializedTokens.sxp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 32,\r\n    lpSymbol: 'CTK-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7793870484647a7278907498ec504879d6971EAb',\r\n    },\r\n    token: serializedTokens.ctk,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 34,\r\n    lpSymbol: 'STAX-CAKE LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\r\n    },\r\n    token: serializedTokens.stax,\r\n    quoteToken: serializedTokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 35,\r\n    lpSymbol: 'NAR-CAKE LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\r\n    },\r\n    token: serializedTokens.nar,\r\n    quoteToken: serializedTokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 36,\r\n    lpSymbol: 'NYA-CAKE LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x2730bf486d658838464a4ef077880998d944252d',\r\n    },\r\n    token: serializedTokens.nya,\r\n    quoteToken: serializedTokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 38,\r\n    lpSymbol: 'bROOBEE-CAKE LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\r\n    },\r\n    token: serializedTokens.broobee,\r\n    quoteToken: serializedTokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 8,\r\n    lpSymbol: 'BAKE-BNB Bakery LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\r\n    },\r\n    token: serializedTokens.bake,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 9,\r\n    lpSymbol: 'BURGER-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\r\n    },\r\n    token: serializedTokens.burger,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 10,\r\n    lpSymbol: 'BAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\r\n    },\r\n    token: serializedTokens.bake,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n]\r\n\r\nexport default farms\r\n","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString: string) {\r\n  return /^0x0*$/.test(hexNumberString)\r\n}\r\n","import { EN } from 'config/localization/languages'\r\n\r\nconst publicUrl = process.env.PUBLIC_URL\r\n\r\nexport const LS_KEY = 'pancakeswap_language'\r\n\r\nexport const fetchLocale = async (locale) => {\r\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getLanguageCodeFromLS = () => {\r\n  try {\r\n    const codeFromStorage = localStorage.getItem(LS_KEY)\r\n\r\n    return codeFromStorage || EN.locale\r\n  } catch {\r\n    return EN.locale\r\n  }\r\n}\r\n","/**\r\n * Truncate a transaction or address hash\r\n */\r\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\r\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\r\n}\r\n\r\nexport default truncateHash\r\n","import { useEffect, useState } from 'react'\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce<T>(value: T, delay: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value)\r\n    }, delay)\r\n\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler)\r\n    }\r\n  }, [value, delay])\r\n\r\n  return debouncedValue\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\nimport useToast from 'hooks/useToast'\r\nimport { profileClear } from 'state/profile'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst useAuth = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorNames) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem(connectorLocalStorageKey)\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError(t('Provider Error'), t('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\r\n      }\r\n    },\r\n    [t, activate, toastError],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    dispatch(profileClear())\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n    window.localStorage.removeItem(connectorLocalStorageKey)\r\n  }, [deactivate, dispatch])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = window.ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error('Failed to setup the network in Metamask:', error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\r\n  const tokenAdded = await window.ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\n\r\nexport function currencyId(currency: Currency): string {\r\n  if (currency === ETHER) return 'BNB'\r\n  if (currency instanceof Token) return currency.address\r\n  throw new Error('invalid currency')\r\n}\r\n\r\nexport default currencyId\r\n","/* eslint-disable no-case-declarations */\r\n/**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */\r\nexport default function uriToHttp(uri: string): string[] {\r\n  const protocol = uri.split(':')[0].toLowerCase()\r\n  switch (protocol) {\r\n    case 'https':\r\n      return [uri]\r\n    case 'http':\r\n      return [`https${uri.substr(4)}`, uri]\r\n    case 'ipfs':\r\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\r\n    case 'ipns':\r\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n","import { Collections, CollectionKey } from './types'\r\n\r\nconst collections: Collections = {\r\n  [CollectionKey.PANCAKE]: {\r\n    name: 'Pancake Bunnies',\r\n    address: {\r\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n    },\r\n  },\r\n}\r\n\r\nexport default collections\r\n","import React, { useCallback } from 'react'\r\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ErrorIcon,\r\n  ArrowUpIcon,\r\n  MetamaskIcon,\r\n  Flex,\r\n  Box,\r\n  Link,\r\n  Spinner,\r\n  Modal,\r\n  InjectedModalProps,\r\n} from '@pancakeswap/uikit'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { RowFixed } from '../Layout/Row'\r\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\r\nimport { getBscScanLink } from '../../utils'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`\r\nconst Section = styled(AutoColumn)`\r\n  padding: 24px;\r\n`\r\n\r\nconst ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 24px 0;\r\n`\r\n\r\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <ConfirmedIcon>\r\n        <Spinner />\r\n      </ConfirmedIcon>\r\n      <AutoColumn gap=\"12px\" justify=\"center\">\r\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text bold small textAlign=\"center\">\r\n            {pendingText}\r\n          </Text>\r\n        </AutoColumn>\r\n        <Text small color=\"textSubtle\" textAlign=\"center\">\r\n          {t('Confirm this transaction in your wallet')}\r\n        </Text>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nfunction TransactionSubmittedContent({\r\n  onDismiss,\r\n  chainId,\r\n  hash,\r\n  currencyToAdd,\r\n}: {\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  chainId: ChainId\r\n  currencyToAdd?: Currency | undefined\r\n}) {\r\n  const { library } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ConfirmedIcon>\r\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\r\n          {chainId && hash && (\r\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\r\n              {t('View on BscScan')}\r\n            </Link>\r\n          )}\r\n          {currencyToAdd && library?.provider?.isMetaMask && (\r\n            <Button\r\n              variant=\"tertiary\"\r\n              mt=\"12px\"\r\n              width=\"fit-content\"\r\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\r\n            >\r\n              <RowFixed>\r\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\r\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\r\n              </RowFixed>\r\n            </Button>\r\n          )}\r\n          <Button onClick={onDismiss} mt=\"20px\">\r\n            {t('Close')}\r\n          </Button>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function ConfirmationModalContent({\r\n  bottomContent,\r\n  topContent,\r\n}: {\r\n  topContent: () => React.ReactNode\r\n  bottomContent: () => React.ReactNode\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <Box>{topContent()}</Box>\r\n      <Box>{bottomContent()}</Box>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn justify=\"center\">\r\n        <ErrorIcon color=\"failure\" width=\"64px\" />\r\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\r\n          {message}\r\n        </Text>\r\n      </AutoColumn>\r\n\r\n      <Flex justifyContent=\"center\" pt=\"24px\">\r\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\ninterface ConfirmationModalProps {\r\n  title: string\r\n  customOnDismiss?: () => void\r\n  hash: string | undefined\r\n  content: () => React.ReactNode\r\n  attemptingTxn: boolean\r\n  pendingText: string\r\n  currencyToAdd?: Currency | undefined\r\n}\r\n\r\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\r\n  title,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  attemptingTxn,\r\n  hash,\r\n  pendingText,\r\n  content,\r\n  currencyToAdd,\r\n}) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const handleDismiss = useCallback(() => {\r\n    if (customOnDismiss) {\r\n      customOnDismiss()\r\n    }\r\n    onDismiss()\r\n  }, [customOnDismiss, onDismiss])\r\n\r\n  if (!chainId) return null\r\n\r\n  return (\r\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\r\n      {attemptingTxn ? (\r\n        <ConfirmationPendingContent pendingText={pendingText} />\r\n      ) : hash ? (\r\n        <TransactionSubmittedContent\r\n          chainId={chainId}\r\n          hash={hash}\r\n          onDismiss={onDismiss}\r\n          currencyToAdd={currencyToAdd}\r\n        />\r\n      ) : (\r\n        content()\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionConfirmationModal\r\n","import { isAddress } from '../../utils'\r\nimport useENSAddress from './useENSAddress'\r\nimport useENSName from './useENSName'\r\n\r\n/**\r\n * Given a name or address, does a lookup to resolve to an address and name\r\n * @param nameOrAddress ENS name or address\r\n */\r\nexport default function useENS(nameOrAddress?: string | null): {\r\n  loading: boolean\r\n  address: string | null\r\n  name: string | null\r\n} {\r\n  const validated = isAddress(nameOrAddress)\r\n  const reverseLookup = useENSName(validated || undefined)\r\n  const lookup = useENSAddress(nameOrAddress)\r\n\r\n  return {\r\n    loading: reverseLookup.loading || lookup.loading,\r\n    address: validated || lookup.address,\r\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport { isAddress } from '../../utils'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\nimport useDebounce from '../useDebounce'\r\n\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\r\n  const debouncedAddress = useDebounce(address, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\r\n    try {\r\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedAddress])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\r\n\r\n  const changed = debouncedAddress !== address\r\n  return {\r\n    ENSName: changed ? null : name.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || name.loading,\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\nimport useDebounce from '../useDebounce'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\r\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\r\n  const debouncedName = useDebounce(ensName, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedName) return [undefined]\r\n    try {\r\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\r\n\r\n  const changed = debouncedName !== ensName\r\n  return {\r\n    address: changed ? null : addr.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || addr.loading,\r\n  }\r\n}\r\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\r\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\r\n\r\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\r\nexport function isTradeBetter(\r\n  tradeA: Trade | undefined | null,\r\n  tradeB: Trade | undefined | null,\r\n  minimumDelta: Percent = ZERO_PERCENT,\r\n): boolean | undefined {\r\n  if (tradeA && !tradeB) return false\r\n  if (tradeB && !tradeA) return true\r\n  if (!tradeA || !tradeB) return undefined\r\n\r\n  if (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\r\n  ) {\r\n    throw new Error('Trades are not comparable')\r\n  }\r\n\r\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\r\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\r\n  }\r\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\r\n}\r\n\r\nexport default isTradeBetter\r\n","/* eslint-disable no-param-reassign */\r\nimport { isTradeBetter } from 'utils/trades'\r\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\r\nimport flatMap from 'lodash/flatMap'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\n\r\nimport { useUserSingleHopOnly } from 'state/user/hooks'\r\nimport {\r\n  BASES_TO_CHECK_TRADES_AGAINST,\r\n  CUSTOM_BASES,\r\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\r\n  ADDITIONAL_BASES,\r\n} from '../config/constants'\r\nimport { PairState, usePairs } from './usePairs'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nimport { useUnsupportedTokens } from './Tokens'\r\n\r\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const [tokenA, tokenB] = chainId\r\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n    : [undefined, undefined]\r\n\r\n  const bases: Token[] = useMemo(() => {\r\n    if (!chainId) return []\r\n\r\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\r\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\r\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\r\n\r\n    return [...common, ...additionalA, ...additionalB]\r\n  }, [chainId, tokenA, tokenB])\r\n\r\n  const basePairs: [Token, Token][] = useMemo(\r\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\r\n    [bases],\r\n  )\r\n\r\n  const allPairCombinations: [Token, Token][] = useMemo(\r\n    () =>\r\n      tokenA && tokenB\r\n        ? [\r\n            // the direct pair\r\n            [tokenA, tokenB],\r\n            // token A against all bases\r\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\r\n            // token B against all bases\r\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\r\n            // each base against all bases\r\n            ...basePairs,\r\n          ]\r\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\r\n            .filter(([t0, t1]) => t0.address !== t1.address)\r\n            .filter(([tokenA_, tokenB_]) => {\r\n              if (!chainId) return true\r\n              const customBases = CUSTOM_BASES[chainId]\r\n\r\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\r\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\r\n\r\n              if (!customBasesA && !customBasesB) return true\r\n\r\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\r\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\r\n\r\n              return true\r\n            })\r\n        : [],\r\n    [tokenA, tokenB, bases, basePairs, chainId],\r\n  )\r\n\r\n  const allPairs = usePairs(allPairCombinations)\r\n\r\n  // only pass along valid pairs, non-duplicated pairs\r\n  return useMemo(\r\n    () =>\r\n      Object.values(\r\n        allPairs\r\n          // filter out invalid pairs\r\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\r\n          // filter out duplicated pairs\r\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\r\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\r\n            return memo\r\n          }, {}),\r\n      ),\r\n    [allPairs],\r\n  )\r\n}\r\n\r\nconst MAX_HOPS = 3\r\n\r\n/**\r\n * Returns the best trade for the exact amount of tokens in to the given token out\r\n */\r\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  return useMemo(() => {\r\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\r\n      if (singleHopOnly) {\r\n        return (\r\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\r\n          null\r\n        )\r\n      }\r\n      // search through trades with varying hops, find best trade out of them\r\n      let bestTradeSoFar: Trade | null = null\r\n      for (let i = 1; i <= MAX_HOPS; i++) {\r\n        const currentTrade: Trade | null =\r\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\r\n          null\r\n        // if current trade is best yet, save it\r\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n          bestTradeSoFar = currentTrade\r\n        }\r\n      }\r\n      return bestTradeSoFar\r\n    }\r\n\r\n    return null\r\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\r\n}\r\n\r\n/**\r\n * Returns the best trade for the token in to the exact amount of token out\r\n */\r\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  return useMemo(() => {\r\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\r\n      if (singleHopOnly) {\r\n        return (\r\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\r\n          null\r\n        )\r\n      }\r\n      // search through trades with varying hops, find best trade out of them\r\n      let bestTradeSoFar: Trade | null = null\r\n      for (let i = 1; i <= MAX_HOPS; i++) {\r\n        const currentTrade =\r\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\r\n          null\r\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n          bestTradeSoFar = currentTrade\r\n        }\r\n      }\r\n      return bestTradeSoFar\r\n    }\r\n    return null\r\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\r\n}\r\n\r\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\r\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\r\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\r\n\r\n  // if unsupported list loaded & either token on list, mark as unsupported\r\n  if (unsupportedTokens) {\r\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\r\n      return true\r\n    }\r\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { isAddress } from 'utils'\r\nimport { useAppDispatch } from 'state'\r\nimport { State, ProfileState } from '../types'\r\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\r\n\r\nexport const useFetchProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchProfile(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\r\n}\r\n\r\nexport const useGetProfileAvatar = (account: string) => {\r\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\r\n  const { username, nft } = profileAvatar || {}\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    const address = isAddress(account)\r\n\r\n    if (!nft && address) {\r\n      dispatch(fetchProfileAvatar(account))\r\n    }\r\n\r\n    if (!username && nft && address) {\r\n      dispatch(fetchProfileUsername(account))\r\n    }\r\n  }, [account, nft, username, dispatch])\r\n\r\n  return { username, nft }\r\n}\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { PageMeta } from './types'\r\n\r\nexport const DEFAULT_META: PageMeta = {\r\n  title: 'Dead Token Exchange',\r\n  description:\r\n    'The most popular AMM on BSC by user count! ',\r\n}\r\n\r\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\r\n  let basePath\r\n  if (path.startsWith('/swap')) {\r\n    basePath = '/swap'\r\n  } else if (path.startsWith('/add')) {\r\n    basePath = '/add'\r\n  } else if (path.startsWith('/remove')) {\r\n    basePath = '/remove'\r\n  } else if (path.startsWith('/teams')) {\r\n    basePath = '/teams'\r\n  } else if (path.startsWith('/voting/proposal') && path !== '/voting/proposal/create') {\r\n    basePath = '/voting/proposal'\r\n  } else {\r\n    basePath = path\r\n  }\r\n\r\n  switch (basePath) {\r\n    case '/':\r\n      return {\r\n        title: `${t('Home')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/swap':\r\n      return {\r\n        title: `${t('Exchange')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/add':\r\n      return {\r\n        title: `${t('Add Liquidity')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/remove':\r\n      return {\r\n        title: `${t('Remove Liquidity')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/liquidity':\r\n      return {\r\n        title: `${t('Liquidity')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/find':\r\n      return {\r\n        title: `${t('Import Pool')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/competition':\r\n      return {\r\n        title: `${t('Trading Battle')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/prediction':\r\n      return {\r\n        title: `${t('Prediction')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/prediction/leaderboard':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/farms':\r\n      return {\r\n        title: `${t('Farms')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/farms/auction':\r\n      return {\r\n        title: `${t('Farm Auctions')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/lottery':\r\n      return {\r\n        title: `${t('Lottery')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/collectibles':\r\n      return {\r\n        title: `${t('Collectibles')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/ifo':\r\n      return {\r\n        title: `${t('Initial Farm Offering')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/teams':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/profile':\r\n      return {\r\n        title: `${t('Your Profile')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/profile/tasks':\r\n      return {\r\n        title: `${t('Task Center')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/voting':\r\n      return {\r\n        title: `${t('Voting')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/voting/proposal':\r\n      return {\r\n        title: `${t('Proposals')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/voting/proposal/create':\r\n      return {\r\n        title: `${t('Make a Proposal')} | ${t('Dead Token Exchange')}`,\r\n      }\r\n    case '/info':\r\n      return {\r\n        title: `${t('Overview')} | ${t('Dead Token Exchange Info & Analytics')}`,\r\n        description: 'View statistics for Dead Token Exchange exchanges.',\r\n      }\r\n    case '/info/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Dead Token Exchange Info & Analytics')}`,\r\n        description: 'View statistics for Dead Token Exchange exchanges.',\r\n      }\r\n    case '/info/tokens':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Dead Token Exchange Info & Analytics')}`,\r\n        description: 'View statistics for Dead Token Exchange exchanges.',\r\n      }\r\n    default:\r\n      return null\r\n  }\r\n}\r\n","import { ChainId, Currency, currencyEquals, JSBI, Price } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport tokens, { mainnetTokens } from 'config/constants/tokens'\r\nimport { PairState, usePairs } from './usePairs'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst BUSD_MAINNET = mainnetTokens.busd\r\nconst { wbnb: WBNB } = tokens\r\n\r\n/**\r\n * Returns the price in BUSD of the input currency\r\n * @param currency currency to compute the BUSD price of\r\n */\r\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const wrapped = wrappedCurrency(currency, chainId)\r\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\r\n    () => [\r\n      [chainId && wrapped && currencyEquals(WBNB, wrapped) ? undefined : currency, chainId ? WBNB : undefined],\r\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\r\n      [chainId ? WBNB : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\r\n    ],\r\n    [chainId, currency, wrapped],\r\n  )\r\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\r\n\r\n  return useMemo(() => {\r\n    if (!currency || !wrapped || !chainId) {\r\n      return undefined\r\n    }\r\n    // handle weth/eth\r\n    if (wrapped.equals(WBNB)) {\r\n      if (busdPair) {\r\n        const price = busdPair.priceOf(WBNB)\r\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\r\n      }\r\n      return undefined\r\n    }\r\n    // handle busd\r\n    if (wrapped.equals(BUSD_MAINNET)) {\r\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\r\n    }\r\n\r\n    const ethPairETHAmount = ethPair?.reserveOf(WBNB)\r\n    const ethPairETHBUSDValue: JSBI =\r\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WBNB).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\r\n\r\n    // all other tokens\r\n    // first try the busd pair\r\n    if (\r\n      busdPairState === PairState.EXISTS &&\r\n      busdPair &&\r\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\r\n    ) {\r\n      const price = busdPair.priceOf(wrapped)\r\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\r\n    }\r\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\r\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WBNB).greaterThan('0')) {\r\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\r\n        const currencyEthPrice = ethPair.priceOf(WBNB)\r\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\r\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\r\n      }\r\n    }\r\n\r\n    return undefined\r\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\r\n}\r\n\r\nexport const useCakeBusdPrice = (): Price | undefined => {\r\n  const cakeBusdPrice = useBUSDPrice(tokens.cake)\r\n  return cakeBusdPrice\r\n}\r\n\r\nexport const useBNBBusdPrice = (): Price | undefined => {\r\n  const bnbBusdPrice = useBUSDPrice(tokens.wbnb)\r\n  return bnbBusdPrice\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useLocation } from 'react-router'\r\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\r\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\r\nimport Container from './Container'\r\n\r\nconst StyledPage = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\r\n  const { t } = useTranslation()\r\n  const { pathname } = useLocation()\r\n  const cakePriceUsd = useCakeBusdPrice()\r\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(3)}` : '...'\r\n\r\n  const pageMeta = getCustomMeta(pathname, t) || {}\r\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\r\n  let pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\r\n  if (symbol) {\r\n    pageTitle = [symbol, title].join(' - ')\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{pageTitle}</title>\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  symbol?: string\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta symbol={symbol} />\r\n      <StyledPage {...props}>{children}</StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport CircleLoader from '../../Loader/CircleLoader'\r\n\r\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-decoration: none !important;\r\n  border-radius: 0.5rem;\r\n  padding: 0.25rem 0rem;\r\n  font-weight: 500;\r\n  font-size: 0.825rem;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\r\n  color: ${({ pending, success, theme }) =>\r\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\r\n`\r\n\r\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const summary = tx?.summary\r\n  const pending = !tx?.receipt\r\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\r\n\r\n  if (!chainId) return null\r\n\r\n  return (\r\n    <TransactionState pending={pending} success={success}>\r\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\r\n      <IconWrapper pending={pending} success={success}>\r\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\r\n      </IconWrapper>\r\n    </TransactionState>\r\n  )\r\n}\r\n","import React, { useMemo, useCallback } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport { AppDispatch } from 'state'\r\nimport { clearAllTransactions } from 'state/transactions/actions'\r\nimport { AutoRow } from '../../Layout/Row'\r\nimport Transaction from './Transaction'\r\n\r\n// we want the latest one to come first, so return negative if a is after b\r\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\r\n  return b.addedTime - a.addedTime\r\n}\r\n\r\nfunction renderTransactions(transactions: TransactionDetails[]) {\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      {transactions.map((tx) => {\r\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\r\n      })}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const allTransactions = useAllTransactions()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions)\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\r\n  }, [allTransactions])\r\n\r\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\r\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\r\n\r\n  const clearAllTransactionsCallback = useCallback(() => {\r\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\r\n  }, [dispatch, chainId])\r\n\r\n  return (\r\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\r\n      {account && (\r\n        <ModalBody>\r\n          {!!pending.length || !!confirmed.length ? (\r\n            <>\r\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\r\n                <Text>{t('Recent Transactions')}</Text>\r\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\r\n                  {t('clear all')}\r\n                </Button>\r\n              </AutoRow>\r\n              {renderTransactions(pending)}\r\n              {renderTransactions(confirmed)}\r\n            </>\r\n          ) : (\r\n            <Text>{t('No recent transactions')}</Text>\r\n          )}\r\n        </ModalBody>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionsModal\r\n","import React from 'react'\r\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\r\nimport TransactionsModal from './TransactionsModal'\r\n\r\nconst Transactions = () => {\r\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\r\n  return (\r\n    <>\r\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\r\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Transactions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\nimport GlobalSettings from 'components/Menu/GlobalSettings'\r\nimport Transactions from './Transactions'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\ninterface Props {\r\n  title: string\r\n  subtitle: string\r\n  helper?: string\r\n  backTo?: string\r\n  noConfig?: boolean\r\n}\r\n\r\nconst AppHeaderContainer = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 24px;\r\n  width: 100%;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\r\n  const [expertMode] = useExpertModeManager()\r\n\r\n  return (\r\n    <AppHeaderContainer>\r\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\r\n        {backTo && (\r\n          <IconButton as={Link} to={backTo}>\r\n            <ArrowBackIcon width=\"32px\" />\r\n          </IconButton>\r\n        )}\r\n        <Flex flexDirection=\"column\">\r\n          <Heading as=\"h2\" mb=\"8px\">\r\n            {title}\r\n          </Heading>\r\n          <Flex alignItems=\"center\">\r\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\r\n            <Text color=\"textSubtle\" fontSize=\"14px\">\r\n              {subtitle}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n      {!noConfig && (\r\n        <Flex alignItems=\"center\">\r\n          <NotificationDot show={expertMode}>\r\n            <GlobalSettings />\r\n          </NotificationDot>\r\n          <Transactions />\r\n        </Flex>\r\n      )}\r\n    </AppHeaderContainer>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from '@pancakeswap/uikit'\r\n\r\nexport const BodyWrapper = styled(Card)`\r\n  border-radius: 24px;\r\n  max-width: 569px; \r\n  width: 100%;\r\n  z-index: 1;\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody({ children }: { children: React.ReactNode }) {\r\n  return <BodyWrapper>{children}</BodyWrapper>\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { BlockState } from '../types'\r\n\r\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (state, action: PayloadAction<number>) => {\r\n      if (state.initialBlock === 0) {\r\n        state.initialBlock = action.payload\r\n      }\r\n\r\n      state.currentBlock = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport getGasPrice from 'utils/getGasPrice'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  const gasPrice = getGasPrice()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n","import sample from 'lodash/sample'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [\r\n  process.env.REACT_APP_NODE_1,\r\n  process.env.REACT_APP_NODE_2,\r\n  process.env.REACT_APP_NODE_3,\r\n  process.env.REACT_APP_NODE_4,\r\n]\r\n\r\nconst getNodeUrl = () => {\r\n  return sample(nodes)\r\n}\r\n\r\nexport default getNodeUrl\r\n","import { Address, Images } from '../types'\r\n\r\nexport enum CollectionKey {\r\n  PANCAKE = 'pancake',\r\n}\r\n\r\ntype Collection = {\r\n  name: string\r\n  address: Address\r\n}\r\n\r\nexport type Collections = {\r\n  [key in CollectionKey]: Collection\r\n}\r\n\r\nexport type NftImages = {\r\n  blur?: string\r\n} & Images\r\n\r\nexport type Nft = {\r\n  id?: number | string\r\n  name: string\r\n  description: string\r\n  images: NftImages\r\n  video?: {\r\n    webm: string\r\n    mp4: string\r\n  }\r\n\r\n  // Uniquely identifies the nft.\r\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\r\n  identifier: string\r\n\r\n  attributes?: any\r\n}\r\n\r\nexport type Nfts = {\r\n  [key in CollectionKey]: Nft[]\r\n}\r\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\r\n\r\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\r\n  const match = ensAddress.match(ENS_NAME_REGEX)\r\n  if (!match) return undefined\r\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\r\n}\r\n\r\nexport default parseENSAddress\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@pancakeswap/uikit'\r\nimport { ethers } from 'ethers'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\r\n  const library = new ethers.providers.Web3Provider(provider)\r\n  library.pollingInterval = POLLING_INTERVAL\r\n  return library\r\n}\r\n\r\n/**\r\n * BSC Wallet requires a different sign method\r\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\r\n */\r\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\r\n  if (window.BinanceChain) {\r\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\r\n    return signature\r\n  }\r\n\r\n  /**\r\n   * Wallet Connect does not sign the message correctly unless you use their method\r\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\r\n   */\r\n  if (provider.provider?.wc) {\r\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\r\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\r\n    return signature\r\n  }\r\n\r\n  return provider.getSigner(account).signMessage(message)\r\n}\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\r\n  }\r\n`\r\n\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function CircleLoader({\r\n  size = '16px',\r\n  stroke,\r\n  ...rest\r\n}: {\r\n  size?: string\r\n  stroke?: string\r\n  [k: string]: any\r\n}) {\r\n  return (\r\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </StyledSVG>\r\n  )\r\n}\r\n","/* eslint-disable no-continue */\r\n/* eslint-disable no-await-in-loop */\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\r\nimport Ajv from 'ajv'\r\nimport contenthashToUri from './contenthashToUri'\r\nimport { parseENSAddress } from './ENS/parseENSAddress'\r\nimport uriToHttp from './uriToHttp'\r\n\r\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\r\n\r\n/**\r\n * Contains the logic for resolving a list URL to a validated token list\r\n * @param listUrl list url\r\n * @param resolveENSContentHash resolves an ens name to a contenthash\r\n */\r\nexport default async function getTokenList(\r\n  listUrl: string,\r\n  resolveENSContentHash: (ensName: string) => Promise<string>,\r\n): Promise<TokenList> {\r\n  const parsedENS = parseENSAddress(listUrl)\r\n  let urls: string[]\r\n  if (parsedENS) {\r\n    let contentHashUri\r\n    try {\r\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\r\n    } catch (error) {\r\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\r\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\r\n    }\r\n    let translatedUri\r\n    try {\r\n      translatedUri = contenthashToUri(contentHashUri)\r\n    } catch (error) {\r\n      console.error('Failed to translate contenthash to URI', contentHashUri)\r\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\r\n    }\r\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\r\n  } else {\r\n    urls = uriToHttp(listUrl)\r\n  }\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i]\r\n    const isLast = i === urls.length - 1\r\n    let response\r\n    try {\r\n      response = await fetch(url)\r\n    } catch (error) {\r\n      console.error('Failed to fetch list', listUrl, error)\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    if (!response.ok) {\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    const json = await response.json()\r\n    if (!tokenListValidator(json)) {\r\n      const validationErrors: string =\r\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\r\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\r\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\r\n        }, '') ?? 'unknown error'\r\n      throw new Error(`Token list failed validation: ${validationErrors}`)\r\n    }\r\n    return json as TokenList\r\n  }\r\n  throw new Error('Unrecognized list URL protocol.')\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { Provider } from '@ethersproject/abstract-provider'\r\nimport { namehash } from 'ethers/lib/utils'\r\n\r\nconst REGISTRAR_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: 'node',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'resolver',\r\n    outputs: [\r\n      {\r\n        name: 'resolverAddress',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n]\r\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n\r\nconst RESOLVER_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'node',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'contenthash',\r\n    outputs: [\r\n      {\r\n        internalType: 'bytes',\r\n        name: '',\r\n        type: 'bytes',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n]\r\n\r\n// cache the resolver contracts since most of them are the public resolver\r\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\r\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\r\n}\r\n\r\n/**\r\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\r\n * @param ensName to resolve\r\n * @param provider provider to use to fetch the data\r\n */\r\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\r\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\r\n  const hash = namehash(ensName)\r\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\r\n  return resolverContract(resolverAddress, provider).contenthash(hash)\r\n}\r\n","import { nanoid } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { AppDispatch } from '../state'\r\nimport { fetchTokenList } from '../state/lists/actions'\r\nimport getTokenList from '../utils/getTokenList'\r\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\r\nimport useWeb3Provider from './useActiveWeb3React'\r\n\r\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\r\n  const { library } = useWeb3Provider()\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const ensResolver = useCallback(\r\n    (ensName: string) => {\r\n      if (chainId !== ChainId.MAINNET) {\r\n        throw new Error('Could not construct mainnet ENS resolver')\r\n      }\r\n      return resolveENSContentHash(ensName, library)\r\n    },\r\n    [chainId, library],\r\n  )\r\n\r\n  // note: prevent dispatch if using for list search or unsupported list\r\n  return useCallback(\r\n    async (listUrl: string, sendDispatch = true) => {\r\n      const requestId = nanoid()\r\n      if (sendDispatch) {\r\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\r\n      }\r\n      return getTokenList(listUrl, ensResolver)\r\n        .then((tokenList) => {\r\n          if (sendDispatch) {\r\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\r\n          }\r\n          return tokenList\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Failed to get list at url ${listUrl}`, error)\r\n          if (sendDispatch) {\r\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\r\n          }\r\n          throw error\r\n        })\r\n    },\r\n    [dispatch, ensResolver],\r\n  )\r\n}\r\n\r\nexport default useFetchListCallback\r\n","import React, { createContext, useCallback, useState } from 'react'\r\nimport { kebabCase } from 'lodash'\r\nimport { Toast, toastTypes } from 'components/Toast'\r\nimport { ToastContextApi } from './types'\r\n\r\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\r\n\r\nexport const ToastsProvider: React.FC = ({ children }) => {\r\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\r\n\r\n  const toast = useCallback(\r\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\r\n      setToasts((prevToasts) => {\r\n        const id = kebabCase(title)\r\n\r\n        // Remove any existing toasts with the same id\r\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\r\n\r\n        return [\r\n          {\r\n            id,\r\n            title,\r\n            description,\r\n            type,\r\n          },\r\n          ...currentToasts,\r\n        ]\r\n      })\r\n    },\r\n    [setToasts],\r\n  )\r\n\r\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.DANGER })\r\n  }\r\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.INFO })\r\n  }\r\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.SUCCESS })\r\n  }\r\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.WARNING })\r\n  }\r\n  const clear = () => setToasts([])\r\n  const remove = (id: string) => {\r\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\r\n  }\r\n\r\n  return (\r\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\r\n      {children}\r\n    </ToastsContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ToastContainer } from 'components/Toast'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst ToastListener = () => {\r\n  const { toasts, remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { escapeRegExp } from '../../utils'\r\n\r\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: 16px;\r\n  text-align: ${({ align }) => align && align};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\r\n\r\nexport const Input = React.memo(function InnerInput({\r\n  value,\r\n  onUserInput,\r\n  placeholder,\r\n  ...rest\r\n}: {\r\n  value: string | number\r\n  onUserInput: (input: string) => void\r\n  error?: boolean\r\n  fontSize?: string\r\n  align?: 'right' | 'left'\r\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\r\n  const enforcer = (nextUserInput: string) => {\r\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n      onUserInput(nextUserInput)\r\n    }\r\n  }\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledInput\r\n      {...rest}\r\n      value={value}\r\n      onChange={(event) => {\r\n        // replace commas with periods, because we exclusively uses period as the decimal separator\r\n        enforcer(event.target.value.replace(/,/g, '.'))\r\n      }}\r\n      // universal input options\r\n      inputMode=\"decimal\"\r\n      title={t('Token Amount')}\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      // text-specific options\r\n      type=\"text\"\r\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n      placeholder={placeholder || '0.0'}\r\n      minLength={1}\r\n      maxLength={79}\r\n      spellCheck=\"false\"\r\n    />\r\n  )\r\n})\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { Currency, Pair } from '@pancakeswap/sdk'\r\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\r\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\r\n\r\nimport { RowBetween } from '../Layout/Row'\r\nimport { Input as NumericalInput } from './NumericalInput'\r\n\r\nconst InputRow = styled.div<{ selected: boolean }>`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\r\n`\r\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\r\n  padding: 0 0.5rem;\r\n`\r\nconst LabelRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem 0 1rem;\r\n`\r\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  z-index: 1;\r\n`\r\nconst Container = styled.div<{ hideInput: boolean }>`\r\n  border-radius: 16px;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n`\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  label?: string\r\n  onCurrencySelect: (currency: Currency) => void\r\n  currency?: Currency | null\r\n  disableCurrencySelect?: boolean\r\n  hideBalance?: boolean\r\n  pair?: Pair | null\r\n  hideInput?: boolean\r\n  otherCurrency?: Currency | null\r\n  id: string\r\n  showCommonBases?: boolean\r\n}\r\nexport default function CurrencyInputPanel({\r\n  value,\r\n  onUserInput,\r\n  onMax,\r\n  showMaxButton,\r\n  label,\r\n  onCurrencySelect,\r\n  currency,\r\n  disableCurrencySelect = false,\r\n  hideBalance = false,\r\n  pair = null, // used for double token logo\r\n  hideInput = false,\r\n  otherCurrency,\r\n  id,\r\n  showCommonBases,\r\n}: CurrencyInputPanelProps) {\r\n  const { account } = useActiveWeb3React()\r\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n  const { t } = useTranslation()\r\n  const translatedLabel = label || t('Input')\r\n\r\n  const [onPresentCurrencyModal] = useModal(\r\n    <CurrencySearchModal\r\n      onCurrencySelect={onCurrencySelect}\r\n      selectedCurrency={currency}\r\n      otherSelectedCurrency={otherCurrency}\r\n      showCommonBases={showCommonBases}\r\n    />,\r\n  )\r\n  return (\r\n    <InputPanel id={id}>\r\n      <Container hideInput={hideInput}>\r\n        {!hideInput && (\r\n          <LabelRow>\r\n            <RowBetween>\r\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\r\n              {account && (\r\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\r\n                  {!hideBalance && !!currency\r\n                    ? t('Balance: %balance%', { balance: selectedCurrencyBalance?.toSignificant(6) ?? t('Loading') })\r\n                    : ' -'}\r\n                </Text>\r\n              )}\r\n            </RowBetween>\r\n          </LabelRow>\r\n        )}\r\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\r\n          {!hideInput && (\r\n            <>\r\n              <NumericalInput\r\n                className=\"token-amount-input\"\r\n                value={value}\r\n                onUserInput={(val) => {\r\n                  onUserInput(val)\r\n                }}\r\n              />\r\n              {account && currency && showMaxButton && label !== 'To' && (\r\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\r\n                  MAX\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n          <CurrencySelectButton\r\n            selected={!!currency}\r\n            className=\"open-currency-select-button\"\r\n            onClick={() => {\r\n              if (!disableCurrencySelect) {\r\n                onPresentCurrencyModal()\r\n              }\r\n            }}\r\n          >\r\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n              {pair ? (\r\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\r\n              ) : currency ? (\r\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\r\n              ) : null}\r\n              {pair ? (\r\n                <Text id=\"pair\">\r\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\r\n                </Text>\r\n              ) : (\r\n                <Text id=\"pair\">\r\n                  {(currency && currency.symbol && currency.symbol.length > 20\r\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\r\n                        currency.symbol.length - 5,\r\n                        currency.symbol.length,\r\n                      )}`\r\n                    : currency?.symbol) || t('Select a currency')}\r\n                </Text>\r\n              )}\r\n              {!disableCurrencySelect && <ChevronDownIcon />}\r\n            </Flex>\r\n          </CurrencySelectButton>\r\n        </InputRow>\r\n      </Container>\r\n    </InputPanel>\r\n  )\r\n}\r\n","import { Campaign } from './types'\r\n\r\n/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\r\n\r\nconst campaigns: Campaign[] = [\r\n  {\r\n    id: '511110000',\r\n    type: 'ifo',\r\n    title: 'Kalmar',\r\n    badge: 'ifo-kalm.svg',\r\n  },\r\n  {\r\n    id: '511100000',\r\n    type: 'ifo',\r\n    title: 'Hotcross',\r\n    badge: 'ifo-hotcross.svg',\r\n  },\r\n  {\r\n    id: '511090000',\r\n    type: 'ifo',\r\n    title: 'Horizon Protocol',\r\n    badge: 'ifo-hzn.svg',\r\n  },\r\n  {\r\n    id: '511080000',\r\n    type: 'ifo',\r\n    title: 'Belt',\r\n    badge: 'ifo-belt.svg',\r\n  },\r\n  {\r\n    id: '511070000',\r\n    type: 'ifo',\r\n    title: 'Yieldwatch',\r\n    badge: 'ifo-watch.svg',\r\n  },\r\n  {\r\n    id: '511060000',\r\n    type: 'ifo',\r\n    title: 'Berry',\r\n    badge: 'ifo-bry.svg',\r\n  },\r\n  {\r\n    id: '511050000',\r\n    type: 'ifo',\r\n    title: 'Soteria',\r\n    badge: 'ifo-wsote.svg',\r\n  },\r\n  {\r\n    id: '511040000',\r\n    type: 'ifo',\r\n    title: 'Helmet',\r\n    badge: 'ifo-helmet.svg',\r\n  },\r\n  {\r\n    id: '511030000',\r\n    type: 'ifo',\r\n    title: 'Tenet',\r\n    badge: 'ifo-ten.svg',\r\n  },\r\n  {\r\n    id: '511020000',\r\n    type: 'ifo',\r\n    title: 'Ditto',\r\n    badge: 'ifo-ditto.svg',\r\n  },\r\n  {\r\n    id: '511010000',\r\n    type: 'ifo',\r\n    title: 'Blink',\r\n    badge: 'ifo-blk.svg',\r\n  },\r\n  {\r\n    id: '512010001',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Gold',\r\n    badge: 'easter-champion-gold.svg',\r\n  },\r\n  {\r\n    id: '512010002',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010003',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010004',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010005',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Gold',\r\n    badge: 'easter-participant-gold.svg',\r\n  },\r\n  {\r\n    id: '512010006',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Silver',\r\n    badge: 'easter-champion-silver.svg',\r\n  },\r\n  {\r\n    id: '512010007',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010008',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010009',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010010',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Silver',\r\n    badge: 'easter-participant-silver.svg',\r\n  },\r\n  {\r\n    id: '512010011',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Bronze',\r\n    badge: 'easter-champion-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010012',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010013',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010014',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010015',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Bronze',\r\n    badge: 'easter-participant-bronze.svg',\r\n  },\r\n  {\r\n    id: '513010001',\r\n    type: 'participation',\r\n    title: 'Syrup Soaker',\r\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\r\n    badge: 'syrup-soaker.svg',\r\n  },\r\n  {\r\n    id: '514010001',\r\n    type: 'participation',\r\n    title: 'Clairvoyant',\r\n    description: 'Played a round of Prediction before round 12,120',\r\n    badge: 'clairvoyant.svg',\r\n  },\r\n  {\r\n    id: '515010001',\r\n    type: 'participation',\r\n    title: 'Lottie',\r\n    description: 'Joined a round in the early days of Lottery V2',\r\n    badge: 'lottie.svg',\r\n  },\r\n  {\r\n    id: '515020001',\r\n    type: 'participation',\r\n    title: 'Lucky',\r\n    description: 'Won a round in the early days of Lottery V2',\r\n    badge: 'lucky.svg',\r\n  },\r\n  {\r\n    id: '515030001',\r\n    type: 'participation',\r\n    title: 'Baller',\r\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\r\n    badge: 'baller.svg',\r\n  },\r\n]\r\n\r\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\r\nexport const campaignMap = new Map<string, Campaign>()\r\n\r\ncampaigns.forEach((campaign) => {\r\n  campaignMap.set(campaign.id, campaign)\r\n})\r\n\r\nexport default campaigns\r\n","import { useMemo } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { isAddress } from '../../utils'\r\n\r\nexport function filterTokens(tokens: Token[], search: string): Token[] {\r\n  if (search.length === 0) return tokens\r\n\r\n  const searchingAddress = isAddress(search)\r\n\r\n  if (searchingAddress) {\r\n    return tokens.filter((token) => token.address === searchingAddress)\r\n  }\r\n\r\n  const lowerSearchParts = search\r\n    .toLowerCase()\r\n    .split(/\\s+/)\r\n    .filter((s) => s.length > 0)\r\n\r\n  if (lowerSearchParts.length === 0) {\r\n    return tokens\r\n  }\r\n\r\n  const matchesSearch = (s: string): boolean => {\r\n    const sParts = s\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s_) => s_.length > 0)\r\n\r\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\r\n  }\r\n\r\n  return tokens.filter((token) => {\r\n    const { symbol, name } = token\r\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\r\n  })\r\n}\r\n\r\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\r\n  return useMemo(() => {\r\n    if (!tokens) {\r\n      return []\r\n    }\r\n\r\n    const symbolMatch = searchQuery\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s) => s.length > 0)\r\n\r\n    if (symbolMatch.length > 1) {\r\n      return tokens\r\n    }\r\n\r\n    const exactMatches: Token[] = []\r\n    const symbolSubtrings: Token[] = []\r\n    const rest: Token[] = []\r\n\r\n    // sort tokens by exact match -> subtring on symbol match -> rest\r\n    tokens.map((token) => {\r\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\r\n        return exactMatches.push(token)\r\n      }\r\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\r\n        return symbolSubtrings.push(token)\r\n      }\r\n      return rest.push(token)\r\n    })\r\n\r\n    return [...exactMatches, ...symbolSubtrings, ...rest]\r\n  }, [tokens, searchQuery])\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n\r\nexport default Dots\r\n","import nfts from 'config/constants/nfts'\r\nimport { IPFS_GATEWAY } from 'config'\r\nimport collections from 'config/constants/nfts/collections'\r\nimport { Nft, CollectionKey } from 'config/constants/nfts/types'\r\nimport { getAddress } from './addressHelpers'\r\nimport { getErc721Contract } from './contractHelpers'\r\n\r\n/**\r\n * Some sources like Pancake do not return HTTP tokenURI's\r\n */\r\nexport const getTokenUrl = (tokenUri: string) => {\r\n  if (tokenUri.startsWith('ipfs://')) {\r\n    return `${IPFS_GATEWAY}/${tokenUri.slice(6)}`\r\n  }\r\n\r\n  return tokenUri\r\n}\r\n\r\nexport const getBunnyNftAddress = (collectionKey: CollectionKey = CollectionKey.PANCAKE) => {\r\n  return getAddress(collections[collectionKey].address)\r\n}\r\n\r\nexport const fetchCachedUriData = async (tokenUrl: string) => {\r\n  try {\r\n    const localUriData = localStorage.getItem(tokenUrl)\r\n\r\n    if (localUriData) {\r\n      const data = JSON.parse(localUriData)\r\n      return data\r\n    }\r\n\r\n    const uriDataResponse = await fetch(tokenUrl)\r\n\r\n    if (!uriDataResponse.ok) {\r\n      throw new Error('Unable to fetch uriData')\r\n    }\r\n\r\n    const uriData = await uriDataResponse.json()\r\n    localStorage.setItem(tokenUrl, JSON.stringify(uriData))\r\n    return uriData\r\n  } catch (error) {\r\n    console.error(error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\r\n  try {\r\n    const contract = getErc721Contract(nftAddress)\r\n    const tokenUri = await contract.tokenURI(tokenId)\r\n    const uriData = await fetchCachedUriData(getTokenUrl(tokenUri))\r\n\r\n    if (!uriData) {\r\n      return null\r\n    }\r\n\r\n    return uriData\r\n  } catch (error) {\r\n    console.error('getTokenUriData', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\r\n  const uriData = await getTokenUriData(nftAddress, tokenId)\r\n\r\n  // Bail out early if we have no uriData, identifierKey, or the value does not\r\n  // exist in the object\r\n  if (!uriData) {\r\n    return null\r\n  }\r\n\r\n  return nfts.pancake.find((nft) => {\r\n    return uriData.image.includes(nft.identifier)\r\n  })\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useTokenContract } from './useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\r\n}\r\n\r\nexport default useTotalSupply\r\n","import merge from 'lodash/merge'\r\nimport teamsList from 'config/constants/teams'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Team } from 'config/constants/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { TeamsById } from 'state/types'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\n\r\nconst profileContract = getProfileContract()\r\n\r\nexport const getTeam = async (teamId: number): Promise<Team> => {\r\n  try {\r\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\r\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\r\n\r\n    return merge({}, staticTeamInfo, {\r\n      isJoinable,\r\n      name: teamName,\r\n      users: numberUsers.toNumber(),\r\n      points: numberPoints.toNumber(),\r\n    })\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\r\nexport const getTeams = async (): Promise<TeamsById> => {\r\n  try {\r\n    const teamsById = teamsList.reduce((accum, team) => {\r\n      return {\r\n        ...accum,\r\n        [team.id]: team,\r\n      }\r\n    }, {})\r\n    const nbTeams = await profileContract.numberTeams()\r\n\r\n    const calls = []\r\n    for (let i = 1; i <= nbTeams; i++) {\r\n      calls.push({\r\n        address: getPancakeProfileAddress(),\r\n        name: 'getTeamProfile',\r\n        params: [i],\r\n      })\r\n    }\r\n    const teamData = await multicallv2(profileABI, calls)\r\n\r\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\r\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\r\n\r\n      return {\r\n        ...accum,\r\n        [index + 1]: {\r\n          name: teamName,\r\n          users: numberUsers.toNumber(),\r\n          points: numberPoints.toNumber(),\r\n          isJoinable,\r\n        },\r\n      }\r\n    }, {})\r\n\r\n    return merge({}, teamsById, onChainTeamData)\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n","import { IPFS_GATEWAY } from '../index'\r\nimport { Team } from './types'\r\n\r\nconst teams: Team[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Syrup Storm',\r\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\r\n    images: {\r\n      lg: 'syrup-storm-lg.png',\r\n      md: 'syrup-storm-md.png',\r\n      sm: 'syrup-storm-sm.png',\r\n      alt: 'syrup-storm-alt.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\r\n    },\r\n    background: 'syrup-storm-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Fearsome Flippers',\r\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\r\n    images: {\r\n      lg: 'fearsome-flippers-lg.png',\r\n      md: 'fearsome-flippers-md.png',\r\n      sm: 'fearsome-flippers-sm.png',\r\n      alt: 'fearsome-flippers-alt.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\r\n    },\r\n    background: 'fearsome-flippers-bg.svg',\r\n    textColor: '#FFFFFF',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Chaotic Cakers',\r\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\r\n    images: {\r\n      lg: 'chaotic-cakers-lg.png',\r\n      md: 'chaotic-cakers-md.png',\r\n      sm: 'chaotic-cakers-sm.png',\r\n      alt: 'chaotic-cakers-alt.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\r\n    },\r\n    background: 'chaotic-cakers-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n]\r\n\r\nexport default teams\r\n","import { useMemo } from 'react'\r\nimport { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { AppState } from '../../index'\r\nimport { deserializeToken } from './helpers'\r\n\r\nexport default function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return []\r\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\r\n  }, [serializedTokensMap, chainId])\r\n}\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\n\r\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\r\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n// eslint-disable-next-line\r\nimport { LinkExternal, Flex, Svg, Image, Button } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    justify-content: space-between;\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst BubbleWrapper = styled(Flex)`\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.textSubtle};\r\n    transition: background-color 0.2s, opacity 0.2s;\r\n  }\r\n  &:hover {\r\n    svg {\r\n      opacity: 0.65;\r\n    }\r\n  }\r\n  &:active {\r\n    svg {\r\n      opacity: 0.85;\r\n    }\r\n  }\r\n`\r\n\r\nconst Footer = () => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\r\n        <LinkExternal\r\n          href=\"https://t.me/Deadtokenexchange\"\r\n          ml={[0, 0, '40px']}\r\n          mt={['20px', '20px', 0]}\r\n          mb={['8px', '8px', 0]}\r\n        >\r\n          {t('Join Our Telegram')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\r\n        <LinkExternal\r\n          href=\"https://twitter.com/DeadTokenSwap\"\r\n          ml={[0, 0, '40px']}\r\n          mt={['20px', '20px', 0]}\r\n          mb={['8px', '8px', 0]}\r\n        >\r\n          {t('Follow Us on Twitter')}\r\n        </LinkExternal>\r\n      </Flex>\r\n\r\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\r\n        <LinkExternal\r\n          href=\"#\"\r\n          ml={[0, 0, '40px']}\r\n          mt={['20px', '20px', 0]}\r\n          mb={['8px', '8px', 0]}\r\n        >\r\n          {t('Join Our Discord')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\r\n        <LinkExternal\r\n          href=\"https://www.reddit.com/r/deadtokenexchange/\"\r\n          ml={[0, 0, '40px']}\r\n          mt={['20px', '20px', 0]}\r\n          mb={['8px', '8px', 0]}\r\n        >\r\n          {t('Join Our Reddit')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      <Flex\r\n        flexGrow={1}\r\n        alignItems=\"center\"\r\n        width={['100%', '100%', '100%', 'auto']}\r\n        justifyContent={['center', 'center', 'center', 'flex-end']}\r\n      >\r\n        <BubbleWrapper>\r\n          <Button\r\n            id=\"clickExchangeHelp\"\r\n            as=\"a\"\r\n            external\r\n            href=\"#\"\r\n            variant=\"subtle\"\r\n          >\r\n            {t('Need help ?')}\r\n          </Button>\r\n         \r\n        </BubbleWrapper>\r\n      </Flex>\r\n    \r\n    </Wrapper>\r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledNav = styled.nav`\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst getActiveIndex = (pathname: string): number => {\r\n  if (\r\n    pathname.includes('/pool') ||\r\n    pathname.includes('/create') ||\r\n    pathname.includes('/add') ||\r\n    pathname.includes('/remove') ||\r\n    pathname.includes('/find') ||\r\n    pathname.includes('/liquidity')\r\n  ) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nconst Nav = () => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledNav>\r\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\r\n          {t('Swap')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\r\n          {t('Liquidity')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex } from '@pancakeswap/uikit'\r\nimport Footer from 'components/Menu/Footer'\r\nimport SubNav from 'components/Menu/SubNav'\r\nimport { PageMeta } from 'components/Layout/Page'\r\n\r\nconst StyledPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 16px;\r\n  padding-bottom: 0;\r\n  min-height: calc(100vh - 64px);\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    background-size: auto;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 24px;\r\n    padding-bottom: 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    min-height: calc(100vh - 64px);\r\n  }\r\n`\r\n\r\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledPage {...props}>\r\n        <SubNav />\r\n        {children}\r\n        <Flex flexGrow={1} />\r\n        <Footer />\r\n      </StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import { Token, ChainId } from '@pancakeswap/sdk'\r\nimport tokens from './tokens'\r\nimport farms from './farms'\r\nimport { Ifo } from './types'\r\n\r\nconst cakeBnbLpToken = new Token(ChainId.MAINNET, farms[1].lpAddresses[ChainId.MAINNET], 18, farms[1].lpSymbol)\r\n\r\nconst ifos: Ifo[] = [\r\n  {\r\n    id: 'kalmar',\r\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\r\n    isActive: true,\r\n    name: 'Kalmar (KALM)',\r\n    poolBasic: {\r\n      saleAmount: '375,000 KALM',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '875,000 KALM',\r\n      raiseAmount: '$2,500,000',\r\n      cakeToBurn: '$1,250,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.kalm,\r\n    releaseBlockNumber: 7707736,\r\n    campaignId: '511110000',\r\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\r\n    tokenOfferingPrice: 2.0,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'hotcross',\r\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\r\n    isActive: false,\r\n    name: 'Hot Cross (HOTCROSS)',\r\n    poolBasic: {\r\n      saleAmount: '15,000,000 HOTCROSS',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '35,000,000 HOTCROSS',\r\n      raiseAmount: '$1,750,000',\r\n      cakeToBurn: '$875,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.hotcross,\r\n    releaseBlockNumber: 7477900,\r\n    campaignId: '511100000',\r\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\r\n    tokenOfferingPrice: 0.05,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'horizon',\r\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\r\n    isActive: false,\r\n    name: 'Horizon Protocol (HZN)',\r\n    poolBasic: {\r\n      saleAmount: '3,000,000 HZN',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '7,000,000 HZN',\r\n      raiseAmount: '$1,750,000',\r\n      cakeToBurn: '$875,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.hzn,\r\n    releaseBlockNumber: 6581111,\r\n    campaignId: '511090000',\r\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\r\n    tokenOfferingPrice: 0.25,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'belt',\r\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\r\n    isActive: false,\r\n    name: 'Belt (BELT)',\r\n    poolUnlimited: {\r\n      saleAmount: '150,000 BELT',\r\n      raiseAmount: '$3,000,000',\r\n      cakeToBurn: '$1,500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.belt,\r\n    releaseBlockNumber: 5493919,\r\n    campaignId: '511080000',\r\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'watch',\r\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\r\n    isActive: false,\r\n    name: 'Yieldwatch (WATCH)',\r\n    poolUnlimited: {\r\n      saleAmount: '8,000,000 WATCH',\r\n      raiseAmount: '$800,000',\r\n      cakeToBurn: '$400,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.watch,\r\n    releaseBlockNumber: 5294924,\r\n    campaignId: '511070000',\r\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'berry',\r\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\r\n    isActive: false,\r\n    name: 'Berry (BRY)',\r\n    poolUnlimited: {\r\n      saleAmount: '2,000,000 BRY',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.bry,\r\n    releaseBlockNumber: 4750968,\r\n    campaignId: '511060000',\r\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'soteria',\r\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n    isActive: false,\r\n    name: 'Soteria (wSOTE)',\r\n    poolUnlimited: {\r\n      saleAmount: '1,500,000 wSOTE',\r\n      raiseAmount: '$525,000',\r\n      cakeToBurn: '$262,500',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.wsote,\r\n    releaseBlockNumber: 4086064,\r\n    campaignId: '511050000',\r\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'helmet',\r\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\r\n    isActive: false,\r\n    name: 'Helmet.insure (Helmet)',\r\n    poolUnlimited: {\r\n      saleAmount: '10,000,000 Helmet',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.helmet,\r\n    releaseBlockNumber: 3771926,\r\n    campaignId: '511040000',\r\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'tenet',\r\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\r\n    isActive: false,\r\n    name: 'Tenet (TEN)',\r\n    poolUnlimited: {\r\n      saleAmount: '1,000,000 TEN',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.ten,\r\n    releaseBlockNumber: 3483883,\r\n    campaignId: '511030000',\r\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'ditto',\r\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\r\n    isActive: false,\r\n    name: 'Ditto (DITTO)',\r\n    poolUnlimited: {\r\n      saleAmount: '700,000 DITTO',\r\n      raiseAmount: '$630,000',\r\n      cakeToBurn: '$315,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.ditto,\r\n    releaseBlockNumber: 3279767,\r\n    campaignId: '511020000',\r\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'blink',\r\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\r\n    isActive: false,\r\n    name: 'BLINk (BLK)',\r\n    poolUnlimited: {\r\n      saleAmount: '100,000,000 BLINK',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.blink,\r\n    releaseBlockNumber: 3279767,\r\n    campaignId: '511010000',\r\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n]\r\n\r\nexport default ifos\r\n","import { useCallback, useState } from 'react'\r\nimport usePreviousValue from './usePreviousValue'\r\n\r\n/**\r\n * A helper hook to keep track of the time between events\r\n * Can also be used to force an effect to re-run\r\n */\r\nconst useLastUpdated = () => {\r\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\r\n  const previousLastUpdated = usePreviousValue(lastUpdated)\r\n\r\n  const setLastUpdated = useCallback(() => {\r\n    setStateLastUpdated(Date.now())\r\n  }, [setStateLastUpdated])\r\n\r\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\r\n}\r\n\r\nexport default useLastUpdated\r\n","import { BigNumber } from 'ethers'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState } from '../state'\r\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\r\n\r\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\r\nexport default function useTransactionDeadline(): BigNumber | undefined {\r\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\r\n  const blockTimestamp = useCurrentBlockTimestamp()\r\n  return useMemo(() => {\r\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\r\n    return undefined\r\n  }, [blockTimestamp, ttl])\r\n}\r\n","import { BigNumber } from 'ethers'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport { useMulticallContract } from './useContract'\r\n\r\n// gets the current timestamp from the blockchain\r\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\r\n  const multicall = useMulticallContract()\r\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { SerializedFarm, DeserializedPool, SerializedPool } from 'state/types'\r\nimport { deserializeToken } from 'state/user/hooks/helpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\ntype UserData =\r\n  | DeserializedPool['userData']\r\n  | {\r\n      allowance: number | string\r\n      stakingTokenBalance: number | string\r\n      stakedBalance: number | string\r\n      pendingReward: number | string\r\n    }\r\n\r\nexport const transformUserData = (userData: UserData) => {\r\n  return {\r\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\r\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\r\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\r\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nexport const transformPool = (pool: SerializedPool): DeserializedPool => {\r\n  const { totalStaked, stakingLimit, userData, stakingToken, earningToken, ...rest } = pool\r\n\r\n  return {\r\n    ...rest,\r\n    stakingToken: deserializeToken(stakingToken),\r\n    earningToken: deserializeToken(earningToken),\r\n    userData: transformUserData(userData),\r\n    totalStaked: new BigNumber(totalStaked),\r\n    stakingLimit: new BigNumber(stakingLimit),\r\n  }\r\n}\r\n\r\nexport const getTokenPricesFromFarm = (farms: SerializedFarm[]) => {\r\n  return farms.reduce((prices, farm) => {\r\n    const quoteTokenAddress = farm.quoteToken.address.toLocaleLowerCase()\r\n    const tokenAddress = farm.token.address.toLocaleLowerCase()\r\n    /* eslint-disable no-param-reassign */\r\n    if (!prices[quoteTokenAddress]) {\r\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceBusd).toNumber()\r\n    }\r\n    if (!prices[tokenAddress]) {\r\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceBusd).toNumber()\r\n    }\r\n    /* eslint-enable no-param-reassign */\r\n    return prices\r\n  }, {})\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\r\n\r\nfunction isWindowVisible() {\r\n  if (!VISIBILITY_STATE_SUPPORTED) {\r\n    return true\r\n  }\r\n\r\n  return document.visibilityState === 'visible'\r\n}\r\n\r\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\r\nexport default function useIsWindowVisible() {\r\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\r\n\r\n  useEffect(() => {\r\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\r\n\r\n    const handleVisibilityChange = () => {\r\n      setIsVisible(isWindowVisible())\r\n    }\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange)\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\r\n    }\r\n  }, [setIsVisible])\r\n\r\n  return isVisible\r\n}\r\n","import { Interface } from '@ethersproject/abi'\r\nimport ERC20_ABI from './erc20.json'\r\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\r\n\r\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\r\n\r\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\r\n\r\nexport default ERC20_INTERFACE\r\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\r\n","import CID from 'cids'\r\nimport { getCodec, rmPrefix } from 'multicodec'\r\nimport { decode, toB58String } from 'multihashes'\r\n\r\nfunction hexToUint8Array(hex: string): Uint8Array {\r\n  // eslint-disable-next-line no-param-reassign\r\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\r\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\r\n  const arr = new Uint8Array(hex.length / 2)\r\n  for (let i = 0; i < arr.length; i++) {\r\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst UTF_8_DECODER = new TextDecoder()\r\n\r\n/**\r\n * Returns the URI representation of the content hash for supported codecs\r\n * @param contenthash to decode\r\n */\r\nexport default function contenthashToUri(contenthash: string): string {\r\n  const buff = hexToUint8Array(contenthash)\r\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\r\n  switch (codec) {\r\n    case 'ipfs-ns': {\r\n      const data = rmPrefix(buff as Buffer)\r\n      const cid = new CID(data)\r\n      return `ipfs://${toB58String(cid.multihash)}`\r\n    }\r\n    case 'ipns-ns': {\r\n      const data = rmPrefix(buff as Buffer)\r\n      const cid = new CID(data)\r\n      const multihash = decode(cid.multihash)\r\n      if (multihash.name === 'identity') {\r\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\r\n      }\r\n      return `ipns://${toB58String(cid.multihash)}`\r\n    }\r\n    default:\r\n      throw new Error(`Unrecognized codec: ${codec}`)\r\n  }\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// Check if the tab is active in the user browser\r\nconst useIsBrowserTabActive = () => {\r\n  const isBrowserTabActiveRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    const onVisibilityChange = () => {\r\n      isBrowserTabActiveRef.current = !document.hidden\r\n    }\r\n\r\n    window.addEventListener('visibilitychange', onVisibilityChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('visibilitychange', onVisibilityChange)\r\n    }\r\n  }, [])\r\n\r\n  return isBrowserTabActiveRef\r\n}\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setFast((prev) => prev + 1)\r\n      }\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setSlow((prev) => prev + 1)\r\n      }\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import { useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\r\nconst usePreviousValue = (value: any) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n\r\nexport default usePreviousValue\r\n","import React from 'react'\r\nimport { Currency, Token } from '@pancakeswap/sdk'\r\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { AutoRow } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { useUnsupportedTokens } from '../hooks/Tokens'\r\n\r\ninterface Props extends InjectedModalProps {\r\n  currencies: (Currency | undefined)[]\r\n}\r\n\r\nconst DetailsFooter = styled.div`\r\n  padding: 8px 0;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  text-align: center;\r\n`\r\n\r\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens =\r\n    chainId && currencies\r\n      ? currencies.map((currency) => {\r\n          return wrappedCurrency(currency, chainId)\r\n        })\r\n      : []\r\n\r\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\r\n\r\n  return (\r\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\r\n      <AutoColumn gap=\"lg\">\r\n        {tokens.map((token) => {\r\n          return (\r\n            token &&\r\n            unsupportedTokens &&\r\n            Object.keys(unsupportedTokens).includes(token.address) && (\r\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\r\n                <AutoRow gap=\"5px\" align=\"center\">\r\n                  <CurrencyLogo currency={token} size=\"24px\" />\r\n                  <Text>{token.symbol}</Text>\r\n                </AutoRow>\r\n                {chainId && (\r\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\r\n                    {token.address}\r\n                  </Link>\r\n                )}\r\n              </AutoColumn>\r\n            )\r\n          )\r\n        })}\r\n        <AutoColumn gap=\"lg\">\r\n          <Text>\r\n            Some assets are not available through this interface because they may not work well with our smart contract\r\n            or we are unable to allow trading for legal reasons.\r\n          </Text>\r\n        </AutoColumn>\r\n      </AutoColumn>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\r\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\r\n\r\n  return (\r\n    <DetailsFooter>\r\n      <Button variant=\"text\" onClick={onPresentModal}>\r\n        Read more about unsupported assets\r\n      </Button>\r\n    </DetailsFooter>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { HelpIcon } from '@pancakeswap/uikit'\r\n\r\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\r\n\r\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\r\n  srcs: string[]\r\n}\r\n\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\r\n  const [, refresh] = useState<number>(0)\r\n\r\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\r\n\r\n  if (src) {\r\n    return (\r\n      <img\r\n        {...rest}\r\n        alt={alt}\r\n        src={src}\r\n        onError={() => {\r\n          if (src) BAD_SRCS[src] = true\r\n          refresh((i) => i + 1)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <HelpIcon {...rest} />\r\n}\r\n\r\nexport default Logo\r\n","import React, { useState } from 'react'\r\nimport { Token, Currency } from '@pancakeswap/sdk'\r\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { useAddUserToken } from 'state/user/hooks'\r\nimport { getBscScanLink } from 'utils'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport { ListLogo } from 'components/Logo'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ImportProps {\r\n  tokens: Token[]\r\n  handleCurrencySelect?: (currency: Currency) => void\r\n}\r\n\r\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [confirmed, setConfirmed] = useState(false)\r\n\r\n  const addToken = useAddUserToken()\r\n\r\n  // use for showing import source on inactive tokens\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n\r\n  return (\r\n    <AutoColumn gap=\"lg\">\r\n      <Message variant=\"warning\">\r\n        <Text>\r\n          {t(\r\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\r\n          )}\r\n          <br />\r\n          <br />\r\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\r\n        </Text>\r\n      </Message>\r\n\r\n      {tokens.map((token) => {\r\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n        const address = token.address ? `${truncateHash(token.address)}` : null\r\n        return (\r\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\r\n            {list !== undefined ? (\r\n              <Tag\r\n                variant=\"success\"\r\n                outline\r\n                scale=\"sm\"\r\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\r\n              >\r\n                {t('via')} {list.name}\r\n              </Tag>\r\n            ) : (\r\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\r\n                {t('Unknown Source')}\r\n              </Tag>\r\n            )}\r\n            <Flex alignItems=\"center\">\r\n              <Text mr=\"8px\">{token.name}</Text>\r\n              <Text>({token.symbol})</Text>\r\n            </Flex>\r\n            {chainId && (\r\n              <Flex justifyContent=\"space-between\" width=\"100%\">\r\n                <Text mr=\"4px\">{address}</Text>\r\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\r\n                  ({t('View on BscScan')})\r\n                </Link>\r\n              </Flex>\r\n            )}\r\n          </Grid>\r\n        )\r\n      })}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\r\n          <Checkbox\r\n            scale=\"sm\"\r\n            name=\"confirmed\"\r\n            type=\"checkbox\"\r\n            checked={confirmed}\r\n            onChange={() => setConfirmed(!confirmed)}\r\n          />\r\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\r\n            {t('I understand')}\r\n          </Text>\r\n        </Flex>\r\n        <Button\r\n          variant=\"danger\"\r\n          disabled={!confirmed}\r\n          onClick={() => {\r\n            tokens.map((token) => addToken(token))\r\n            if (handleCurrencySelect) {\r\n              handleCurrencySelect(tokens[0])\r\n            }\r\n          }}\r\n          className=\".token-dismiss-button\"\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      </Flex>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default ImportToken\r\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\r\nimport { MIN_BNB } from '../config/constants'\r\n\r\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\r\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\r\n  if (!currencyAmount) return undefined\r\n  if (currencyAmount.currency === ETHER) {\r\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\r\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\r\n    }\r\n    return CurrencyAmount.ether(JSBI.BigInt(0))\r\n  }\r\n  return currencyAmount\r\n}\r\n\r\nexport default maxAmountSpend\r\n","import React, { useState } from 'react'\r\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\r\nimport QuestionHelper from '../../QuestionHelper'\r\n\r\nenum SlippageError {\r\n  InvalidInput = 'InvalidInput',\r\n  RiskyLow = 'RiskyLow',\r\n  RiskyHigh = 'RiskyHigh',\r\n}\r\n\r\nenum DeadlineError {\r\n  InvalidInput = 'InvalidInput',\r\n}\r\n\r\nconst SlippageTabs = () => {\r\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\r\n  const [ttl, setTtl] = useUserTransactionTTL()\r\n  const [slippageInput, setSlippageInput] = useState('')\r\n  const [deadlineInput, setDeadlineInput] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const slippageInputIsValid =\r\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\r\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\r\n\r\n  let slippageError: SlippageError | undefined\r\n  if (slippageInput !== '' && !slippageInputIsValid) {\r\n    slippageError = SlippageError.InvalidInput\r\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\r\n    slippageError = SlippageError.RiskyLow\r\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\r\n    slippageError = SlippageError.RiskyHigh\r\n  } else {\r\n    slippageError = undefined\r\n  }\r\n\r\n  let deadlineError: DeadlineError | undefined\r\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\r\n    deadlineError = DeadlineError.InvalidInput\r\n  } else {\r\n    deadlineError = undefined\r\n  }\r\n\r\n  const parseCustomSlippage = (value: string) => {\r\n    setSlippageInput(value)\r\n\r\n    try {\r\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\r\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\r\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const parseCustomDeadline = (value: string) => {\r\n    setDeadlineInput(value)\r\n\r\n    try {\r\n      const valueAsInt: number = Number.parseInt(value) * 60\r\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\r\n        setTtl(valueAsInt)\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\" mb=\"24px\">\r\n        <Flex mb=\"12px\">\r\n          <Text>{t('Slippage Tolerance')}</Text>\r\n          <QuestionHelper\r\n            text={t(\r\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\r\n            )}\r\n            placement=\"top-start\"\r\n            ml=\"4px\"\r\n          />\r\n        </Flex>\r\n        <Flex flexWrap=\"wrap\">\r\n          <Button\r\n            mt=\"4px\"\r\n            mr=\"4px\"\r\n            scale=\"sm\"\r\n            onClick={() => {\r\n              setSlippageInput('')\r\n              setUserSlippageTolerance(10)\r\n            }}\r\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\r\n          >\r\n            0.1%\r\n          </Button>\r\n          <Button\r\n            mt=\"4px\"\r\n            mr=\"4px\"\r\n            scale=\"sm\"\r\n            onClick={() => {\r\n              setSlippageInput('')\r\n              setUserSlippageTolerance(50)\r\n            }}\r\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\r\n          >\r\n            0.5%\r\n          </Button>\r\n          <Button\r\n            mr=\"4px\"\r\n            mt=\"4px\"\r\n            scale=\"sm\"\r\n            onClick={() => {\r\n              setSlippageInput('')\r\n              setUserSlippageTolerance(100)\r\n            }}\r\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\r\n          >\r\n            1.0%\r\n          </Button>\r\n          <Flex alignItems=\"center\">\r\n            <Box width=\"76px\" mt=\"4px\">\r\n              <Input\r\n                scale=\"sm\"\r\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\r\n                value={slippageInput}\r\n                onBlur={() => {\r\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\r\n                }}\r\n                onChange={(e) => parseCustomSlippage(e.target.value)}\r\n                isWarning={!slippageInputIsValid}\r\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\r\n              />\r\n            </Box>\r\n            <Text color=\"primary\" bold ml=\"2px\">\r\n              %\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n        {!!slippageError && (\r\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\r\n            {slippageError === SlippageError.InvalidInput\r\n              ? t('Enter a valid slippage percentage')\r\n              : slippageError === SlippageError.RiskyLow\r\n              ? t('Your transaction may fail')\r\n              : t('Your transaction may be frontrun')}\r\n          </Text>\r\n        )}\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n        <Flex alignItems=\"center\">\r\n          <Text>{t('Tx deadline (mins)')}</Text>\r\n          <QuestionHelper\r\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\r\n            placement=\"top-start\"\r\n            ml=\"4px\"\r\n          />\r\n        </Flex>\r\n        <Flex>\r\n          <Box width=\"52px\" mt=\"4px\">\r\n            <Input\r\n              scale=\"sm\"\r\n              color={deadlineError ? 'red' : undefined}\r\n              onBlur={() => {\r\n                parseCustomDeadline((ttl / 60).toString())\r\n              }}\r\n              placeholder={(ttl / 60).toString()}\r\n              value={deadlineInput}\r\n              onChange={(e) => parseCustomDeadline(e.target.value)}\r\n            />\r\n          </Box>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default SlippageTabs\r\n","import React, { useState } from 'react'\r\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ExpertModalProps extends InjectedModalProps {\r\n  setShowConfirmExpertModal: (boolean) => void\r\n  setShowExpertModeAcknowledgement: (boolean) => void\r\n}\r\n\r\nconst ExpertModal: React.FC<ExpertModalProps> = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\r\n  const [, toggleExpertMode] = useExpertModeManager()\r\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Modal\r\n      title={t('Expert Mode')}\r\n      onBack={() => setShowConfirmExpertModal(false)}\r\n      onDismiss={() => setShowConfirmExpertModal(false)}\r\n      headerBackground=\"gradients.cardHeader\"\r\n      style={{ maxWidth: '360px' }}\r\n    >\r\n      <Message variant=\"warning\" mb=\"24px\">\r\n        <Text>\r\n          {t(\r\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\r\n          )}\r\n        </Text>\r\n      </Message>\r\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\r\n      <Flex alignItems=\"center\" mb=\"24px\">\r\n        <Checkbox\r\n          name=\"confirmed\"\r\n          type=\"checkbox\"\r\n          checked={isRememberChecked}\r\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\r\n          scale=\"sm\"\r\n        />\r\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\r\n          {t('Don’t show this again')}\r\n        </Text>\r\n      </Flex>\r\n      <Button\r\n        mb=\"8px\"\r\n        id=\"confirm-expert-mode\"\r\n        onClick={() => {\r\n          // eslint-disable-next-line no-alert\r\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\r\n            toggleExpertMode()\r\n            setShowConfirmExpertModal(false)\r\n            if (isRememberChecked) {\r\n              setShowExpertModeAcknowledgement(false)\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {t('Turn On Expert Mode')}\r\n      </Button>\r\n      <Button\r\n        variant=\"secondary\"\r\n        onClick={() => {\r\n          setShowConfirmExpertModal(false)\r\n        }}\r\n      >\r\n        {t('Cancel')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ExpertModal\r\n","import React from 'react'\r\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\r\nimport { useGasPriceManager } from 'state/user/hooks'\r\n\r\nconst GasSettings = () => {\r\n  const { t } = useTranslation()\r\n  const [gasPrice, setGasPrice] = useGasPriceManager()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex mb=\"12px\" alignItems=\"center\">\r\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\r\n        <QuestionHelper\r\n          text={t(\r\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\r\n          )}\r\n          placement=\"top-start\"\r\n          ml=\"4px\"\r\n        />\r\n      </Flex>\r\n      <Flex flexWrap=\"wrap\">\r\n        <Button\r\n          mt=\"4px\"\r\n          mr=\"4px\"\r\n          scale=\"sm\"\r\n          onClick={() => {\r\n            setGasPrice(GAS_PRICE_GWEI.default)\r\n          }}\r\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\r\n        >\r\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\r\n        </Button>\r\n        <Button\r\n          mt=\"4px\"\r\n          mr=\"4px\"\r\n          scale=\"sm\"\r\n          onClick={() => {\r\n            setGasPrice(GAS_PRICE_GWEI.fast)\r\n          }}\r\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\r\n        >\r\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\r\n        </Button>\r\n        <Button\r\n          mr=\"4px\"\r\n          mt=\"4px\"\r\n          scale=\"sm\"\r\n          onClick={() => {\r\n            setGasPrice(GAS_PRICE_GWEI.instant)\r\n          }}\r\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\r\n        >\r\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\r\n        </Button>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default GasSettings\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport {\r\n  useAudioModeManager,\r\n  useExpertModeManager,\r\n  useUserExpertModeAcknowledgementShow,\r\n  useUserSingleHopOnly,\r\n} from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useSwapActionHandlers } from 'state/swap/hooks'\r\nimport useTheme from 'hooks/useTheme'\r\nimport QuestionHelper from '../../QuestionHelper'\r\nimport TransactionSettings from './TransactionSettings'\r\nimport ExpertModal from './ExpertModal'\r\nimport GasSettings from './GasSettings'\r\n\r\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\r\nconst PancakeToggleWrapper = styled.div`\r\n  .pancakes {\r\n    position: absolute;\r\n  }\r\n`\r\n\r\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\r\n  const [showExpertModeAcknowledgement, setShowExpertModeAcknowledgement] = useUserExpertModeAcknowledgementShow()\r\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\r\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\r\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\r\n  const { onChangeRecipient } = useSwapActionHandlers()\r\n\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  if (showConfirmExpertModal) {\r\n    return (\r\n      <ExpertModal\r\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\r\n        onDismiss={onDismiss}\r\n        setShowExpertModeAcknowledgement={setShowExpertModeAcknowledgement}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleExpertModeToggle = () => {\r\n    if (expertMode) {\r\n      onChangeRecipient(null)\r\n      toggleExpertMode()\r\n    } else if (!showExpertModeAcknowledgement) {\r\n      onChangeRecipient(null)\r\n      toggleExpertMode()\r\n    } else {\r\n      setShowConfirmExpertModal(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={t('Settings')}\r\n      headerBackground=\"gradients.cardHeader\"\r\n      onDismiss={onDismiss}\r\n      style={{ maxWidth: '420px', overflowY: 'auto' }}\r\n    >\r\n      <Flex flexDirection=\"column\">\r\n        <Flex pb=\"24px\" flexDirection=\"column\">\r\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\r\n            {t('Global')}\r\n          </Text>\r\n          <GasSettings />\r\n        </Flex>\r\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\r\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\r\n            {t('Swaps & Liquidity')}\r\n          </Text>\r\n          <TransactionSettings />\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n          <Flex alignItems=\"center\">\r\n            <Text>{t('Expert Mode')}</Text>\r\n            <QuestionHelper\r\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\r\n              placement=\"top-start\"\r\n              ml=\"4px\"\r\n            />\r\n          </Flex>\r\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n          <Flex alignItems=\"center\">\r\n            <Text>{t('Disable Multihops')}</Text>\r\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\r\n          </Flex>\r\n          <Toggle\r\n            id=\"toggle-disable-multihop-button\"\r\n            checked={singleHopOnly}\r\n            scale=\"md\"\r\n            onChange={() => {\r\n              setSingleHopOnly(!singleHopOnly)\r\n            }}\r\n          />\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Flex alignItems=\"center\">\r\n            <Text>{t('Flippy sounds')}</Text>\r\n            <QuestionHelper\r\n              text={t('Fun sounds to make a truly immersive pancake-flipping trading experience')}\r\n              placement=\"top-start\"\r\n              ml=\"4px\"\r\n            />\r\n          </Flex>\r\n          <PancakeToggleWrapper>\r\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\r\n          </PancakeToggleWrapper>\r\n        </Flex>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SettingsModal\r\n","import React from 'react'\r\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\r\nimport SettingsModal from './SettingsModal'\r\n\r\nconst GlobalSettings = () => {\r\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\r\n\r\n  return (\r\n    <Flex>\r\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\" id=\"open-settings-dialog-button\">\r\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\r\n      </IconButton>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default GlobalSettings\r\n","import { useMemo } from 'react'\r\nimport contenthashToUri from 'utils/contenthashToUri'\r\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\r\nimport uriToHttp from 'utils/uriToHttp'\r\nimport useENSContentHash from './ENS/useENSContentHash'\r\n\r\nexport default function useHttpLocations(uri: string | undefined): string[] {\r\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\r\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\r\n  return useMemo(() => {\r\n    if (ens) {\r\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\r\n    }\r\n    return uri ? uriToHttp(uri) : []\r\n  }, [ens, resolvedContentHash.contenthash, uri])\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its contenthash.\r\n */\r\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!ensName) return [undefined]\r\n    try {\r\n      return ensName ? [namehash(ensName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [ensName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddress = resolverAddressResult.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\r\n    false,\r\n  )\r\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\r\n\r\n  return {\r\n    contenthash: contenthash.result?.[0] ?? null,\r\n    loading: resolverAddressResult.loading || contenthash.loading,\r\n  }\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\r\n  LIQUIDITY = 'LIQUIDITY',\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B',\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\r\n","import { ethers } from 'ethers'\r\nimport { Campaign, TranslatableText } from 'config/constants/types'\r\nimport ifosList from 'config/constants/ifo'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement } from 'state/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\r\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\r\n\r\ninterface IfoMapResponse {\r\n  thresholdToClaim: string\r\n  campaignId: string\r\n  numberPoints: ethers.BigNumber\r\n}\r\n\r\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        key: 'IFO Shopper: %title%',\r\n        data: {\r\n          title: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.title\r\n  }\r\n}\r\n\r\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\r\n        data: {\r\n          title: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.description\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a wallet is eligible to claim points from valid IFO's\r\n */\r\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\r\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\r\n\r\n  // Returns the claim status of every IFO with a campaign ID\r\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\r\n    return {\r\n      address: getPointCenterIfoAddress(),\r\n      name: 'checkClaimStatus',\r\n      params: [account, address],\r\n    }\r\n  })\r\n\r\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\r\n    | [boolean][]\r\n    | null\r\n\r\n  // Get IFO data for all IFO's that are eligible to claim\r\n  const claimableIfoData = (await multicallv2(\r\n    pointCenterIfoABI,\r\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\r\n      if (claimStatusArr === null) {\r\n        return accum\r\n      }\r\n\r\n      const [claimStatus] = claimStatusArr\r\n\r\n      if (claimStatus === true) {\r\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\r\n      }\r\n\r\n      return accum\r\n    }, []),\r\n  )) as IfoMapResponse[]\r\n\r\n  // Transform response to an Achievement\r\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\r\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\r\n      return accum\r\n    }\r\n\r\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\r\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        address,\r\n        id: claimableIfoDataItem.campaignId,\r\n        type: 'ifo',\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: claimableIfoDataItem.numberPoints.toNumber(),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { PairState, usePair } from 'hooks/usePairs'\r\nimport useTotalSupply from 'hooks/useTotalSupply'\r\n\r\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { tryParseAmount } from '../swap/hooks'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, typeInput } from './actions'\r\n\r\nconst ZERO = JSBI.BigInt(0)\r\n\r\nexport function useMintState(): AppState['mint'] {\r\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\r\n}\r\n\r\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\r\n  onFieldAInput: (typedValue: string) => void\r\n  onFieldBInput: (typedValue: string) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const onFieldAInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity],\r\n  )\r\n  const onFieldBInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity],\r\n  )\r\n\r\n  return {\r\n    onFieldAInput,\r\n    onFieldBInput,\r\n  }\r\n}\r\n\r\nexport function useDerivedMintInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n): {\r\n  dependentField: Field\r\n  currencies: { [field in Field]?: Currency }\r\n  pair?: Pair | null\r\n  pairState: PairState\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  price?: Price\r\n  noLiquidity?: boolean\r\n  liquidityMinted?: TokenAmount\r\n  poolTokenPercentage?: Percent\r\n  error?: string\r\n} {\r\n  const { account, chainId } = useActiveWeb3React()\r\n\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n\r\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  // tokens\r\n  const currencies: { [field in Field]?: Currency } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: currencyA ?? undefined,\r\n      [Field.CURRENCY_B]: currencyB ?? undefined,\r\n    }),\r\n    [currencyA, currencyB],\r\n  )\r\n\r\n  // pair\r\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\r\n\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n\r\n  const noLiquidity: boolean =\r\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\r\n\r\n  // balances\r\n  const balances = useCurrencyBalances(account ?? undefined, [\r\n    currencies[Field.CURRENCY_A],\r\n    currencies[Field.CURRENCY_B],\r\n  ])\r\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\r\n    [Field.CURRENCY_A]: balances[0],\r\n    [Field.CURRENCY_B]: balances[1],\r\n  }\r\n\r\n  // amounts\r\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\r\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\r\n    if (noLiquidity) {\r\n      if (otherTypedValue && currencies[dependentField]) {\r\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\r\n      }\r\n      return undefined\r\n    }\r\n    if (independentAmount) {\r\n      // we wrap the currencies just to get the price in terms of the other token\r\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\r\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\r\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\r\n        const dependentTokenAmount =\r\n          dependentField === Field.CURRENCY_B\r\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\r\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\r\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\r\n      }\r\n      return undefined\r\n    }\r\n    return undefined\r\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\r\n\r\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\r\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\r\n    }),\r\n    [dependentAmount, independentAmount, independentField],\r\n  )\r\n\r\n  const price = useMemo(() => {\r\n    if (noLiquidity) {\r\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n      if (currencyAAmount && currencyBAmount) {\r\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\r\n      }\r\n      return undefined\r\n    }\r\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\r\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\r\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\r\n\r\n  // liquidity minted\r\n  const liquidityMinted = useMemo(() => {\r\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n    const [tokenAmountA, tokenAmountB] = [\r\n      wrappedCurrencyAmount(currencyAAmount, chainId),\r\n      wrappedCurrencyAmount(currencyBAmount, chainId),\r\n    ]\r\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\r\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\r\n    }\r\n    return undefined\r\n  }, [parsedAmounts, chainId, pair, totalSupply])\r\n\r\n  const poolTokenPercentage = useMemo(() => {\r\n    if (liquidityMinted && totalSupply) {\r\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\r\n    }\r\n    return undefined\r\n  }, [liquidityMinted, totalSupply])\r\n\r\n  let error: string | undefined\r\n  if (!account) {\r\n    error = 'Connect Wallet'\r\n  }\r\n\r\n  if (pairState === PairState.INVALID) {\r\n    error = error ?? 'Invalid pair'\r\n  }\r\n\r\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    error = error ?? 'Enter an amount'\r\n  }\r\n\r\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n\r\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\r\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\r\n  }\r\n\r\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\r\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\r\n  }\r\n\r\n  return {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  }\r\n}\r\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { Button, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\r\nimport { CurrencyLogo } from '../../components/Logo'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nfunction ConfirmAddModalBottom({\r\n  noLiquidity,\r\n  price,\r\n  currencies,\r\n  parsedAmounts,\r\n  poolTokenPercentage,\r\n  onAdd,\r\n}: {\r\n  noLiquidity?: boolean\r\n  price?: Fraction\r\n  currencies: { [field in Field]?: Currency }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  poolTokenPercentage?: Percent\r\n  onAdd: () => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <>\r\n      <RowBetween>\r\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\r\n        <RowFixed>\r\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\r\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\r\n        <RowFixed>\r\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\r\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('Rates')}</Text>\r\n        <Text>\r\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\r\n            currencies[Field.CURRENCY_B]?.symbol\r\n          }`}\r\n        </Text>\r\n      </RowBetween>\r\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\r\n        <Text>\r\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\r\n            currencies[Field.CURRENCY_A]?.symbol\r\n          }`}\r\n        </Text>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('Share of Pool')}:</Text>\r\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\r\n      </RowBetween>\r\n      <Button onClick={onAdd} mt=\"20px\">\r\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ConfirmAddModalBottom\r\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { AutoColumn } from '../../components/Layout/Column'\r\nimport { AutoRow } from '../../components/Layout/Row'\r\nimport { ONE_BIPS } from '../../config/constants'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nfunction PoolPriceBar({\r\n  currencies,\r\n  noLiquidity,\r\n  poolTokenPercentage,\r\n  price,\r\n}: {\r\n  currencies: { [field in Field]?: Currency }\r\n  noLiquidity?: boolean\r\n  poolTokenPercentage?: Percent\r\n  price?: Price\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow justify=\"space-around\" gap=\"4px\">\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('%assetA% per %assetB%', {\r\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n            })}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('%assetA% per %assetB%', {\r\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n            })}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>\r\n            {noLiquidity && price\r\n              ? '100'\r\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\r\n            %\r\n          </Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('Share of Pool')}\r\n          </Text>\r\n        </AutoColumn>\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default PoolPriceBar\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\r\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from '../../state'\r\nimport { LightCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { DoubleCurrencyLogo } from '../../components/Logo'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row, { RowBetween } from '../../components/Layout/Row'\r\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\r\n\r\nimport { ROUTER_ADDRESS } from '../../config/constants'\r\nimport { PairState } from '../../hooks/usePairs'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\r\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\r\nimport { Field, resetMintState } from '../../state/mint/actions'\r\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\r\n\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport PoolPriceBar from './PoolPriceBar'\r\nimport Page from '../Page'\r\n\r\nexport default function AddLiquidity({\r\n  match: {\r\n    params: { currencyIdA, currencyIdB },\r\n  },\r\n  history,\r\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { t } = useTranslation()\r\n  const gasPrice = useGasPrice()\r\n\r\n  const currencyA = useCurrency(currencyIdA)\r\n  const currencyB = useCurrency(currencyIdB)\r\n\r\n  useEffect(() => {\r\n    if (!currencyIdA && !currencyIdB) {\r\n      dispatch(resetMintState())\r\n    }\r\n  }, [dispatch, currencyIdA, currencyIdB])\r\n\r\n  const oneCurrencyIsWETH = Boolean(\r\n    chainId &&\r\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\r\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\r\n  )\r\n\r\n  const expertMode = useIsExpertMode()\r\n\r\n  // mint state\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n  const {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n\r\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\r\n\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\r\n\r\n  // txn values\r\n  const deadline = useTransactionDeadline() // custom from users settings\r\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\r\n  const [txHash, setTxHash] = useState<string>('')\r\n\r\n  // get formatted amounts\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  // get the max amounts user can add\r\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmountSpend(currencyBalances[field]),\r\n      }\r\n    },\r\n    {},\r\n  )\r\n\r\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\r\n      }\r\n    },\r\n    {},\r\n  )\r\n\r\n  // check whether the user has approved the router on the tokens\r\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\r\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  async function onAdd() {\r\n    if (!chainId || !library || !account) return\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\r\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\r\n      return\r\n    }\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\r\n    }\r\n\r\n    let estimate\r\n    let method: (...args: any) => Promise<TransactionResponse>\r\n    let args: Array<string | string[] | number>\r\n    let value: BigNumber | null\r\n    if (currencyA === ETHER || currencyB === ETHER) {\r\n      const tokenBIsETH = currencyB === ETHER\r\n      estimate = router.estimateGas.addLiquidityETH\r\n      method = router.addLiquidityETH\r\n      args = [\r\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\r\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\r\n        account,\r\n        deadline.toHexString(),\r\n      ]\r\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\r\n    } else {\r\n      estimate = router.estimateGas.addLiquidity\r\n      method = router.addLiquidity\r\n      args = [\r\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\r\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\r\n        parsedAmountA.raw.toString(),\r\n        parsedAmountB.raw.toString(),\r\n        amountsMin[Field.CURRENCY_A].toString(),\r\n        amountsMin[Field.CURRENCY_B].toString(),\r\n        account,\r\n        deadline.toHexString(),\r\n      ]\r\n      value = null\r\n    }\r\n\r\n    setAttemptingTxn(true)\r\n    await estimate(...args, value ? { value } : {})\r\n      .then((estimatedGasLimit) =>\r\n        method(...args, {\r\n          ...(value ? { value } : {}),\r\n          gasLimit: calculateGasMargin(estimatedGasLimit),\r\n          gasPrice,\r\n        }).then((response) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\r\n              currencies[Field.CURRENCY_A]?.symbol\r\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n        }),\r\n      )\r\n      .catch((err) => {\r\n        setAttemptingTxn(false)\r\n        // we only care if the error is something _other_ than the user rejected the tx\r\n        if (err?.code !== 4001) {\r\n          console.error(err)\r\n        }\r\n      })\r\n  }\r\n\r\n  const modalHeader = () => {\r\n    return noLiquidity ? (\r\n      <Flex alignItems=\"center\">\r\n        <Text fontSize=\"48px\" marginRight=\"10px\">\r\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\r\n        </Text>\r\n        <DoubleCurrencyLogo\r\n          currency0={currencies[Field.CURRENCY_A]}\r\n          currency1={currencies[Field.CURRENCY_B]}\r\n          size={30}\r\n        />\r\n      </Flex>\r\n    ) : (\r\n      <AutoColumn>\r\n        <Flex alignItems=\"center\">\r\n          <Text fontSize=\"48px\" marginRight=\"10px\">\r\n            {liquidityMinted?.toSignificant(6)}\r\n          </Text>\r\n          <DoubleCurrencyLogo\r\n            currency0={currencies[Field.CURRENCY_A]}\r\n            currency1={currencies[Field.CURRENCY_B]}\r\n            size={30}\r\n          />\r\n        </Flex>\r\n        <Row>\r\n          <Text fontSize=\"24px\">\r\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\r\n          </Text>\r\n        </Row>\r\n        <Text small textAlign=\"left\" my=\"24px\">\r\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\r\n            slippage: allowedSlippage / 100,\r\n          })}\r\n        </Text>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  const modalBottom = () => {\r\n    return (\r\n      <ConfirmAddModalBottom\r\n        price={price}\r\n        currencies={currencies}\r\n        parsedAmounts={parsedAmounts}\r\n        noLiquidity={noLiquidity}\r\n        onAdd={onAdd}\r\n        poolTokenPercentage={poolTokenPercentage}\r\n      />\r\n    )\r\n  }\r\n\r\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\r\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n  })\r\n\r\n  const handleCurrencyASelect = useCallback(\r\n    (currencyA_: Currency) => {\r\n      const newCurrencyIdA = currencyId(currencyA_)\r\n      if (newCurrencyIdA === currencyIdB) {\r\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\r\n      } else if (currencyIdB) {\r\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\r\n      } else {\r\n        history.push(`/add/${newCurrencyIdA}`)\r\n      }\r\n    },\r\n    [currencyIdB, history, currencyIdA],\r\n  )\r\n  const handleCurrencyBSelect = useCallback(\r\n    (currencyB_: Currency) => {\r\n      const newCurrencyIdB = currencyId(currencyB_)\r\n      if (currencyIdA === newCurrencyIdB) {\r\n        if (currencyIdB) {\r\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\r\n        } else {\r\n          history.push(`/add/${newCurrencyIdB}`)\r\n        }\r\n      } else {\r\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, history, currencyIdB],\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onFieldAInput('')\r\n    }\r\n    setTxHash('')\r\n  }, [onFieldAInput, txHash])\r\n\r\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\r\n\r\n  const [onPresentAddLiquidityModal] = useModal(\r\n    <TransactionConfirmationModal\r\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\r\n      customOnDismiss={handleDismissConfirmation}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\r\n      pendingText={pendingText}\r\n      currencyToAdd={pair?.liquidityToken}\r\n    />,\r\n    true,\r\n    true,\r\n    'addLiquidityModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader\r\n          title={t('Add Liquidity')}\r\n          subtitle={t('Add liquidity to receive LP tokens')}\r\n          helper={t(\r\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\r\n          )}\r\n          backTo=\"/pool\"\r\n        />\r\n        <CardBody>\r\n          <AutoColumn gap=\"20px\">\r\n            {noLiquidity && (\r\n              <ColumnCenter>\r\n                <Message variant=\"warning\">\r\n                  <div>\r\n                    <Text bold mb=\"8px\">\r\n                      {t('You are the first liquidity provider.')}\r\n                    </Text>\r\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\r\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\r\n                  </div>\r\n                </Message>\r\n              </ColumnCenter>\r\n            )}\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_A]}\r\n              onUserInput={onFieldAInput}\r\n              onMax={() => {\r\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\r\n              }}\r\n              onCurrencySelect={handleCurrencyASelect}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\r\n              currency={currencies[Field.CURRENCY_A]}\r\n              id=\"add-liquidity-input-tokena\"\r\n              showCommonBases\r\n            />\r\n            <ColumnCenter>\r\n              <AddIcon width=\"16px\" />\r\n            </ColumnCenter>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_B]}\r\n              onUserInput={onFieldBInput}\r\n              onCurrencySelect={handleCurrencyBSelect}\r\n              onMax={() => {\r\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\r\n              }}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\r\n              currency={currencies[Field.CURRENCY_B]}\r\n              id=\"add-liquidity-input-tokenb\"\r\n              showCommonBases\r\n            />\r\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\r\n              <>\r\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\r\n                  <RowBetween padding=\"1rem\">\r\n                    <Text fontSize=\"14px\">\r\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\r\n                    </Text>\r\n                  </RowBetween>{' '}\r\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\r\n                    <PoolPriceBar\r\n                      currencies={currencies}\r\n                      poolTokenPercentage={poolTokenPercentage}\r\n                      noLiquidity={noLiquidity}\r\n                      price={price}\r\n                    />\r\n                  </LightCard>\r\n                </LightCard>\r\n              </>\r\n            )}\r\n\r\n            {addIsUnsupported ? (\r\n              <Button disabled mb=\"4px\">\r\n                {t('Unsupported Asset')}\r\n              </Button>\r\n            ) : !account ? (\r\n              <ConnectWalletButton />\r\n            ) : (\r\n              <AutoColumn gap=\"md\">\r\n                {(approvalA === ApprovalState.NOT_APPROVED ||\r\n                  approvalA === ApprovalState.PENDING ||\r\n                  approvalB === ApprovalState.NOT_APPROVED ||\r\n                  approvalB === ApprovalState.PENDING) &&\r\n                  isValid && (\r\n                    <RowBetween>\r\n                      {approvalA !== ApprovalState.APPROVED && (\r\n                        <Button\r\n                          onClick={approveACallback}\r\n                          disabled={approvalA === ApprovalState.PENDING}\r\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalA === ApprovalState.PENDING ? (\r\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\r\n                          ) : (\r\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                      {approvalB !== ApprovalState.APPROVED && (\r\n                        <Button\r\n                          onClick={approveBCallback}\r\n                          disabled={approvalB === ApprovalState.PENDING}\r\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalB === ApprovalState.PENDING ? (\r\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\r\n                          ) : (\r\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                    </RowBetween>\r\n                  )}\r\n                <Button\r\n                  variant={\r\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\r\n                      ? 'danger'\r\n                      : 'primary'\r\n                  }\r\n                  onClick={() => {\r\n                    if (expertMode) {\r\n                      onAdd()\r\n                    } else {\r\n                      onPresentAddLiquidityModal()\r\n                    }\r\n                  }}\r\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\r\n                >\r\n                  {error ?? t('Supply')}\r\n                </Button>\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n        </CardBody>\r\n      </AppBody>\r\n      {!addIsUnsupported ? (\r\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\r\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\r\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\r\n          </AutoColumn>\r\n        ) : null\r\n      ) : (\r\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ChevronUpIcon,\r\n  ChevronDownIcon,\r\n  Card,\r\n  CardBody,\r\n  Flex,\r\n  CardProps,\r\n  AddIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport useTotalSupply from '../../hooks/useTotalSupply'\r\n\r\nimport { useTokenBalance } from '../../state/wallet/hooks'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\r\n\r\nimport { LightCard } from '../Card'\r\nimport { AutoColumn } from '../Layout/Column'\r\nimport CurrencyLogo from '../Logo/CurrencyLogo'\r\nimport { DoubleCurrencyLogo } from '../Logo'\r\nimport { RowBetween, RowFixed } from '../Layout/Row'\r\nimport { BIG_INT_ZERO } from '../../config/constants'\r\nimport Dots from '../Loader/Dots'\r\n\r\nconst FixedHeightRow = styled(RowBetween)`\r\n  height: 24px;\r\n`\r\n\r\ninterface PositionCardProps extends CardProps {\r\n  pair: Pair\r\n  showUnwrapped?: boolean\r\n}\r\n\r\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\r\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <>\r\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\r\n        <Card>\r\n          <CardBody>\r\n            <AutoColumn gap=\"16px\">\r\n              <FixedHeightRow>\r\n                <RowFixed>\r\n                  <Text color=\"secondary\" bold>\r\n                    {t('LP tokens in your wallet')}\r\n                  </Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\r\n                <RowFixed>\r\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\r\n                  <Text small color=\"textSubtle\">\r\n                    {currency0.symbol}-{currency1.symbol} LP\r\n                  </Text>\r\n                </RowFixed>\r\n                <RowFixed>\r\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <AutoColumn gap=\"4px\">\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Share of Pool')}:\r\n                  </Text>\r\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\r\n                  </Text>\r\n                  {token0Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\r\n                  </Text>\r\n                  {token1Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n              </AutoColumn>\r\n            </AutoColumn>\r\n          </CardBody>\r\n        </Card>\r\n      ) : (\r\n        <LightCard>\r\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\r\n            <span role=\"img\" aria-label=\"pancake-icon\">\r\n              🥞\r\n            </span>{' '}\r\n            {t(\r\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\r\n            )}\r\n          </Text>\r\n        </LightCard>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const currency0 = unwrappedToken(pair.token0)\r\n  const currency1 = unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <Card style={{ borderRadius: '12px' }} {...props}>\r\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\r\n        <Flex flexDirection=\"column\">\r\n          <Flex alignItems=\"center\" mb=\"4px\">\r\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\r\n            <Text bold ml=\"8px\">\r\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\r\n            </Text>\r\n          </Flex>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {userPoolBalance?.toSignificant(4)}\r\n          </Text>\r\n        </Flex>\r\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n      </Flex>\r\n\r\n      {showMore && (\r\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\r\n          <FixedHeightRow>\r\n            <RowFixed>\r\n              <CurrencyLogo size=\"20px\" currency={currency0} />\r\n              <Text color=\"textSubtle\" ml=\"4px\">\r\n                Pooled {currency0.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n            {token0Deposited ? (\r\n              <RowFixed>\r\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n              </RowFixed>\r\n            ) : (\r\n              '-'\r\n            )}\r\n          </FixedHeightRow>\r\n\r\n          <FixedHeightRow>\r\n            <RowFixed>\r\n              <CurrencyLogo size=\"20px\" currency={currency1} />\r\n              <Text color=\"textSubtle\" ml=\"4px\">\r\n                Pooled {currency1.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n            {token1Deposited ? (\r\n              <RowFixed>\r\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n              </RowFixed>\r\n            ) : (\r\n              '-'\r\n            )}\r\n          </FixedHeightRow>\r\n\r\n          <FixedHeightRow>\r\n            <Text color=\"textSubtle\">Share of pool</Text>\r\n            <Text>\r\n              {poolTokenPercentage\r\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\r\n                : '-'}\r\n            </Text>\r\n          </FixedHeightRow>\r\n\r\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\r\n            <Flex flexDirection=\"column\">\r\n              <Button\r\n                as={Link}\r\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n                variant=\"primary\"\r\n                width=\"100%\"\r\n                mb=\"8px\"\r\n              >\r\n                Remove\r\n              </Button>\r\n              <Button\r\n                as={Link}\r\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n                variant=\"text\"\r\n                startIcon={<AddIcon color=\"primary\" />}\r\n                width=\"100%\"\r\n              >\r\n                Add liquidity instead\r\n              </Button>\r\n            </Flex>\r\n          )}\r\n        </AutoColumn>\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\r\nimport { Achievement } from 'state/types'\r\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\r\n\r\ninterface UserPointIncreaseEvent {\r\n  campaignId: string\r\n  id: string // wallet address\r\n  points: string\r\n}\r\n\r\n/**\r\n * Gets all user point increase events on the profile filtered by wallet address\r\n */\r\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\r\n  try {\r\n    const { user } = await request(\r\n      GRAPH_API_PROFILE,\r\n      gql`\r\n        query getUserPointIncreaseEvents($account: ID!) {\r\n          user(id: $account) {\r\n            points {\r\n              id\r\n              campaignId\r\n              points\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      {\r\n        account: account.toLowerCase(),\r\n      },\r\n    )\r\n\r\n    return user.points\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all user point increase events and adds achievement meta\r\n */\r\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\r\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\r\n\r\n  if (!pointIncreaseEvents) {\r\n    return []\r\n  }\r\n\r\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\r\n    if (!campaignMap.has(userPoint.campaignId)) {\r\n      return accum\r\n    }\r\n\r\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: userPoint.campaignId,\r\n        type: campaignMeta.type,\r\n        address: userPoint.id,\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(userPoint.points),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\r\nimport { AchievementState, Achievement } from '../types'\r\nimport { getAchievements } from './helpers'\r\n\r\nconst initialState: AchievementState = {\r\n  data: [],\r\n}\r\n\r\nexport const achievementSlice = createSlice({\r\n  name: 'achievements',\r\n  initialState,\r\n  reducers: {\r\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\r\n      state.data.push(action.payload)\r\n    },\r\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = [...state.data, ...action.payload]\r\n    },\r\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = action.payload\r\n    },\r\n    clearAchievements: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\r\n\r\n// Thunks\r\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const achievements = await getAchievements(account)\r\n    dispatch(setAchievements(achievements))\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nexport default achievementSlice.reducer\r\n","import { Nft } from './types'\r\nimport { IPFS_GATEWAY } from '../../index'\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Baller',\r\n    description: 'Absolute (lottery) baller.',\r\n    images: {\r\n      lg: 'baller-lg.png',\r\n      md: 'baller-md.png',\r\n      sm: 'baller-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.mp4`,\r\n    },\r\n    identifier: 'baller',\r\n    id: 20,\r\n  },\r\n  {\r\n    name: 'Lucky',\r\n    description: \"Lucky's got the golden ticket!\",\r\n    images: {\r\n      lg: 'lucky-lg.png',\r\n      md: 'lucky-md.png',\r\n      sm: 'lucky-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.mp4`,\r\n    },\r\n    identifier: 'lucky',\r\n    id: 19,\r\n  },\r\n  {\r\n    name: 'Lottie',\r\n    description: \"Lottie's looking hotto for lotto!\",\r\n    images: {\r\n      lg: 'lottie-lg.png',\r\n      md: 'lottie-md.png',\r\n      sm: 'lottie-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.mp4`,\r\n    },\r\n    identifier: 'lottie',\r\n    id: 18,\r\n  },\r\n  {\r\n    name: 'Claire',\r\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\r\n    images: {\r\n      lg: 'claire-lg.png',\r\n      md: 'claire-md.png',\r\n      sm: 'claire-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png`,\r\n    },\r\n    identifier: 'claire',\r\n    id: 17,\r\n  },\r\n  {\r\n    name: 'Syrup Soak',\r\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\r\n    images: {\r\n      lg: 'soak-lg.png',\r\n      md: 'soak-md.png',\r\n      sm: 'soak-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4`,\r\n    },\r\n    identifier: 'syrup-soak',\r\n    id: 16,\r\n  },\r\n  {\r\n    name: 'Easter ‘21 Champions',\r\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\r\n    images: {\r\n      lg: 'easter-champion-storm-lg.png',\r\n      md: 'easter-champion-storm-md.png',\r\n      sm: 'easter-champion-storm-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png'`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4`,\r\n    },\r\n    identifier: 'easter-champion-storm',\r\n    id: 15,\r\n  },\r\n  {\r\n    name: \"Cakeston Easter '21\",\r\n    description: 'Melting Easter eggs and melting hearts!',\r\n    images: {\r\n      lg: 'cakeston-easter-21-lg.png',\r\n      md: 'cakeston-easter-21-md.png',\r\n      sm: 'cakeston-easter-21-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png`,\r\n    },\r\n    identifier: 'easter-caker',\r\n    id: 15,\r\n  },\r\n  {\r\n    name: \"Flipsie Easter '21\",\r\n    description: 'Watch out for Flipsie’s spatula smash!',\r\n    images: {\r\n      lg: 'flipsie-easter-21-lg.png',\r\n      md: 'flipsie-easter-21-md.png',\r\n      sm: 'flipsie-easter-21-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png`,\r\n    },\r\n    identifier: 'easter-flipper',\r\n    id: 14,\r\n  },\r\n  {\r\n    name: \"Stormy Easter '21\",\r\n    description: 'Do you like chocolate with your syrup? Go long!',\r\n    images: {\r\n      lg: 'stormy-easter-21-lg.png',\r\n      md: 'stormy-easter-21-md.png',\r\n      sm: 'stormy-easter-21-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png`,\r\n    },\r\n    identifier: 'easter-storm',\r\n    id: 12,\r\n  },\r\n  {\r\n    name: 'Bullish',\r\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\r\n    images: {\r\n      lg: 'bullish-lg.png',\r\n      md: 'bullish-md.png',\r\n      sm: 'bullish-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4`,\r\n    },\r\n    identifier: 'bullish',\r\n    id: 11,\r\n  },\r\n  {\r\n    name: 'Hiccup',\r\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\r\n    images: {\r\n      lg: 'hiccup-lg.png',\r\n      md: 'hiccup-md.png',\r\n      sm: 'hiccup-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png`,\r\n    },\r\n    identifier: 'hiccup',\r\n    id: 10,\r\n  },\r\n  {\r\n    name: 'Sleepy',\r\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\r\n    images: {\r\n      lg: 'sleepy-lg.png',\r\n      md: 'sleepy-md.png',\r\n      sm: 'sleepy-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png`,\r\n      blur: 'sleepy-blur.png',\r\n    },\r\n    identifier: 'sleepy',\r\n    id: 5,\r\n  },\r\n  {\r\n    name: 'Sunny',\r\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\r\n    images: {\r\n      lg: 'sunny-lg.png',\r\n      md: 'sunny-md.png',\r\n      sm: 'sunny-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png`,\r\n      blur: 'sunny-blur.png',\r\n    },\r\n    identifier: 'sunny',\r\n    id: 9,\r\n  },\r\n  {\r\n    name: 'Churro',\r\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\r\n    images: {\r\n      lg: 'churro-lg.png',\r\n      md: 'churro-md.png',\r\n      sm: 'churro-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png`,\r\n      blur: 'churro-blur.png',\r\n    },\r\n    identifier: 'churro',\r\n    id: 8,\r\n  },\r\n  {\r\n    name: 'Dollop',\r\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\r\n    images: {\r\n      lg: 'dollop-lg.png',\r\n      md: 'dollop-md.png',\r\n      sm: 'dollop-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png`,\r\n      blur: 'dollop-blur.png',\r\n    },\r\n    identifier: 'dollop',\r\n    id: 6,\r\n  },\r\n  {\r\n    name: 'Twinkle',\r\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\r\n    images: {\r\n      lg: 'twinkle-lg.png',\r\n      md: 'twinkle-md.png',\r\n      sm: 'twinkle-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png`,\r\n      blur: 'twinkle-blur.png',\r\n    },\r\n    identifier: 'twinkle',\r\n    id: 7,\r\n  },\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    images: {\r\n      lg: 'swapsies-lg.png',\r\n      md: 'swapsies-md.png',\r\n      sm: 'swapsies-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png`,\r\n      blur: 'swapsies-blur.png',\r\n    },\r\n    identifier: 'swapsies',\r\n    id: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    images: {\r\n      lg: 'drizzle-lg.png',\r\n      md: 'drizzle-md.png',\r\n      sm: 'drizzle-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png`,\r\n      blur: 'drizzle-blur.png',\r\n    },\r\n    identifier: 'drizzle',\r\n    id: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    images: {\r\n      lg: 'blueberries-lg.png',\r\n      md: 'blueberries-md.png',\r\n      sm: 'blueberries-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png`,\r\n      blur: 'blueberries-blur.png',\r\n    },\r\n    identifier: 'blueberries',\r\n    id: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    images: {\r\n      lg: 'circular-lg.png',\r\n      md: 'circular-md.png',\r\n      sm: 'circular-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png`,\r\n      blur: 'circular-blur.png',\r\n    },\r\n    identifier: 'circular',\r\n    id: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    images: {\r\n      lg: 'sparkle-lg.png',\r\n      md: 'sparkle-md.png',\r\n      sm: 'sparkle-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\r\n      blur: 'sparkle-blur.png',\r\n    },\r\n    identifier: 'sparkle',\r\n    id: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","import pancakeBunnies from './pancakeBunnies'\r\nimport { CollectionKey, Nfts } from './types'\r\n\r\nconst nfts: Nfts = {\r\n  [CollectionKey.PANCAKE]: pancakeBunnies,\r\n}\r\n\r\nexport default nfts\r\nexport { default as collections } from './collections'\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { CollectiblesState } from 'state/types'\r\nimport collections from 'config/constants/nfts/collections'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\nimport { ethers } from 'ethers'\r\n\r\nconst initialState: CollectiblesState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: {},\r\n}\r\n\r\ntype NftSourceItem = [number, string]\r\n\r\n// Thunks\r\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\r\n  'collectibles/fetchWalletNfts',\r\n  async (account) => {\r\n    // For each nft source get nft data\r\n    const nftSourcePromises = Object.keys(collections).map(async (nftSourceType) => {\r\n      const { address: addressObj } = collections[nftSourceType]\r\n      const address = getAddress(addressObj)\r\n      const contract = getErc721Contract(address)\r\n      const balanceOfResponse = await contract.balanceOf(account)\r\n      const balanceOf = balanceOfResponse.toNumber()\r\n\r\n      if (balanceOfResponse.eq(0)) {\r\n        return []\r\n      }\r\n\r\n      const getTokenIdAndData = async (index: number) => {\r\n        try {\r\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\r\n          const tokenId = tokenIdBn.toNumber()\r\n\r\n          const walletNft = await getNftByTokenId(address, tokenId)\r\n          return [tokenId, walletNft.identifier]\r\n        } catch (error) {\r\n          console.error('getTokenIdAndData', error)\r\n          return null\r\n        }\r\n      }\r\n\r\n      const nftDataFetchPromises = []\r\n\r\n      // For each index get the tokenId and data associated with it\r\n      for (let i = 0; i < balanceOf; i++) {\r\n        nftDataFetchPromises.push(getTokenIdAndData(i))\r\n      }\r\n\r\n      const nftData = await Promise.all(nftDataFetchPromises)\r\n      return nftData\r\n    })\r\n\r\n    const nftSourceData = await Promise.all(nftSourcePromises)\r\n\r\n    return nftSourceData.flat()\r\n  },\r\n)\r\n\r\nexport const collectiblesSlice = createSlice({\r\n  name: 'collectibles',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchWalletNfts.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n      state.data = action.payload.reduce((accum, association) => {\r\n        if (!association) {\r\n          return accum\r\n        }\r\n\r\n        const [tokenId, identifier] = association as NftSourceItem\r\n\r\n        return {\r\n          ...accum,\r\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\r\n        }\r\n      }, {})\r\n    })\r\n  },\r\n})\r\n\r\nexport default collectiblesSlice.reducer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@pancakeswap/uikit'\r\nimport Page from '../Layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = Math.abs(seconds)\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import React from 'react'\r\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport { SUGGESTED_BASES } from '../../config/constants'\r\nimport { AutoColumn } from '../Layout/Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { AutoRow } from '../Layout/Row'\r\nimport { CurrencyLogo } from '../Logo'\r\n\r\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\r\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\r\n  border-radius: 10px;\r\n  display: flex;\r\n  padding: 6px;\r\n\r\n  align-items: center;\r\n  :hover {\r\n    cursor: ${({ disable }) => !disable && 'pointer'};\r\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\r\n  }\r\n\r\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\r\n  opacity: ${({ disable }) => disable && '0.4'};\r\n`\r\n\r\nexport default function CommonBases({\r\n  chainId,\r\n  onSelect,\r\n  selectedCurrency,\r\n}: {\r\n  chainId?: ChainId\r\n  selectedCurrency?: Currency | null\r\n  onSelect: (currency: Currency) => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow>\r\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\r\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\r\n      </AutoRow>\r\n      <AutoRow gap=\"auto\">\r\n        <BaseWrapper\r\n          onClick={() => {\r\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\r\n              onSelect(ETHER)\r\n            }\r\n          }}\r\n          disable={selectedCurrency === ETHER}\r\n        >\r\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\r\n          <Text>BNB</Text>\r\n        </BaseWrapper>\r\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\r\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\r\n          return (\r\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\r\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\r\n              <Text>{token.symbol}</Text>\r\n            </BaseWrapper>\r\n          )\r\n        })}\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\r\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\r\nimport { ListLogo } from 'components/Logo'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport styled from 'styled-components'\r\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst TokenSection = styled.div<{ dim?: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) auto;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n\r\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\r\n`\r\n\r\nconst CheckIcon = styled(CheckmarkCircleIcon)`\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 6px;\r\n  stroke: ${({ theme }) => theme.colors.success};\r\n`\r\n\r\nconst NameOverflow = styled.div`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 140px;\r\n  font-size: 12px;\r\n`\r\n\r\nexport default function ImportRow({\r\n  token,\r\n  style,\r\n  dim,\r\n  showImportView,\r\n  setImportToken,\r\n}: {\r\n  token: Token\r\n  style?: CSSProperties\r\n  dim?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  // globals\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // check if token comes from list\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n\r\n  // check if already active on list or local storage tokens\r\n  const isAdded = useIsUserAddedToken(token)\r\n  const isActive = useIsTokenActive(token)\r\n\r\n  return (\r\n    <TokenSection style={style}>\r\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\r\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\r\n        <AutoRow>\r\n          <Text>{token.symbol}</Text>\r\n          <Text color=\"textDisabled\" ml=\"8px\">\r\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\r\n          </Text>\r\n        </AutoRow>\r\n        {list && list.logoURI && (\r\n          <RowFixed>\r\n            <Text small mr=\"4px\" color=\"textSubtle\">\r\n              {t('via')} {list.name}\r\n            </Text>\r\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\r\n          </RowFixed>\r\n        )}\r\n      </AutoColumn>\r\n      {!isActive && !isAdded ? (\r\n        <Button\r\n          width=\"fit-content\"\r\n          onClick={() => {\r\n            if (setImportToken) {\r\n              setImportToken(token)\r\n            }\r\n            showImportView()\r\n          }}\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      ) : (\r\n        <RowFixed style={{ minWidth: 'fit-content' }}>\r\n          <CheckIcon />\r\n          <Text color=\"success\">Active</Text>\r\n        </RowFixed>\r\n      )}\r\n    </TokenSection>\r\n  )\r\n}\r\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\r\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { LightGreyCard } from 'components/Card'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedActiveList } from '../../state/lists/hooks'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\r\nimport Column from '../Layout/Column'\r\nimport { RowFixed, RowBetween } from '../Layout/Row'\r\nimport { CurrencyLogo } from '../Logo'\r\nimport CircleLoader from '../Loader/CircleLoader'\r\nimport { isTokenOnList } from '../../utils'\r\nimport ImportRow from './ImportRow'\r\n\r\nfunction currencyKey(currency: Currency): string {\r\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\r\n}\r\n\r\nconst StyledBalanceText = styled(Text)`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  max-width: 5rem;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst FixedContentRow = styled.div`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n`\r\n\r\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\r\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\r\n}\r\n\r\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\r\n  grid-gap: 8px;\r\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n  :hover {\r\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\r\n  }\r\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\r\n`\r\n\r\nfunction CurrencyRow({\r\n  currency,\r\n  onSelect,\r\n  isSelected,\r\n  otherSelected,\r\n  style,\r\n}: {\r\n  currency: Currency\r\n  onSelect: () => void\r\n  isSelected: boolean\r\n  otherSelected: boolean\r\n  style: CSSProperties\r\n}) {\r\n  const { account } = useActiveWeb3React()\r\n  const key = currencyKey(currency)\r\n  const selectedTokenList = useCombinedActiveList()\r\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\r\n  const customAdded = useIsUserAddedToken(currency)\r\n  const balance = useCurrencyBalance(account ?? undefined, currency)\r\n\r\n  // only show add or remove buttons if not on selected list\r\n  return (\r\n    <MenuItem\r\n      style={style}\r\n      className={`token-item-${key}`}\r\n      onClick={() => (isSelected ? null : onSelect())}\r\n      disabled={isSelected}\r\n      selected={otherSelected}\r\n    >\r\n      <CurrencyLogo currency={currency} size=\"24px\" />\r\n      <Column>\r\n        <Text bold>{currency.symbol}</Text>\r\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\r\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\r\n        </Text>\r\n      </Column>\r\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\r\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\r\n      </RowFixed>\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\nexport default function CurrencyList({\r\n  height,\r\n  currencies,\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherCurrency,\r\n  fixedListRef,\r\n  showETH,\r\n  showImportView,\r\n  setImportToken,\r\n  breakIndex,\r\n}: {\r\n  height: number\r\n  currencies: Currency[]\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherCurrency?: Currency | null\r\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\r\n  showETH: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n  breakIndex: number | undefined\r\n}) {\r\n  const itemData: (Currency | undefined)[] = useMemo(() => {\r\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\r\n    if (breakIndex !== undefined) {\r\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\r\n    }\r\n    return formatted\r\n  }, [breakIndex, currencies, showETH])\r\n\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const inactiveTokens: {\r\n    [address: string]: Token\r\n  } = useAllInactiveTokens()\r\n\r\n  const Row = useCallback(\r\n    ({ data, index, style }) => {\r\n      const currency: Currency = data[index]\r\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\r\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\r\n      const handleSelect = () => onCurrencySelect(currency)\r\n\r\n      const token = wrappedCurrency(currency, chainId)\r\n\r\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\r\n\r\n      if (index === breakIndex || !data) {\r\n        return (\r\n          <FixedContentRow style={style}>\r\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\r\n              <RowBetween>\r\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\r\n                <QuestionHelper\r\n                  text={t(\r\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\r\n                  )}\r\n                  ml=\"4px\"\r\n                />\r\n              </RowBetween>\r\n            </LightGreyCard>\r\n          </FixedContentRow>\r\n        )\r\n      }\r\n\r\n      if (showImport && token) {\r\n        return (\r\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\r\n        )\r\n      }\r\n      return (\r\n        <CurrencyRow\r\n          style={style}\r\n          currency={currency}\r\n          isSelected={isSelected}\r\n          onSelect={handleSelect}\r\n          otherSelected={otherSelected}\r\n        />\r\n      )\r\n    },\r\n    [\r\n      chainId,\r\n      inactiveTokens,\r\n      onCurrencySelect,\r\n      otherCurrency,\r\n      selectedCurrency,\r\n      setImportToken,\r\n      showImportView,\r\n      breakIndex,\r\n      t,\r\n    ],\r\n  )\r\n\r\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\r\n\r\n  return (\r\n    <FixedSizeList\r\n      height={height}\r\n      ref={fixedListRef as any}\r\n      width=\"100%\"\r\n      itemData={itemData}\r\n      itemCount={itemData.length}\r\n      itemSize={56}\r\n      itemKey={itemKey}\r\n    >\r\n      {Row}\r\n    </FixedSizeList>\r\n  )\r\n}\r\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\r\n\r\n// compare two token amounts with highest one coming first\r\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\r\n  if (balanceA && balanceB) {\r\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\r\n  }\r\n  if (balanceA && balanceA.greaterThan('0')) {\r\n    return -1\r\n  }\r\n  if (balanceB && balanceB.greaterThan('0')) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getTokenComparator(balances: {\r\n  [tokenAddress: string]: TokenAmount | undefined\r\n}): (tokenA: Token, tokenB: Token) => number {\r\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\r\n    // -1 = a is first\r\n    // 1 = b is first\r\n\r\n    // sort by balances\r\n    const balanceA = balances[tokenA.address]\r\n    const balanceB = balances[tokenB.address]\r\n\r\n    const balanceComp = balanceComparator(balanceA, balanceB)\r\n    if (balanceComp !== 0) return balanceComp\r\n\r\n    if (tokenA.symbol && tokenB.symbol) {\r\n      // sort by symbol\r\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\r\n    }\r\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\r\n  }\r\n}\r\n\r\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\r\n  const balances = useAllTokenBalances()\r\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\r\n  return useMemo(() => {\r\n    if (inverted) {\r\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\r\n    }\r\n    return comparator\r\n  }, [inverted, comparator])\r\n}\r\n\r\nexport default useTokenComparator\r\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\r\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text, Input, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { useAudioModeManager } from 'state/user/hooks'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\r\nimport { isAddress } from '../../utils'\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport Row from '../Layout/Row'\r\nimport CommonBases from './CommonBases'\r\nimport CurrencyList from './CurrencyList'\r\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\r\nimport useTokenComparator from './sorting'\r\n\r\nimport ImportRow from './ImportRow'\r\n\r\ninterface CurrencySearchProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}\r\n\r\nconst swapSound = new Audio('swap.mp3')\r\n\r\nfunction CurrencySearch({\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherSelectedCurrency,\r\n  showCommonBases,\r\n  showImportView,\r\n  setImportToken,\r\n}: CurrencySearchProps) {\r\n  const { t } = useTranslation()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  // refs for fixed size lists\r\n  const fixedList = useRef<FixedSizeList>()\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n  const debouncedQuery = useDebounce(searchQuery, 200)\r\n\r\n  const [invertSearchOrder] = useState<boolean>(false)\r\n\r\n  const allTokens = useAllTokens()\r\n\r\n  // if they input an address, use it\r\n  const searchToken = useToken(debouncedQuery)\r\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\r\n\r\n  const [audioPlay] = useAudioModeManager()\r\n\r\n  const showETH: boolean = useMemo(() => {\r\n    const s = debouncedQuery.toLowerCase().trim()\r\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\r\n  }, [debouncedQuery])\r\n\r\n  const tokenComparator = useTokenComparator(invertSearchOrder)\r\n\r\n  const filteredTokens: Token[] = useMemo(() => {\r\n    return filterTokens(Object.values(allTokens), debouncedQuery)\r\n  }, [allTokens, debouncedQuery])\r\n\r\n  const sortedTokens: Token[] = useMemo(() => {\r\n    return filteredTokens.sort(tokenComparator)\r\n  }, [filteredTokens, tokenComparator])\r\n\r\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      if (audioPlay) {\r\n        swapSound.play()\r\n      }\r\n    },\r\n    [audioPlay, onCurrencySelect],\r\n  )\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  }, [])\r\n\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n    fixedList.current?.scrollTo(0)\r\n  }, [])\r\n\r\n  const handleEnter = useCallback(\r\n    (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === 'Enter') {\r\n        const s = debouncedQuery.toLowerCase().trim()\r\n        if (s === 'bnb') {\r\n          handleCurrencySelect(ETHER)\r\n        } else if (filteredSortedTokens.length > 0) {\r\n          if (\r\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\r\n            filteredSortedTokens.length === 1\r\n          ) {\r\n            handleCurrencySelect(filteredSortedTokens[0])\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\r\n  )\r\n\r\n  // if no results on main list, show option to expand into inactive\r\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\r\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AutoColumn gap=\"16px\">\r\n          <Row>\r\n            <Input\r\n              id=\"token-search-input\"\r\n              placeholder={t('Search name or paste address')}\r\n              scale=\"lg\"\r\n              autoComplete=\"off\"\r\n              value={searchQuery}\r\n              ref={inputRef as RefObject<HTMLInputElement>}\r\n              onChange={handleInput}\r\n              onKeyDown={handleEnter}\r\n            />\r\n          </Row>\r\n          {showCommonBases && (\r\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\r\n          )}\r\n        </AutoColumn>\r\n        {searchToken && !searchTokenIsAdded ? (\r\n          <Column style={{ padding: '20px 0', height: '100%' }}>\r\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\r\n          </Column>\r\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\r\n          <Box margin=\"24px -24px\">\r\n            <CurrencyList\r\n              height={390}\r\n              showETH={showETH}\r\n              currencies={\r\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\r\n              }\r\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\r\n              onCurrencySelect={handleCurrencySelect}\r\n              otherCurrency={otherSelectedCurrency}\r\n              selectedCurrency={selectedCurrency}\r\n              fixedListRef={fixedList}\r\n              showImportView={showImportView}\r\n              setImportToken={setImportToken}\r\n            />\r\n          </Box>\r\n        ) : (\r\n          <Column style={{ padding: '20px', height: '100%' }}>\r\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\r\n              {t('No results found.')}\r\n            </Text>\r\n          </Column>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrencySearch\r\n","export enum CurrencyModalView {\r\n  search,\r\n  manage,\r\n  importToken,\r\n  importList,\r\n}\r\n\r\nexport default CurrencyModalView\r\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\r\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\nimport Card from 'components/Card'\r\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\r\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\r\n\r\nimport { AppDispatch, AppState } from '../../state'\r\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\r\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\r\nimport uriToHttp from '../../utils/uriToHttp'\r\n\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport { ListLogo } from '../Logo'\r\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\r\nimport { CurrencyModalView } from './types'\r\n\r\nfunction listVersionLabel(version: Version): string {\r\n  return `v${version.major}.${version.minor}.${version.patch}`\r\n}\r\n\r\nconst Wrapper = styled(Column)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst RowWrapper = styled(Row)<{ active: boolean }>`\r\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\r\n  border: solid 1px;\r\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\r\n  transition: 200ms;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-radius: 20px;\r\n`\r\n\r\nfunction listUrlRowHTMLId(listUrl: string) {\r\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\r\n}\r\n\r\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\r\n\r\n  const isActive = useIsListActive(listUrl)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const handleAcceptListUpdate = useCallback(() => {\r\n    if (!pending) return\r\n    dispatch(acceptListUpdate(listUrl))\r\n  }, [dispatch, listUrl, pending])\r\n\r\n  const handleRemoveList = useCallback(() => {\r\n    // eslint-disable-next-line no-alert\r\n    if (window.confirm('Please confirm you would like to remove this list')) {\r\n      dispatch(removeList(listUrl))\r\n    }\r\n  }, [dispatch, listUrl])\r\n\r\n  const handleEnableList = useCallback(() => {\r\n    dispatch(enableList(listUrl))\r\n  }, [dispatch, listUrl])\r\n\r\n  const handleDisableList = useCallback(() => {\r\n    dispatch(disableList(listUrl))\r\n  }, [dispatch, listUrl])\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <div>\r\n      <Text>{list && listVersionLabel(list.version)}</Text>\r\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\r\n        {t('See')}\r\n      </LinkExternal>\r\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\r\n        {t('Remove')}\r\n      </Button>\r\n      {pending && (\r\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\r\n          {t('Update list')}\r\n        </Button>\r\n      )}\r\n    </div>,\r\n    { placement: 'right-end', trigger: 'click' },\r\n  )\r\n\r\n  if (!list) return null\r\n\r\n  return (\r\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\r\n      {tooltipVisible && tooltip}\r\n      {list.logoURI ? (\r\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\r\n      ) : (\r\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\r\n      )}\r\n      <Column style={{ flex: '1' }}>\r\n        <Row>\r\n          <Text bold>{list.name}</Text>\r\n        </Row>\r\n        <RowFixed mt=\"4px\">\r\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\r\n            {list.tokens.length} {t('Tokens')}\r\n          </Text>\r\n          <span ref={targetRef}>\r\n            <CogIcon color=\"text\" width=\"12px\" />\r\n          </span>\r\n        </RowFixed>\r\n      </Column>\r\n      <Toggle\r\n        checked={isActive}\r\n        onChange={() => {\r\n          if (isActive) {\r\n            handleDisableList()\r\n          } else {\r\n            handleEnableList()\r\n          }\r\n        }}\r\n      />\r\n    </RowWrapper>\r\n  )\r\n})\r\n\r\nconst ListContainer = styled.div`\r\n  padding: 1rem 0;\r\n  height: 100%;\r\n  overflow: auto;\r\n`\r\n\r\nfunction ManageLists({\r\n  setModalView,\r\n  setImportList,\r\n  setListUrl,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  const [listUrlInput, setListUrlInput] = useState<string>('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const lists = useAllLists()\r\n\r\n  // sort by active but only if not visible\r\n  const activeListUrls = useActiveListUrls()\r\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\r\n  useEffect(() => {\r\n    if (!activeCopy && activeListUrls) {\r\n      setActiveCopy(activeListUrls)\r\n    }\r\n  }, [activeCopy, activeListUrls])\r\n\r\n  const handleInput = useCallback((e) => {\r\n    setListUrlInput(e.target.value)\r\n  }, [])\r\n\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const validUrl: boolean = useMemo(() => {\r\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\r\n  }, [listUrlInput])\r\n\r\n  const sortedLists = useMemo(() => {\r\n    const listUrls = Object.keys(lists)\r\n    return listUrls\r\n      .filter((listUrl) => {\r\n        // only show loaded lists, hide unsupported lists\r\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\r\n      })\r\n      .sort((u1, u2) => {\r\n        const { current: l1 } = lists[u1]\r\n        const { current: l2 } = lists[u2]\r\n\r\n        // first filter on active lists\r\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\r\n          return -1\r\n        }\r\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\r\n          return 1\r\n        }\r\n\r\n        if (l1 && l2) {\r\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\r\n            ? -1\r\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\r\n            ? 0\r\n            : 1\r\n        }\r\n        if (l1) return -1\r\n        if (l2) return 1\r\n        return 0\r\n      })\r\n  }, [lists, activeCopy])\r\n\r\n  // temporary fetched list for import flow\r\n  const [tempList, setTempList] = useState<TokenList>()\r\n  const [addError, setAddError] = useState<string | undefined>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTempList() {\r\n      fetchList(listUrlInput, false)\r\n        .then((list) => setTempList(list))\r\n        .catch(() => setAddError('Error importing list'))\r\n    }\r\n    // if valid url, fetch details for card\r\n    if (validUrl) {\r\n      fetchTempList()\r\n    } else {\r\n      setTempList(undefined)\r\n      if (listUrlInput !== '') {\r\n        setAddError('Enter valid list location')\r\n      }\r\n    }\r\n\r\n    // reset error\r\n    if (listUrlInput === '') {\r\n      setAddError(undefined)\r\n    }\r\n  }, [fetchList, listUrlInput, validUrl])\r\n\r\n  // check if list is already imported\r\n  const isImported = Object.keys(lists).includes(listUrlInput)\r\n\r\n  // set list values and have parent modal switch to import list view\r\n  const handleImport = useCallback(() => {\r\n    if (!tempList) return\r\n    setImportList(tempList)\r\n    setModalView(CurrencyModalView.importList)\r\n    setListUrl(listUrlInput)\r\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"14px\">\r\n        <Row>\r\n          <Input\r\n            id=\"list-add-input\"\r\n            scale=\"lg\"\r\n            placeholder={t('https:// or ipfs:// or ENS name')}\r\n            value={listUrlInput}\r\n            onChange={handleInput}\r\n          />\r\n        </Row>\r\n        {addError ? (\r\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n            {addError}\r\n          </Text>\r\n        ) : null}\r\n      </AutoColumn>\r\n      {tempList && (\r\n        <AutoColumn style={{ paddingTop: 0 }}>\r\n          <Card padding=\"12px 20px\">\r\n            <RowBetween>\r\n              <RowFixed>\r\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\r\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\r\n                  <Text bold>{tempList.name}</Text>\r\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\r\n                    {tempList.tokens.length} {t('Tokens')}\r\n                  </Text>\r\n                </AutoColumn>\r\n              </RowFixed>\r\n              {isImported ? (\r\n                <RowFixed>\r\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\r\n                  <Text>{t('Loaded')}</Text>\r\n                </RowFixed>\r\n              ) : (\r\n                <Button width=\"fit-content\" onClick={handleImport}>\r\n                  {t('Import')}\r\n                </Button>\r\n              )}\r\n            </RowBetween>\r\n          </Card>\r\n        </AutoColumn>\r\n      )}\r\n      <ListContainer>\r\n        <AutoColumn gap=\"md\">\r\n          {sortedLists.map((listUrl) => (\r\n            <ListRow key={listUrl} listUrl={listUrl} />\r\n          ))}\r\n        </AutoColumn>\r\n      </ListContainer>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ManageLists\r\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport { useToken } from 'hooks/Tokens'\r\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\r\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport { getBscScanLink, isAddress } from 'utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport ImportRow from './ImportRow'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 60px);\r\n  position: relative;\r\n  padding-bottom: 60px;\r\n`\r\n\r\nconst Footer = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nexport default function ManageTokens({\r\n  setModalView,\r\n  setImportToken,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n  }, [])\r\n\r\n  // if they input an address, use it\r\n  const searchToken = useToken(searchQuery)\r\n\r\n  // all tokens for local list\r\n  const userAddedTokens: Token[] = useUserAddedTokens()\r\n  const removeToken = useRemoveUserAddedToken()\r\n\r\n  const handleRemoveAll = useCallback(() => {\r\n    if (chainId && userAddedTokens) {\r\n      userAddedTokens.map((token) => {\r\n        return removeToken(chainId, token.address)\r\n      })\r\n    }\r\n  }, [removeToken, userAddedTokens, chainId])\r\n\r\n  const tokenList = useMemo(() => {\r\n    return (\r\n      chainId &&\r\n      userAddedTokens.map((token) => (\r\n        <RowBetween key={token.address} width=\"100%\">\r\n          <RowFixed>\r\n            <CurrencyLogo currency={token} size=\"20px\" />\r\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\r\n              {token.symbol}\r\n            </Link>\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\r\n          </RowFixed>\r\n        </RowBetween>\r\n      ))\r\n    )\r\n  }, [userAddedTokens, chainId, removeToken])\r\n\r\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Column style={{ width: '100%', flex: '1 1' }}>\r\n        <AutoColumn gap=\"14px\">\r\n          <Row>\r\n            <Input\r\n              id=\"token-search-input\"\r\n              scale=\"lg\"\r\n              placeholder=\"0x0000\"\r\n              value={searchQuery}\r\n              autoComplete=\"off\"\r\n              ref={inputRef as RefObject<HTMLInputElement>}\r\n              onChange={handleInput}\r\n              isWarning={!isAddressValid}\r\n            />\r\n          </Row>\r\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\r\n          {searchToken && (\r\n            <ImportRow\r\n              token={searchToken}\r\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\r\n              setImportToken={setImportToken}\r\n              style={{ height: 'fit-content' }}\r\n            />\r\n          )}\r\n        </AutoColumn>\r\n        {tokenList}\r\n        <Footer>\r\n          <Text bold color=\"textSubtle\">\r\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\r\n          </Text>\r\n          {userAddedTokens.length > 0 && (\r\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\r\n              {t('Clear all')}\r\n            </Button>\r\n          )}\r\n        </Footer>\r\n      </Column>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ManageLists from './ManageLists'\r\nimport ManageTokens from './ManageTokens'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst StyledButtonMenu = styled(ButtonMenu)`\r\n  width: 100%;\r\n`\r\n\r\nexport default function Manage({\r\n  setModalView,\r\n  setImportList,\r\n  setImportToken,\r\n  setListUrl,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportToken: (token: Token) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  const [showLists, setShowLists] = useState(true)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalBody>\r\n      <StyledButtonMenu\r\n        activeIndex={showLists ? 0 : 1}\r\n        onItemClick={() => setShowLists((prev) => !prev)}\r\n        scale=\"sm\"\r\n        variant=\"subtle\"\r\n        mb=\"32px\"\r\n      >\r\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\r\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\r\n      </StyledButtonMenu>\r\n      {showLists ? (\r\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\r\n      ) : (\r\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\r\n      )}\r\n    </ModalBody>\r\n  )\r\n}\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\r\nimport Card from 'components/Card'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ListLogo } from 'components/Logo'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from 'state'\r\nimport useFetchListCallback from 'hooks/useFetchListCallback'\r\nimport { removeList, enableList } from 'state/lists/actions'\r\nimport { useAllLists } from 'state/lists/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ImportProps {\r\n  listURL: string\r\n  list: TokenList\r\n  onImport: () => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`\r\n\r\nconst TextDot = styled.div`\r\n  height: 3px;\r\n  width: 3px;\r\n  background-color: ${({ theme }) => theme.colors.text};\r\n  border-radius: 50%;\r\n`\r\n\r\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\r\n  const { theme } = useTheme()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // user must accept\r\n  const [confirmed, setConfirmed] = useState(false)\r\n\r\n  const lists = useAllLists()\r\n  const fetchList = useFetchListCallback()\r\n\r\n  // monitor is list is loading\r\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\r\n  const [addError, setAddError] = useState<string | null>(null)\r\n\r\n  const handleAddList = useCallback(() => {\r\n    if (adding) return\r\n    setAddError(null)\r\n    fetchList(listURL)\r\n      .then(() => {\r\n        dispatch(enableList(listURL))\r\n        onImport()\r\n      })\r\n      .catch((error) => {\r\n        setAddError(error.message)\r\n        dispatch(removeList(listURL))\r\n      })\r\n  }, [adding, dispatch, fetchList, listURL, onImport])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"md\">\r\n        <AutoColumn gap=\"md\">\r\n          <Card padding=\"12px 20px\">\r\n            <RowBetween>\r\n              <RowFixed>\r\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\r\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\r\n                  <RowFixed>\r\n                    <Text bold mr=\"6px\">\r\n                      {list.name}\r\n                    </Text>\r\n                    <TextDot />\r\n                    <Text small color=\"textSubtle\" ml=\"6px\">\r\n                      {list.tokens.length} tokens\r\n                    </Text>\r\n                  </RowFixed>\r\n                  <Link\r\n                    small\r\n                    external\r\n                    ellipsis\r\n                    maxWidth=\"90%\"\r\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\r\n                  >\r\n                    {listURL}\r\n                  </Link>\r\n                </AutoColumn>\r\n              </RowFixed>\r\n            </RowBetween>\r\n          </Card>\r\n\r\n          <Message variant=\"danger\">\r\n            <Flex flexDirection=\"column\">\r\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\r\n                {t('Import at your own risk')}\r\n              </Text>\r\n              <Text color={theme.colors.failure} mb=\"8px\">\r\n                {t(\r\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\r\n                )}\r\n              </Text>\r\n              <Text bold color={theme.colors.failure} mb=\"16px\">\r\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\r\n              </Text>\r\n              <Flex alignItems=\"center\">\r\n                <Checkbox\r\n                  name=\"confirmed\"\r\n                  type=\"checkbox\"\r\n                  checked={confirmed}\r\n                  onChange={() => setConfirmed(!confirmed)}\r\n                  scale=\"sm\"\r\n                />\r\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\r\n                  {t('I understand')}\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </Message>\r\n\r\n          <Button disabled={!confirmed} onClick={handleAddList}>\r\n            {t('Import')}\r\n          </Button>\r\n          {addError ? (\r\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n              {addError}\r\n            </Text>\r\n          ) : null}\r\n        </AutoColumn>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ImportList\r\n","import React, { useCallback, useState } from 'react'\r\nimport { Currency, Token } from '@pancakeswap/sdk'\r\nimport {\r\n  ModalContainer,\r\n  ModalHeader,\r\n  ModalTitle,\r\n  ModalBackButton,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  InjectedModalProps,\r\n  Heading,\r\n  Button,\r\n} from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport usePrevious from 'hooks/usePreviousValue'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CurrencySearch from './CurrencySearch'\r\nimport ImportToken from './ImportToken'\r\nimport Manage from './Manage'\r\nimport ImportList from './ImportList'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst Footer = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  text-align: center;\r\n`\r\n\r\nconst StyledModalContainer = styled(ModalContainer)`\r\n  max-width: 420px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledModalBody = styled(ModalBody)`\r\n  padding: 24px;\r\n`\r\n\r\ninterface CurrencySearchModalProps extends InjectedModalProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencySearchModal({\r\n  onDismiss = () => null,\r\n  onCurrencySelect,\r\n  selectedCurrency,\r\n  otherSelectedCurrency,\r\n  showCommonBases = false,\r\n}: CurrencySearchModalProps) {\r\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onDismiss()\r\n      onCurrencySelect(currency)\r\n    },\r\n    [onDismiss, onCurrencySelect],\r\n  )\r\n\r\n  // for token import view\r\n  const prevView = usePrevious(modalView)\r\n\r\n  // used for import token flow\r\n  const [importToken, setImportToken] = useState<Token | undefined>()\r\n\r\n  // used for import list\r\n  const [importList, setImportList] = useState<TokenList | undefined>()\r\n  const [listURL, setListUrl] = useState<string | undefined>()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const config = {\r\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\r\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\r\n    [CurrencyModalView.importToken]: {\r\n      title: t('Import Tokens'),\r\n      onBack: () =>\r\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\r\n    },\r\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\r\n  }\r\n\r\n  return (\r\n    <StyledModalContainer minWidth=\"320px\">\r\n      <ModalHeader>\r\n        <ModalTitle>\r\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\r\n          <Heading>{config[modalView].title}</Heading>\r\n        </ModalTitle>\r\n        <ModalCloseButton onDismiss={onDismiss} />\r\n      </ModalHeader>\r\n      <StyledModalBody>\r\n        {modalView === CurrencyModalView.search ? (\r\n          <CurrencySearch\r\n            onCurrencySelect={handleCurrencySelect}\r\n            selectedCurrency={selectedCurrency}\r\n            otherSelectedCurrency={otherSelectedCurrency}\r\n            showCommonBases={showCommonBases}\r\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\r\n            setImportToken={setImportToken}\r\n          />\r\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\r\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\r\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\r\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\r\n        ) : modalView === CurrencyModalView.manage ? (\r\n          <Manage\r\n            setModalView={setModalView}\r\n            setImportToken={setImportToken}\r\n            setImportList={setImportList}\r\n            setListUrl={setListUrl}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {modalView === CurrencyModalView.search && (\r\n          <Footer>\r\n            <Button\r\n              scale=\"sm\"\r\n              variant=\"text\"\r\n              onClick={() => setModalView(CurrencyModalView.manage)}\r\n              className=\"list-token-manage-button\"\r\n            >\r\n              {t('')}\r\n            </Button>\r\n          </Footer>\r\n        )}\r\n      </StyledModalBody>\r\n    </StyledModalContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport Container from '../Layout/Container'\r\n\r\nconst Outer = styled(Box)<{ background?: string }>`\r\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst Inner = styled(Container)`\r\n  padding-top: 32px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\r\n  <Outer background={background} {...props}>\r\n    <Inner>{children}</Inner>\r\n  </Outer>\r\n)\r\n\r\nexport default PageHeader\r\n","import { useAllLists } from 'state/lists/hooks'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\nimport { useCallback, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useAllInactiveTokens } from 'hooks/Tokens'\r\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport useFetchListCallback from 'hooks/useFetchListCallback'\r\nimport useInterval from 'hooks/useInterval'\r\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\r\nimport { AppDispatch } from '../index'\r\nimport { acceptListUpdate } from './actions'\r\nimport { useActiveListUrls } from './hooks'\r\n\r\nexport default function Updater(): null {\r\n  const { library } = useWeb3Provider()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const isWindowVisible = useIsWindowVisible()\r\n\r\n  // get all loaded lists, and the active urls\r\n  const lists = useAllLists()\r\n  const activeListUrls = useActiveListUrls()\r\n\r\n  // initiate loading\r\n  useAllInactiveTokens()\r\n\r\n  const fetchList = useFetchListCallback()\r\n  const fetchAllListsCallback = useCallback(() => {\r\n    if (!isWindowVisible) return\r\n    Object.keys(lists).forEach((url) =>\r\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\r\n    )\r\n  }, [fetchList, isWindowVisible, lists])\r\n\r\n  // fetch all lists every 10 minutes, but only after we initialize library\r\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\r\n\r\n  // whenever a list is not loaded and not loading, try again to load it\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (!list.current && !list.loadingRequestId && !list.error) {\r\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\r\n      }\r\n    })\r\n  }, [dispatch, fetchList, library, lists])\r\n\r\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\r\n  useEffect(() => {\r\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\r\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\r\n      }\r\n    })\r\n  }, [dispatch, fetchList, library, lists])\r\n\r\n  // automatically update lists if versions are minor/patch\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (list.current && list.pendingUpdate) {\r\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\r\n        // eslint-disable-next-line default-case\r\n        switch (bump) {\r\n          case VersionUpgrade.NONE:\r\n            throw new Error('unexpected no version bump')\r\n          // update any active or inactive lists\r\n          case VersionUpgrade.PATCH:\r\n          case VersionUpgrade.MINOR:\r\n          case VersionUpgrade.MAJOR:\r\n            dispatch(acceptListUpdate(listUrl))\r\n        }\r\n      }\r\n    })\r\n  }, [dispatch, lists, activeListUrls])\r\n\r\n  return null\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const { current } = savedCallback\r\n      if (current) {\r\n        current()\r\n      }\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","/* eslint-disable */\r\n\r\nfunction wait(ms: number): Promise<void> {\r\n  return new Promise((resolve) => setTimeout(resolve, ms))\r\n}\r\n\r\nfunction waitRandom(min: number, max: number): Promise<void> {\r\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\r\n}\r\n\r\n/**\r\n * This error is thrown if the function is cancelled before completing\r\n */\r\nexport class CancelledError extends Error {\r\n  constructor() {\r\n    super('Cancelled')\r\n  }\r\n}\r\n\r\n/**\r\n * Throw this error if the function should retry\r\n */\r\nexport class RetryableError extends Error {}\r\n\r\n/**\r\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\r\n * @param fn function to retry\r\n * @param n how many times to retry\r\n * @param minWait min wait between retries in ms\r\n * @param maxWait max wait between retries in ms\r\n */\r\nexport function retry<T>(\r\n  fn: () => Promise<T>,\r\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\r\n): { promise: Promise<T>; cancel: () => void } {\r\n  let completed = false\r\n  let rejectCancelled: (error: Error) => void\r\n  const promise = new Promise<T>(async (resolve, reject) => {\r\n    rejectCancelled = reject\r\n    while (true) {\r\n      let result: T\r\n      try {\r\n        result = await fn()\r\n        if (!completed) {\r\n          resolve(result)\r\n          completed = true\r\n        }\r\n        break\r\n      } catch (error) {\r\n        if (completed) {\r\n          break\r\n        }\r\n        if (n <= 0 || !(error instanceof RetryableError)) {\r\n          reject(error)\r\n          completed = true\r\n          break\r\n        }\r\n        n--\r\n      }\r\n      await waitRandom(minWait, maxWait)\r\n    }\r\n  })\r\n  return {\r\n    promise,\r\n    cancel: () => {\r\n      if (completed) return\r\n      completed = true\r\n      rejectCancelled(new CancelledError())\r\n    },\r\n  }\r\n}\r\n\r\n/* eslint-enable */\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useMulticallContract } from '../../hooks/useContract'\r\nimport useDebounce from '../../hooks/useDebounce'\r\nimport { CancelledError, retry, RetryableError } from './retry'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  Call,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  parseCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\nimport chunkArray from './chunkArray'\r\n\r\n// chunk calls so we do not exceed the gas limit\r\nconst CALL_CHUNK_SIZE = 500\r\n\r\n/**\r\n * Fetches a chunk of calls, enforcing a minimum block number constraint\r\n * @param multicallContract multicall contract to fetch against\r\n * @param chunk chunk of calls to make\r\n * @param minBlockNumber minimum block number of the result set\r\n */\r\nasync function fetchChunk(\r\n  multicallContract: Contract,\r\n  chunk: Call[],\r\n  minBlockNumber: number,\r\n): Promise<{ results: string[]; blockNumber: number }> {\r\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\r\n  let resultsBlockNumber\r\n  let returnData\r\n  try {\r\n    // prettier-ignore\r\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\r\n      chunk.map((obj) => [obj.address, obj.callData])\r\n    )\r\n  } catch (error) {\r\n    console.debug('Failed to fetch chunk inside retry', error)\r\n    throw error\r\n  }\r\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\r\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\r\n    throw new RetryableError('Fetched for old block number')\r\n  }\r\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\r\n}\r\n\r\n/**\r\n * From the current all listeners state, return each call key mapped to the\r\n * minimum number of blocks per fetch. This is how often each key must be fetched.\r\n * @param allListeners the all listeners state\r\n * @param chainId the current chain id\r\n */\r\nexport function activeListeningKeys(\r\n  allListeners: AppState['multicall']['callListeners'],\r\n  chainId?: number,\r\n): { [callKey: string]: number } {\r\n  if (!allListeners || !chainId) return {}\r\n  const listeners = allListeners[chainId]\r\n  if (!listeners) return {}\r\n\r\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\r\n    const keyListeners = listeners[callKey]\r\n\r\n    memo[callKey] = Object.keys(keyListeners)\r\n      .filter((key) => {\r\n        const blocksPerFetch = parseInt(key)\r\n        if (blocksPerFetch <= 0) return false\r\n        return keyListeners[blocksPerFetch] > 0\r\n      })\r\n      .reduce((previousMin, current) => {\r\n        return Math.min(previousMin, parseInt(current))\r\n      }, Infinity)\r\n    return memo\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Return the keys that need to be refetched\r\n * @param callResults current call result state\r\n * @param listeningKeys each call key mapped to how old the data can be in blocks\r\n * @param chainId the current chain id\r\n * @param currentBlock the latest block number\r\n */\r\nexport function outdatedListeningKeys(\r\n  callResults: AppState['multicall']['callResults'],\r\n  listeningKeys: { [callKey: string]: number },\r\n  chainId: number | undefined,\r\n  currentBlock: number | undefined,\r\n): string[] {\r\n  if (!chainId || !currentBlock) return []\r\n  const results = callResults[chainId]\r\n  // no results at all, load everything\r\n  if (!results) return Object.keys(listeningKeys)\r\n\r\n  return Object.keys(listeningKeys).filter((callKey) => {\r\n    const blocksPerFetch = listeningKeys[callKey]\r\n\r\n    const data = callResults[chainId][callKey]\r\n    // no data, must fetch\r\n    if (!data) return true\r\n\r\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\r\n\r\n    // already fetching it for a recent enough block, don't refetch it\r\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\r\n\r\n    // if data is older than minDataBlockNumber, fetch it\r\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\r\n  })\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\r\n  // wait for listeners to settle before triggering updates\r\n  const debouncedListeners = useDebounce(state.callListeners, 100)\r\n  const { currentBlock } = useBlock()\r\n  const { chainId } = useActiveWeb3React()\r\n  const multicallContract = useMulticallContract()\r\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\r\n\r\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\r\n    return activeListeningKeys(debouncedListeners, chainId)\r\n  }, [debouncedListeners, chainId])\r\n\r\n  const unserializedOutdatedCallKeys = useMemo(() => {\r\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\r\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\r\n\r\n  const serializedOutdatedCallKeys = useMemo(\r\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\r\n    [unserializedOutdatedCallKeys],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!currentBlock || !chainId || !multicallContract) return\r\n\r\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\r\n    if (outdatedCallKeys.length === 0) return\r\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\r\n\r\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\r\n\r\n    if (cancellations.current?.blockNumber !== currentBlock) {\r\n      cancellations.current?.cancellations?.forEach((c) => c())\r\n    }\r\n\r\n    dispatch(\r\n      fetchingMulticallResults({\r\n        calls,\r\n        chainId,\r\n        fetchingBlockNumber: currentBlock,\r\n      }),\r\n    )\r\n\r\n    cancellations.current = {\r\n      blockNumber: currentBlock,\r\n      cancellations: chunkedCalls.map((chunk, index) => {\r\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\r\n          n: Infinity,\r\n          minWait: 2500,\r\n          maxWait: 3500,\r\n        })\r\n        promise\r\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\r\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\r\n\r\n            // accumulates the length of all previous indices\r\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\r\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\r\n\r\n            dispatch(\r\n              updateMulticallResults({\r\n                chainId,\r\n                results: outdatedCallKeys\r\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\r\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\r\n                    memo[callKey] = returnData[i] ?? null\r\n                    return memo\r\n                  }, {}),\r\n                blockNumber: fetchBlockNumber,\r\n              }),\r\n            )\r\n          })\r\n          .catch((error: any) => {\r\n            if (error instanceof CancelledError) {\r\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\r\n              return\r\n            }\r\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\r\n            dispatch(\r\n              errorFetchingMulticallResults({\r\n                calls: chunk,\r\n                chainId,\r\n                fetchingBlockNumber: currentBlock,\r\n              }),\r\n            )\r\n          })\r\n        return cancel\r\n      }),\r\n    }\r\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\r\n\r\n  return null\r\n}\r\n","// chunks array into chunks of maximum size\r\n// evenly distributes items among the chunks\r\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\r\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\r\n  if (items.length <= maxChunkSize) return [items]\r\n\r\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\r\n  const chunkSize = Math.ceil(items.length / numChunks)\r\n\r\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { checkedTransaction, finalizeTransaction } from './actions'\r\n\r\nexport function shouldCheck(\r\n  currentBlock: number,\r\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\r\n): boolean {\r\n  if (tx.receipt) return false\r\n  if (!tx.lastCheckedBlockNumber) return true\r\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\r\n  if (blocksSinceCheck < 1) return false\r\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\r\n  if (minutesPending > 60) {\r\n    // every 10 blocks if pending for longer than an hour\r\n    return blocksSinceCheck > 9\r\n  }\r\n  if (minutesPending > 5) {\r\n    // every 3 blocks if pending more than 5 minutes\r\n    return blocksSinceCheck > 2\r\n  }\r\n  // otherwise every block\r\n  return true\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const { library, chainId } = useActiveWeb3React()\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\r\n\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  useEffect(() => {\r\n    if (!chainId || !library || !currentBlock) return\r\n\r\n    Object.keys(transactions)\r\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\r\n      .forEach((hash) => {\r\n        library\r\n          .getTransactionReceipt(hash)\r\n          .then((receipt) => {\r\n            if (receipt) {\r\n              dispatch(\r\n                finalizeTransaction({\r\n                  chainId,\r\n                  hash,\r\n                  receipt: {\r\n                    blockHash: receipt.blockHash,\r\n                    blockNumber: receipt.blockNumber,\r\n                    contractAddress: receipt.contractAddress,\r\n                    from: receipt.from,\r\n                    status: receipt.status,\r\n                    to: receipt.to,\r\n                    transactionHash: receipt.transactionHash,\r\n                    transactionIndex: receipt.transactionIndex,\r\n                  },\r\n                }),\r\n              )\r\n\r\n              const toast = receipt.status === 1 ? toastSuccess : toastError\r\n              toast(\r\n                'Transaction receipt',\r\n                <Flex flexDirection=\"column\">\r\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\r\n                  {chainId && (\r\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\r\n                      View on BscScan\r\n                    </Link>\r\n                  )}\r\n                </Flex>,\r\n              )\r\n            } else {\r\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(`failed to check transaction hash: ${hash}`, error)\r\n          })\r\n      })\r\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError])\r\n\r\n  return null\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  CloseIcon,\r\n  Heading,\r\n  IconButton,\r\n  InjectedModalProps,\r\n  ModalBody,\r\n  ModalContainer,\r\n  ModalHeader as UIKitModalHeader,\r\n  ModalTitle,\r\n} from '@pancakeswap/uikit'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport WalletInfo from './WalletInfo'\r\nimport WalletTransactions from './WalletTransactions'\r\n\r\nexport enum WalletView {\r\n  WALLET_INFO,\r\n  TRANSACTIONS,\r\n}\r\n\r\ninterface WalletModalProps extends InjectedModalProps {\r\n  initialView?: WalletView\r\n}\r\n\r\nexport const LOW_BNB_BALANCE = parseUnits('2', 'gwei')\r\n\r\nconst ModalHeader = styled(UIKitModalHeader)`\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst Tabs = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\r\n  const [view, setView] = useState(initialView)\r\n  const { t } = useTranslation()\r\n  const { balance, fetchStatus } = useGetBnbBalance()\r\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\r\n\r\n  const handleClick = (newIndex: number) => {\r\n    setView(newIndex)\r\n  }\r\n\r\n  return (\r\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\r\n      <ModalHeader>\r\n        <ModalTitle>\r\n          <Heading>{t('Your Wallet')}</Heading>\r\n        </ModalTitle>\r\n        <IconButton variant=\"text\" onClick={onDismiss}>\r\n          <CloseIcon width=\"24px\" color=\"text\" />\r\n        </IconButton>\r\n      </ModalHeader>\r\n      <Tabs>\r\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\r\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\r\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\r\n        </ButtonMenu>\r\n      </Tabs>\r\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\r\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\r\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\r\n      </ModalBody>\r\n    </ModalContainer>\r\n  )\r\n}\r\n\r\nexport default WalletModal\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst _binanceChainListener = async () =>\r\n  new Promise<void>((resolve) =>\r\n    Object.defineProperty(window, 'BinanceChain', {\r\n      get() {\r\n        return this.bsc\r\n      },\r\n      set(bsc) {\r\n        this.bsc = bsc\r\n\r\n        resolve()\r\n      },\r\n    }),\r\n  )\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    if (connectorId) {\r\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\r\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\r\n\r\n      // Currently BSC extension doesn't always inject in time.\r\n      // We must check to see if it exists, and if not, wait for it before proceeding.\r\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\r\n        _binanceChainListener().then(() => login(connectorId))\r\n\r\n        return\r\n      }\r\n\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledDatePickerPortal = styled.div`\r\n  .react-datepicker-wrapper,\r\n  .react-datepicker__input-container {\r\n    display: block;\r\n  }\r\n\r\n  .react-datepicker {\r\n    background: ${({ theme }) => theme.card.background};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n    color: ${({ theme }) => theme.colors.text};\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n\r\n  .react-datepicker__header {\r\n    background: ${({ theme }) => theme.colors.input};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker__current-month,\r\n  .react-datepicker-time__header,\r\n  .react-datepicker-year-header,\r\n  .react-datepicker__day-name,\r\n  .react-datepicker__day,\r\n  .react-datepicker__time-name {\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n\r\n  .react-datepicker__day:hover,\r\n  .react-datepicker__month-text:hover,\r\n  .react-datepicker__quarter-text:hover,\r\n  .react-datepicker__year-text:hover {\r\n    background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\r\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\r\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker__day--selected,\r\n  .react-datepicker__day--in-selecting-range,\r\n  .react-datepicker__day--in-range,\r\n  .react-datepicker__month-text--selected,\r\n  .react-datepicker__month-text--in-selecting-range,\r\n  .react-datepicker__month-text--in-range,\r\n  .react-datepicker__quarter-text--selected,\r\n  .react-datepicker__quarter-text--in-selecting-range,\r\n  .react-datepicker__quarter-text--in-range,\r\n  .react-datepicker__year-text--selected,\r\n  .react-datepicker__year-text--in-selecting-range,\r\n  .react-datepicker__year-text--in-range {\r\n    background-color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  .react-datepicker__day--selected:hover,\r\n  .react-datepicker__day--in-selecting-range:hover,\r\n  .react-datepicker__day--in-range:hover,\r\n  .react-datepicker__month-text--selected:hover,\r\n  .react-datepicker__month-text--in-selecting-range:hover,\r\n  .react-datepicker__month-text--in-range:hover,\r\n  .react-datepicker__quarter-text--selected:hover,\r\n  .react-datepicker__quarter-text--in-selecting-range:hover,\r\n  .react-datepicker__quarter-text--in-range:hover,\r\n  .react-datepicker__year-text--selected:hover,\r\n  .react-datepicker__year-text--in-selecting-range:hover,\r\n  .react-datepicker__year-text--in-range:hover {\r\n    background-color: ${({ theme }) => theme.colors.primaryBright};\r\n  }\r\n\r\n  .react-datepicker__day--keyboard-selected,\r\n  .react-datepicker__month-text--keyboard-selected,\r\n  .react-datepicker__quarter-text--keyboard-selected,\r\n  .react-datepicker__year-text--keyboard-selected {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: #ffffff;\r\n  }\r\n\r\n  .react-datepicker__day--keyboard-selected:hover,\r\n  .react-datepicker__month-text--keyboard-selected:hover,\r\n  .react-datepicker__quarter-text--keyboard-selected:hover,\r\n  .react-datepicker__year-text--keyboard-selected:hover {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: #ffffff;\r\n  }\r\n\r\n  .react-datepicker__time-container,\r\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\r\n    width: 120px;\r\n  }\r\n\r\n  .react-datepicker__header--time {\r\n    padding: 8px;\r\n  }\r\n\r\n  .react-datepicker__time-container\r\n    .react-datepicker__time\r\n    .react-datepicker__time-box\r\n    ul.react-datepicker__time-list\r\n    li.react-datepicker__time-list-item {\r\n    height: auto;\r\n    padding: 8px;\r\n  }\r\n`\r\n\r\nconst DatePickerPortal = () => {\r\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\r\n}\r\n\r\nexport default DatePickerPortal\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { MenuEntry } from '@pancakeswap/uikit'\r\nimport { ContextApi } from 'contexts/Localization/types'\r\n\r\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\r\n  {\r\n    label: t('Home'),\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: t('Swap'),\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: t('Exchange'),\r\n        href: '/swap',\r\n      },\r\n      {\r\n        label: t('Liquidity'),\r\n        href: '/liquidity',\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    label: t('More'),\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: t('Our Partners'),\r\n        href: '#',\r\n      },\r\n      {\r\n        label: t('CoinMarketCap'),\r\n        href: 'https://coinmarketcap.com/',\r\n      },\r\n      {\r\n        label: t('Github'),\r\n        href: 'https://github.com/',\r\n      },\r\n      {\r\n        label: t('WhitePaper'),\r\n        href: '#',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React, { useState } from 'react'\r\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface CopyAddressProps extends FlexProps {\r\n  account: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n  border-radius: 16px;\r\n  position: relative;\r\n`\r\n\r\nconst Address = styled.div`\r\n  flex: 1;\r\n  position: relative;\r\n  padding-left: 16px;\r\n\r\n  & > input {\r\n    background: transparent;\r\n    border: 0;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    display: block;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    padding: 0;\r\n    width: 100%;\r\n\r\n    &:focus {\r\n      outline: 0;\r\n    }\r\n  }\r\n\r\n  &:after {\r\n    background: linear-gradient(\r\n      to right,\r\n      ${({ theme }) => theme.colors.background}00,\r\n      ${({ theme }) => theme.colors.background}E6\r\n    );\r\n    content: '';\r\n    height: 100%;\r\n    pointer-events: none;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    width: 40px;\r\n  }\r\n`\r\n\r\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\r\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\r\n  position: absolute;\r\n  padding: 8px;\r\n  top: -38px;\r\n  right: 0;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.colors.contrast};\r\n  color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: 16px;\r\n  opacity: 0.7;\r\n  width: 100px;\r\n`\r\n\r\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\r\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\r\n  const { t } = useTranslation()\r\n\r\n  const copyAddress = () => {\r\n    if (navigator.clipboard && navigator.permissions) {\r\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\r\n    } else if (document.queryCommandSupported('copy')) {\r\n      const ele = document.createElement('textarea')\r\n      ele.value = account\r\n      document.body.appendChild(ele)\r\n      ele.select()\r\n      document.execCommand('copy')\r\n      document.body.removeChild(ele)\r\n      displayTooltip()\r\n    }\r\n  }\r\n\r\n  function displayTooltip() {\r\n    setIsTooltipDisplayed(true)\r\n    setTimeout(() => {\r\n      setIsTooltipDisplayed(false)\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <Box position=\"relative\" {...props}>\r\n      <Wrapper>\r\n        <Address title={account}>\r\n          <input type=\"text\" readOnly value={account} />\r\n        </Address>\r\n        <IconButton variant=\"text\" onClick={copyAddress}>\r\n          <CopyIcon color=\"primary\" width=\"24px\" />\r\n        </IconButton>\r\n      </Wrapper>\r\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CopyAddress\r\n","import React from 'react'\r\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTokenBalance, { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBscScanLink } from 'utils'\r\nimport { getFullDisplayBalance, formatBigNumber } from 'utils/formatBalance'\r\nimport tokens from 'config/constants/tokens'\r\nimport CopyAddress from './CopyAddress'\r\n\r\ninterface WalletInfoProps {\r\n  hasLowBnbBalance: boolean\r\n  onDismiss: InjectedModalProps['onDismiss']\r\n}\r\n\r\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { balance, fetchStatus } = useGetBnbBalance()\r\n  const { balance: cakeBalance, fetchStatus: cakeFetchStatus } = useTokenBalance(tokens.cake.address)\r\n  const { logout } = useAuth()\r\n\r\n  const handleLogout = () => {\r\n    onDismiss()\r\n    logout()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\r\n        {t('Your Address')}\r\n      </Text>\r\n      <CopyAddress account={account} mb=\"24px\" />\r\n      {hasLowBnbBalance && (\r\n        <Message variant=\"warning\" mb=\"24px\">\r\n          <Box>\r\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\r\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\r\n          </Box>\r\n        </Message>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\r\n        {fetchStatus !== FetchStatus.SUCCESS ? (\r\n          <Skeleton height=\"22px\" width=\"60px\" />\r\n        ) : (\r\n          <Text>{formatBigNumber(balance, 6)}</Text>\r\n        )}\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text color=\"textSubtle\">{t('CAKE Balance')}</Text>\r\n        {cakeFetchStatus !== FetchStatus.SUCCESS ? (\r\n          <Skeleton height=\"22px\" width=\"60px\" />\r\n        ) : (\r\n          <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\r\n        )}\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\r\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BscScan')}</LinkExternal>\r\n      </Flex>\r\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\r\n        {t('Disconnect Wallet')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WalletInfo\r\n","import React from 'react'\r\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\n\r\ninterface TransactionRowProps {\r\n  txn: TransactionDetails\r\n}\r\n\r\nconst TxnIcon = styled(Flex)`\r\n  align-items: center;\r\n  flex: none;\r\n  width: 24px;\r\n`\r\n\r\nconst Summary = styled.div`\r\n  flex: 1;\r\n  padding: 0 8px;\r\n`\r\n\r\nconst TxnLink = styled(Link)`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst renderIcon = (txn: TransactionDetails) => {\r\n  if (!txn.receipt) {\r\n    return <RefreshIcon spin width=\"24px\" />\r\n  }\r\n\r\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\r\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\r\n  ) : (\r\n    <BlockIcon color=\"failure\" width=\"24px\" />\r\n  )\r\n}\r\n\r\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  if (!txn) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\r\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\r\n      <Summary>{txn.summary ?? txn.hash}</Summary>\r\n      <TxnIcon>\r\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\r\n      </TxnIcon>\r\n    </TxnLink>\r\n  )\r\n}\r\n\r\nexport default TransactionRow\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\r\nimport { AppDispatch } from 'state'\r\nimport { useAllTransactions } from 'state/transactions/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { clearAllTransactions } from 'state/transactions/actions'\r\nimport { orderBy } from 'lodash'\r\nimport TransactionRow from './TransactionRow'\r\n\r\nconst WalletTransactions: React.FC = () => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { t } = useTranslation()\r\n  const allTransactions = useAllTransactions()\r\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\r\n\r\n  const handleClearAll = () => {\r\n    if (chainId) {\r\n      dispatch(clearAllTransactions({ chainId }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box minHeight=\"120px\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\r\n          {t('Recent Transactions')}\r\n        </Text>\r\n        {sortedTransactions.length > 0 && (\r\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\r\n            {t('Clear all')}\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n      {sortedTransactions.length > 0 ? (\r\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\r\n      ) : (\r\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default WalletTransactions\r\n","import { useEffect, useReducer, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\r\n\r\n/**\r\n * This hook is handling all the calculator state and calculations.\r\n * UI connected to it is merely representation of the data and buttons to trigger actions\r\n */\r\n\r\n// Mapping from the compounding frequency button index to actual compounding frequency\r\n// in number of compounds per day\r\nconst compoundingIndexToFrequency = {\r\n  0: 1,\r\n  1: 0.142857142,\r\n  2: 0.071428571, // once every 7 days\r\n  3: 0.033333333, // once every 30 days\r\n}\r\n\r\nconst TOKEN_PRECISION = 10\r\nconst USD_PRECISION = 2\r\n\r\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\r\nexport enum EditingCurrency {\r\n  TOKEN,\r\n  USD,\r\n}\r\n\r\n// Calculator works in 2 modes\r\nexport enum CalculatorMode {\r\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\r\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\r\n}\r\n\r\nexport interface RoiCalculatorReducerState {\r\n  controls: {\r\n    compounding: boolean // Compounding checkbox state\r\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\r\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\r\n    stakingDuration: number // index of active staking duration button in ButtonMenu\r\n    mode: CalculatorMode\r\n    editingCurrency: EditingCurrency\r\n  }\r\n  data: {\r\n    principalAsToken: string // Used as value for Inputs\r\n    principalAsUSD: string // Used as value for Inputs\r\n    roiUSD: number\r\n    roiTokens: number\r\n    roiPercentage: number // ROI expressed in percentage relative to principal\r\n  }\r\n}\r\n\r\nconst initialState: RoiCalculatorReducerState = {\r\n  controls: {\r\n    compounding: true,\r\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\r\n    activeCompoundingIndex: 0, // active compounding selected in\r\n    stakingDuration: 3,\r\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\r\n    editingCurrency: EditingCurrency.USD,\r\n  },\r\n  data: {\r\n    principalAsToken: '0.00',\r\n    principalAsUSD: '',\r\n    roiUSD: 0,\r\n    roiTokens: 0,\r\n    roiPercentage: 0,\r\n  },\r\n}\r\n\r\nconst roiCalculatorReducer = (\r\n  state: RoiCalculatorReducerState,\r\n  action: { type: string; payload?: any },\r\n): RoiCalculatorReducerState => {\r\n  switch (action.type) {\r\n    case 'setStakingDuration': {\r\n      const controls = { ...state.controls, stakingDuration: action.payload }\r\n      return {\r\n        ...state,\r\n        controls,\r\n      }\r\n    }\r\n    case 'toggleCompounding': {\r\n      const toggledCompounding = !state.controls.compounding\r\n      const controls = { ...state.controls, compounding: toggledCompounding }\r\n      return {\r\n        ...state,\r\n        controls,\r\n      }\r\n    }\r\n    case 'setCompoundingFrequency': {\r\n      const { index, autoCompoundFrequency } = action.payload\r\n      if (autoCompoundFrequency) {\r\n        return {\r\n          ...state,\r\n          controls: {\r\n            ...state.controls,\r\n            compoundingFrequency: autoCompoundFrequency,\r\n          },\r\n        }\r\n      }\r\n      const compoundingFrequency = compoundingIndexToFrequency[index]\r\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\r\n      return {\r\n        ...state,\r\n        controls,\r\n      }\r\n    }\r\n    case 'setPrincipal': {\r\n      const { principalAsUSD, principalAsToken } = action.payload\r\n      const data = { ...state.data, principalAsUSD, principalAsToken }\r\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\r\n      return {\r\n        controls,\r\n        data,\r\n      }\r\n    }\r\n    case 'setPrincipalForTargetRoi': {\r\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\r\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\r\n      return {\r\n        ...state,\r\n        data,\r\n      }\r\n    }\r\n    case 'setCalculatorMode': {\r\n      const mode = action.payload\r\n      const controls = { ...state.controls, mode }\r\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\r\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\r\n        const data = { ...state.data, roiUSD }\r\n        return { controls, data }\r\n      }\r\n      return { ...state, controls }\r\n    }\r\n    case 'setRoi': {\r\n      const data = { ...state.data, ...action.payload }\r\n      return { ...state, data }\r\n    }\r\n    case 'setTargetRoi': {\r\n      const { roiUSD, roiTokens } = action.payload\r\n      const data = { ...state.data, roiUSD, roiTokens }\r\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\r\n      return { controls, data }\r\n    }\r\n    case 'toggleEditingCurrency': {\r\n      const currencyAfterChange =\r\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\r\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\r\n      return { ...state, controls }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst useRoiCalculatorReducer = (\r\n  stakingTokenPrice: number,\r\n  earningTokenPrice: number,\r\n  apr: number,\r\n  autoCompoundFrequency: number,\r\n  performanceFee: number,\r\n) => {\r\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\r\n  const { principalAsUSD, roiUSD } = state.data\r\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\r\n\r\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\r\n  useEffect(() => {\r\n    if (autoCompoundFrequency > 0) {\r\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\r\n    }\r\n  }, [autoCompoundFrequency])\r\n\r\n  // Calculates and sets ROI whenever related values change\r\n  useEffect(() => {\r\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\r\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\r\n      const compoundFrequency = compounding ? compoundingFrequency : 0\r\n      const interestBreakdown = getInterestBreakdown({\r\n        principalInUSD: principalInUSDAsNumber,\r\n        apr,\r\n        earningTokenPrice,\r\n        compoundFrequency,\r\n        performanceFee,\r\n      })\r\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\r\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\r\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\r\n      const roiPercentage = hasInterest\r\n        ? getRoi({\r\n            amountEarned: roiAsUSD,\r\n            amountInvested: principalInUSDAsNumber,\r\n          })\r\n        : 0\r\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\r\n    }\r\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\r\n\r\n  // Calculates and sets principal based on expected ROI value\r\n  useEffect(() => {\r\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\r\n      const principalForExpectedRoi = getPrincipalForInterest(\r\n        roiUSD,\r\n        apr,\r\n        compounding ? compoundingFrequency : 0,\r\n        performanceFee,\r\n      )\r\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\r\n        ? principalForExpectedRoi[stakingDuration]\r\n        : 0\r\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\r\n      const roiPercentage = getRoi({\r\n        amountEarned: roiUSD,\r\n        amountInvested: principalUSD,\r\n      })\r\n      dispatch({\r\n        type: 'setPrincipalForTargetRoi',\r\n        payload: {\r\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\r\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\r\n          roiPercentage,\r\n        },\r\n      })\r\n    }\r\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\r\n\r\n  // Handler for compounding frequency buttons\r\n  const setCompoundingFrequency = (index: number) => {\r\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\r\n  }\r\n\r\n  // Handler for principal input when in USD mode\r\n  const setPrincipalFromUSDValue = (amount: string) => {\r\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\r\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\r\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\r\n  }\r\n\r\n  // Handler for principal input when in Token mode\r\n  const setPrincipalFromTokenValue = useCallback(\r\n    (amount: string) => {\r\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\r\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\r\n      dispatch({\r\n        type: 'setPrincipal',\r\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\r\n      })\r\n    },\r\n    [stakingTokenPrice],\r\n  )\r\n\r\n  // Handler for staking duration buttons\r\n  const setStakingDuration = (stakingDurationIndex: number) => {\r\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\r\n  }\r\n\r\n  // Handler for compounding checkbox\r\n  const toggleCompounding = () => {\r\n    dispatch({ type: 'toggleCompounding' })\r\n  }\r\n\r\n  // Handler for principal input mode switch\r\n  const toggleEditingCurrency = () => {\r\n    dispatch({ type: 'toggleEditingCurrency' })\r\n  }\r\n\r\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\r\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\r\n  }\r\n\r\n  // Handler for ROI input\r\n  const setTargetRoi = (amount: string) => {\r\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\r\n    dispatch({\r\n      type: 'setTargetRoi',\r\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\r\n    })\r\n  }\r\n\r\n  return {\r\n    state,\r\n    setPrincipalFromUSDValue,\r\n    setPrincipalFromTokenValue,\r\n    setStakingDuration,\r\n    toggleCompounding,\r\n    toggleEditingCurrency,\r\n    setCompoundingFrequency,\r\n    setCalculatorMode,\r\n    setTargetRoi,\r\n  }\r\n}\r\n\r\nexport default useRoiCalculatorReducer\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Skeleton, UserMenuItem } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport history from 'routerHistory'\r\n\r\ninterface ProfileUserMenuItemProps {\r\n  isLoading: boolean\r\n  hasProfile: boolean\r\n}\r\n\r\nconst Dot = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.failure};\r\n  border-radius: 50%;\r\n  height: 8px;\r\n  width: 8px;\r\n`\r\n\r\nconst ProfileUserMenuItem: React.FC<ProfileUserMenuItemProps> = ({ isLoading, hasProfile }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const handleClick = () => {\r\n    history.push('/profile')\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <UserMenuItem>\r\n        <Skeleton height=\"24px\" width=\"35%\" />\r\n      </UserMenuItem>\r\n    )\r\n  }\r\n\r\n  if (!hasProfile) {\r\n    return (\r\n      <UserMenuItem as=\"button\" onClick={handleClick}>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\r\n          {t('Make a Profile')}\r\n          <Dot />\r\n        </Flex>\r\n      </UserMenuItem>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <UserMenuItem as=\"button\" onClick={handleClick}>\r\n      {t('Your Profile')}\r\n    </UserMenuItem>\r\n  )\r\n}\r\n\r\nexport default ProfileUserMenuItem\r\n","import React from 'react'\r\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface WalletUserMenuItemProps {\r\n  hasLowBnbBalance: boolean\r\n  onPresentWalletModal: () => void\r\n}\r\n\r\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\r\n        {t('Wallet')}\r\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\r\n      </Flex>\r\n    </UserMenuItem>\r\n  )\r\n}\r\n\r\nexport default WalletUserMenuItem\r\n","import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport {\r\n  Flex,\r\n  LogoutIcon,\r\n  useModal,\r\n  UserMenu as UIKitUserMenu,\r\n  UserMenuDivider,\r\n  UserMenuItem,\r\n} from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\r\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\r\nimport WalletUserMenuItem from './WalletUserMenuItem'\r\n\r\nconst UserMenu = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { logout } = useAuth()\r\n  const { balance, fetchStatus } = useGetBnbBalance()\r\n  const { isInitialized, isLoading, profile } = useProfile()\r\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\r\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\r\n  const hasProfile = isInitialized && !!profile\r\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\r\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\r\n\r\n  if (!account) {\r\n    return <ConnectWalletButton scale=\"sm\" />\r\n  }\r\n\r\n  return (\r\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\r\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\r\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\r\n        {t('Transactions')}\r\n      </UserMenuItem>\r\n      <UserMenuDivider />\r\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} />\r\n      <UserMenuDivider />\r\n      <UserMenuItem as=\"button\" onClick={logout}>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\r\n          {t('Disconnect')}\r\n          <LogoutIcon />\r\n        </Flex>\r\n      </UserMenuItem>\r\n    </UIKitUserMenu>\r\n  )\r\n}\r\n\r\nexport default UserMenu\r\n","import React from 'react'\r\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\r\nimport { languageList } from 'config/localization/languages'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport config from './config'\r\nimport UserMenu from './UserMenu'\r\nimport GlobalSettings from './GlobalSettings'\r\n\r\nconst Menu = (props) => {\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const { profile } = useProfile()\r\n  const { currentLanguage, setLanguage, t } = useTranslation()\r\n\r\n  return (\r\n    <UikitMenu\r\n      userMenu={<UserMenu />}\r\n      globalMenu={<GlobalSettings />}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={currentLanguage.code}\r\n      langs={languageList}\r\n      setLang={setLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config(t)}\r\n      profile={{\r\n        username: profile?.username,\r\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\r\n        profileLink: '/profile',\r\n        noProfileLink: '/profile',\r\n        showPip: !profile?.username,\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import React, { useState, useCallback } from 'react'\r\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\r\n\r\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\r\n  const [show, setShow] = useState(false)\r\n  const startFalling = useCallback(() => setShow(true), [setShow])\r\n  useKonamiCheatCode(startFalling)\r\n\r\n  if (show) {\r\n    return (\r\n      <div onAnimationEnd={() => setShow(false)}>\r\n        <FallingBunnies {...props} />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default React.memo(EasterEgg)\r\n","import { useEffect, useRef, useState } from 'react'\r\n\r\nconst useIntersectionObserver = () => {\r\n  const observerRef = useRef<HTMLDivElement>(null)\r\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const [isIntersecting, setIsIntersecting] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\r\n      setIsIntersecting(entry.isIntersecting)\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      intersectionObserverRef.current.observe(observerRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n\r\n    return () => {\r\n      if (intersectionObserverRef.current && observerIsSet) {\r\n        intersectionObserverRef.current.disconnect()\r\n      }\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  return { observerRef, isIntersecting }\r\n}\r\n\r\nexport default useIntersectionObserver\r\n","import { useEffect, useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  fetchCakeVaultPublicData,\r\n  fetchCakeVaultUserData,\r\n  fetchCakeVaultFees,\r\n  fetchPoolsStakingLimitsAsync,\r\n} from '.'\r\nimport { State, DeserializedPool } from '../types'\r\nimport { transformPool } from './helpers'\r\n\r\nexport const useFetchPublicPoolsData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchPoolsPublicData = async () => {\r\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\r\n    }\r\n\r\n    fetchPoolsPublicData()\r\n    dispatch(fetchPoolsStakingLimitsAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const useFetchUserPools = (account) => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n}\r\n\r\nexport const usePools = (): { pools: DeserializedPool[]; userDataLoaded: boolean } => {\r\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\r\n    pools: state.pools.data,\r\n    userDataLoaded: state.pools.userDataLoaded,\r\n  }))\r\n  return { pools: pools.map(transformPool), userDataLoaded }\r\n}\r\n\r\nexport const useFetchCakeVault = () => {\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultPublicData())\r\n  }, [dispatch, fastRefresh])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultUserData({ account }))\r\n  }, [dispatch, fastRefresh, account])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultFees())\r\n  }, [dispatch])\r\n}\r\n\r\nexport const useCakeVault = () => {\r\n  const {\r\n    totalShares: totalSharesAsString,\r\n    pricePerFullShare: pricePerFullShareAsString,\r\n    totalCakeInVault: totalCakeInVaultAsString,\r\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\r\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\r\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\r\n    userData: {\r\n      isLoading,\r\n      userShares: userSharesAsString,\r\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  } = useSelector((state: State) => state.pools.cakeVault)\r\n\r\n  const estimatedCakeBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyRewardAsString)\r\n  }, [estimatedCakeBountyRewardAsString])\r\n\r\n  const totalPendingCakeHarvest = useMemo(() => {\r\n    return new BigNumber(totalPendingCakeHarvestAsString)\r\n  }, [totalPendingCakeHarvestAsString])\r\n\r\n  const totalShares = useMemo(() => {\r\n    return new BigNumber(totalSharesAsString)\r\n  }, [totalSharesAsString])\r\n\r\n  const pricePerFullShare = useMemo(() => {\r\n    return new BigNumber(pricePerFullShareAsString)\r\n  }, [pricePerFullShareAsString])\r\n\r\n  const totalCakeInVault = useMemo(() => {\r\n    return new BigNumber(totalCakeInVaultAsString)\r\n  }, [totalCakeInVaultAsString])\r\n\r\n  const userShares = useMemo(() => {\r\n    return new BigNumber(userSharesAsString)\r\n  }, [userSharesAsString])\r\n\r\n  const cakeAtLastUserAction = useMemo(() => {\r\n    return new BigNumber(cakeAtLastUserActionAsString)\r\n  }, [cakeAtLastUserActionAsString])\r\n\r\n  return {\r\n    totalShares,\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: {\r\n      performanceFee,\r\n      callFee,\r\n      withdrawalFee,\r\n      withdrawalFeePeriod,\r\n    },\r\n    userData: {\r\n      isLoading,\r\n      userShares,\r\n      cakeAtLastUserAction,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  }\r\n}\r\n","export const Latinise = {\r\n  latin_map: {\r\n    τ: 't',\r\n    Τ: 'T',\r\n  },\r\n}\r\n\r\nexport const latinise = (input: string) => {\r\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <InputWrapper>\r\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\r\n    </InputWrapper>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n  user-select: none;\r\n  z-index: 20;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps extends BoxProps {\r\n  options: OptionProps[]\r\n  onOptionChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\r\n\r\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    setIsOpen(!isOpen)\r\n    event.stopPropagation()\r\n  }\r\n\r\n  const onOptionClicked = (selectedIndex: number) => () => {\r\n    setSelectedOptionIndex(selectedIndex)\r\n    setIsOpen(false)\r\n\r\n    if (onOptionChange) {\r\n      onOptionChange(options[selectedIndex])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = () => {\r\n      setIsOpen(false)\r\n    }\r\n\r\n    document.addEventListener('click', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} {...props}>\r\n      <DropDownHeader onClick={toggling}>\r\n        <Text>{options[selectedOptionIndex].label}</Text>\r\n      </DropDownHeader>\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option, index) =>\r\n            index !== selectedOptionIndex ? (\r\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\r\n                <Text>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import styled from 'styled-components'\r\n\r\nconst Loading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getApy } from 'utils/compoundApyHelpers'\r\n\r\nconst Footer = styled(Flex)`\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n`\r\n\r\nconst BulletList = styled.ul`\r\n  list-style-type: none;\r\n  margin-top: 16px;\r\n  padding: 0;\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  li::before {\r\n    content: '•';\r\n    margin-right: 4px;\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n  li::marker {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\ninterface RoiCalculatorFooterProps {\r\n  isFarm: boolean\r\n  apr: number\r\n  displayApr: string\r\n  autoCompoundFrequency: number\r\n  multiplier: string\r\n  linkLabel: string\r\n  linkHref: string\r\n  performanceFee: number\r\n}\r\n\r\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\r\n  isFarm,\r\n  apr,\r\n  displayApr,\r\n  autoCompoundFrequency,\r\n  multiplier,\r\n  linkLabel,\r\n  linkHref,\r\n  performanceFee,\r\n}) => {\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  const { t } = useTranslation()\r\n  const {\r\n    targetRef: multiplierRef,\r\n    tooltip: multiplierTooltip,\r\n    tooltipVisible: multiplierTooltipVisible,\r\n  } = useTooltip(\r\n    <>\r\n      <Text>\r\n        {t(\r\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\r\n        )}\r\n      </Text>\r\n      <Text my=\"24px\">\r\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\r\n      </Text>\r\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\r\n    </>,\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const gridRowCount = isFarm ? 4 : 2\r\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\r\n\r\n  return (\r\n    <Footer p=\"16px\" flexDirection=\"column\">\r\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\r\n        {isExpanded ? t('Hide') : t('Details')}\r\n      </ExpandableLabel>\r\n      {isExpanded && (\r\n        <Box px=\"8px\">\r\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\r\n            {isFarm && (\r\n              <>\r\n                <Text color=\"textSubtle\" small>\r\n                  {t('APR (incl. LP rewards)')}\r\n                </Text>\r\n                <Text small textAlign=\"right\">\r\n                  {displayApr}%\r\n                </Text>\r\n              </>\r\n            )}\r\n            <Text color=\"textSubtle\" small>\r\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\r\n            </Text>\r\n            <Text small textAlign=\"right\">\r\n              {apr.toFixed(2)}%\r\n            </Text>\r\n            <Text color=\"textSubtle\" small>\r\n              {t('APY (%compoundTimes%x daily compound)', {\r\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\r\n              })}\r\n            </Text>\r\n            <Text small textAlign=\"right\">\r\n              {apy}%\r\n            </Text>\r\n            {isFarm && (\r\n              <>\r\n                <Text color=\"textSubtle\" small>\r\n                  {t('Farm Multiplier')}\r\n                </Text>\r\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\r\n                  <Text small textAlign=\"right\" mr=\"4px\">\r\n                    {multiplier}\r\n                  </Text>\r\n                  <span ref={multiplierRef}>\r\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\r\n                  </span>\r\n                  {multiplierTooltipVisible && multiplierTooltip}\r\n                </Flex>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <BulletList>\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t('Calculated based on current rates.')}\r\n              </Text>\r\n            </li>\r\n            {isFarm && (\r\n              <li>\r\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\r\n                </Text>\r\n              </li>\r\n            )}\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t(\r\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n                )}\r\n              </Text>\r\n            </li>\r\n            {performanceFee > 0 && (\r\n              <li>\r\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\r\n                    fee: performanceFee,\r\n                  })}\r\n                </Text>\r\n              </li>\r\n            )}\r\n          </BulletList>\r\n          <Flex justifyContent=\"center\" mt=\"24px\">\r\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\r\n          </Flex>\r\n        </Box>\r\n      )}\r\n    </Footer>\r\n  )\r\n}\r\n\r\nexport default RoiCalculatorFooter\r\n","import React, { useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\r\n\r\nconst MILLION = 1000000\r\nconst TRILLION = 1000000000000\r\n\r\nconst RoiCardWrapper = styled(Box)`\r\n  background: linear-gradient(180deg, #53dee9, #7645d9);\r\n  padding: 1px;\r\n  width: 100%;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n`\r\n\r\nconst RoiCardInner = styled(Box)`\r\n  height: 120px;\r\n  padding: 24px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst RoiInputContainer = styled(Box)`\r\n  position: relative;\r\n  & > input {\r\n    padding-left: 28px;\r\n    max-width: 70%;\r\n  }\r\n  &:before {\r\n    position: absolute;\r\n    content: '$';\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n    left: 16px;\r\n    top: 8px;\r\n  }\r\n`\r\n\r\nconst RoiDisplayContainer = styled(Flex)`\r\n  max-width: 82%;\r\n  margin-right: 8px;\r\n`\r\n\r\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\r\n  position: relative;\r\n  overflow-x: auto;\r\n  &::-webkit-scrollbar {\r\n    height: 0px;\r\n  }\r\n\r\n  ${({ fadeOut, theme }) =>\r\n    fadeOut &&\r\n    `\r\n      &:after {\r\n        background: linear-gradient(\r\n          to right,\r\n          ${theme.colors.background}00,\r\n          ${theme.colors.background}E6\r\n        );\r\n        content: '';\r\n        height: 100%;\r\n        pointer-events: none;\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        width: 40px;\r\n      }\r\n  `}\r\n`\r\n\r\ninterface RoiCardProps {\r\n  earningTokenSymbol: string\r\n  calculatorState: RoiCalculatorReducerState\r\n  setTargetRoi: (amount: string) => void\r\n  setCalculatorMode: (mode: CalculatorMode) => void\r\n}\r\n\r\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\r\n  const inputRef = useRef<HTMLInputElement | null>(null)\r\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\r\n  const { mode } = calculatorState.controls\r\n\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {\r\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\r\n      inputRef.current.focus()\r\n    }\r\n  }, [mode])\r\n\r\n  const onEnterEditing = () => {\r\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\r\n  }\r\n\r\n  const onExitRoiEditing = () => {\r\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\r\n  }\r\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTargetRoi(event.currentTarget.value)\r\n  }\r\n  return (\r\n    <RoiCardWrapper>\r\n      <RoiCardInner>\r\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\r\n          {t('ROI at current rates')}\r\n        </Text>\r\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\r\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\r\n            <>\r\n              <RoiInputContainer>\r\n                <Input\r\n                  ref={inputRef}\r\n                  type=\"number\"\r\n                  inputMode=\"decimal\"\r\n                  pattern=\"\\d*\"\r\n                  scale=\"sm\"\r\n                  value={roiUSD}\r\n                  placeholder=\"0.0\"\r\n                  onChange={handleExpectedRoiChange}\r\n                />\r\n              </RoiInputContainer>\r\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\r\n                <CheckmarkIcon color=\"primary\" />\r\n              </IconButton>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <RoiDisplayContainer onClick={onEnterEditing}>\r\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\r\n                <Text fontSize=\"24px\" bold>\r\n                  $\r\n                </Text>\r\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\r\n                  {roiUSD.toLocaleString('en', {\r\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\r\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\r\n                  })}\r\n                </RoiDollarAmount>\r\n              </RoiDisplayContainer>\r\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\r\n                <PencilIcon color=\"primary\" />\r\n              </IconButton>\r\n            </>\r\n          )}\r\n        </Flex>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\">\r\n          ~ {roiTokens} {earningTokenSymbol} (\r\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n          %)\r\n        </Text>\r\n      </RoiCardInner>\r\n    </RoiCardWrapper>\r\n  )\r\n}\r\n\r\nexport default RoiCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\r\n\r\nconst rotate = keyframes`\r\n  0% {\r\n    transform: scale(1);\r\n    stroke-width: 0;\r\n  }\r\n  50% {\r\n    transform: scale(1.3);\r\n    stroke-width: 2;\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n    stroke-width: 0;\r\n  }\r\n`\r\n\r\nconst ArrowContainer = styled(Flex)`\r\n  & > svg {\r\n    animation: 0.2s ${rotate} linear;\r\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\r\n    stroke-width: 0;\r\n  }\r\n`\r\n\r\ninterface AnimatedArrowProps {\r\n  calculatorState: RoiCalculatorReducerState\r\n}\r\n\r\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\r\n  const [key, setKey] = useState('roiArrow-0')\r\n  const { mode } = calculatorState.controls\r\n\r\n  // Trigger animation on state change\r\n  useEffect(() => {\r\n    setKey((prevKey) => {\r\n      const prevId = parseInt(prevKey.split('-')[1], 10)\r\n      return `roiArrow-${prevId + 1}`\r\n    })\r\n  }, [calculatorState])\r\n\r\n  return (\r\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\r\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\r\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\r\n      ) : (\r\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\r\n      )}\r\n    </ArrowContainer>\r\n  )\r\n}\r\n\r\nexport default AnimatedArrow\r\n","import React, { useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Flex,\r\n  ButtonMenu,\r\n  Checkbox,\r\n  BalanceInput,\r\n  HelpIcon,\r\n  ButtonMenuItem,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\r\nimport RoiCard from './RoiCard'\r\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\r\nimport AnimatedArrow from './AnimatedArrow'\r\n\r\ninterface RoiCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  onBack?: () => void\r\n  earningTokenPrice: number\r\n  apr: number\r\n  displayApr?: string\r\n  linkLabel: string\r\n  linkHref: string\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenSymbol: string\r\n  stakingTokenPrice: number\r\n  earningTokenSymbol?: string\r\n  multiplier?: string\r\n  autoCompoundFrequency?: number\r\n  performanceFee?: number\r\n  isFarm?: boolean\r\n  initialValue?: string\r\n}\r\n\r\nconst StyledModal = styled(Modal)`\r\n  width: 345px;\r\n  & > :nth-child(2) {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ScrollableContainer = styled.div`\r\n  padding: 24px;\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-height: none;\r\n  }\r\n`\r\n\r\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\r\n  width: 100%;\r\n\r\n  & > button {\r\n    width: 100%;\r\n  }\r\n\r\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\r\n`\r\n\r\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\r\n  onDismiss,\r\n  onBack,\r\n  earningTokenPrice,\r\n  apr,\r\n  displayApr,\r\n  linkLabel,\r\n  linkHref,\r\n  stakingTokenBalance,\r\n  stakingTokenSymbol,\r\n  stakingTokenPrice,\r\n  multiplier,\r\n  initialValue,\r\n  earningTokenSymbol = 'CAKE',\r\n  autoCompoundFrequency = 0,\r\n  performanceFee = 0,\r\n  isFarm = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useActiveWeb3React()\r\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\r\n\r\n  const {\r\n    state,\r\n    setPrincipalFromUSDValue,\r\n    setPrincipalFromTokenValue,\r\n    setStakingDuration,\r\n    toggleCompounding,\r\n    toggleEditingCurrency,\r\n    setCompoundingFrequency,\r\n    setCalculatorMode,\r\n    setTargetRoi,\r\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\r\n\r\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\r\n  const { principalAsUSD, principalAsToken } = state.data\r\n\r\n  // Auto-focus input on opening modal\r\n  useEffect(() => {\r\n    if (balanceInputRef.current) {\r\n      balanceInputRef.current.focus()\r\n    }\r\n  }, [])\r\n\r\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\r\n  useEffect(() => {\r\n    if (initialValue) {\r\n      setPrincipalFromTokenValue(initialValue)\r\n    }\r\n  }, [initialValue, setPrincipalFromTokenValue])\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    isFarm\r\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\r\n      : t(\r\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\r\n          { assetSymbol: stakingTokenSymbol },\r\n        ),\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const onBalanceFocus = () => {\r\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\r\n  }\r\n\r\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\r\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\r\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\r\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\r\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\r\n\r\n  return (\r\n    <StyledModal\r\n      title={t('ROI Calculator')}\r\n      onDismiss={onBack || onDismiss}\r\n      onBack={onBack ?? null}\r\n      headerBackground=\"gradients.cardHeader\"\r\n    >\r\n      <ScrollableContainer>\r\n        <Flex flexDirection=\"column\" mb=\"8px\">\r\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\r\n          </Text>\r\n          <BalanceInput\r\n            currencyValue={`${conversionValue} ${conversionUnit}`}\r\n            innerRef={balanceInputRef}\r\n            placeholder=\"0.00\"\r\n            value={editingValue}\r\n            unit={editingUnit}\r\n            onUserInput={onUserInput}\r\n            switchEditingUnits={toggleEditingCurrency}\r\n            onFocus={onBalanceFocus}\r\n          />\r\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\r\n            <Button\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"68px\"\r\n              variant=\"tertiary\"\r\n              onClick={() => setPrincipalFromUSDValue('100')}\r\n            >\r\n              $100\r\n            </Button>\r\n            <Button\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"68px\"\r\n              variant=\"tertiary\"\r\n              onClick={() => setPrincipalFromUSDValue('1000')}\r\n            >\r\n              $1000\r\n            </Button>\r\n            <Button\r\n              disabled={stakingTokenBalance.lte(0) || !account}\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"128px\"\r\n              variant=\"tertiary\"\r\n              onClick={() =>\r\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\r\n              }\r\n            >\r\n              {t('My Balance').toLocaleUpperCase()}\r\n            </Button>\r\n            <span ref={targetRef}>\r\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\r\n            </span>\r\n            {tooltipVisible && tooltip}\r\n          </Flex>\r\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n            {t('Staked for')}\r\n          </Text>\r\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\r\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\r\n          </FullWidthButtonMenu>\r\n          {autoCompoundFrequency === 0 && (\r\n            <>\r\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n                {t('Compounding every')}\r\n              </Text>\r\n              <Flex alignItems=\"center\">\r\n                <Flex flex=\"1\">\r\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\r\n                </Flex>\r\n                <Flex flex=\"6\">\r\n                  <FullWidthButtonMenu\r\n                    disabled={!compounding}\r\n                    activeIndex={activeCompoundingIndex}\r\n                    onItemClick={setCompoundingFrequency}\r\n                    scale=\"sm\"\r\n                  >\r\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\r\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\r\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\r\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\r\n                  </FullWidthButtonMenu>\r\n                </Flex>\r\n              </Flex>\r\n            </>\r\n          )}\r\n        </Flex>\r\n        <AnimatedArrow calculatorState={state} />\r\n        <Flex>\r\n          <RoiCard\r\n            earningTokenSymbol={earningTokenSymbol}\r\n            calculatorState={state}\r\n            setTargetRoi={setTargetRoi}\r\n            setCalculatorMode={setCalculatorMode}\r\n          />\r\n        </Flex>\r\n      </ScrollableContainer>\r\n      <RoiCalculatorFooter\r\n        isFarm={isFarm}\r\n        apr={apr}\r\n        displayApr={displayApr}\r\n        autoCompoundFrequency={autoCompoundFrequency}\r\n        multiplier={multiplier}\r\n        linkLabel={linkLabel}\r\n        linkHref={linkHref}\r\n        performanceFee={performanceFee}\r\n      />\r\n    </StyledModal>\r\n  )\r\n}\r\n\r\nexport default RoiCalculatorModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getAprData } from 'views/Pools/helpers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nconst ApyLabelContainer = styled(Flex)`\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\ninterface AprRowProps {\r\n  pool: DeserializedPool\r\n  stakedBalance: BigNumber\r\n  performanceFee?: number\r\n}\r\n\r\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\r\n  const { t } = useTranslation()\r\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\r\n    pool\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const tooltipContent = isAutoVault\r\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\r\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\r\n\r\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <RoiCalculatorModal\r\n      earningTokenPrice={earningTokenPrice}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink}\r\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\r\n      stakingTokenSymbol={stakingToken.symbol}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      autoCompoundFrequency={autoCompoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\r\n      {isFinished || !apr ? (\r\n        <Skeleton width=\"82px\" height=\"32px\" />\r\n      ) : (\r\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\r\n          <Balance\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n            onClick={onPresentApyModal}\r\n          />\r\n          <IconButton variant=\"text\" scale=\"sm\">\r\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n          </IconButton>\r\n        </ApyLabelContainer>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AprRow\r\n","import styled from 'styled-components'\r\nimport { Card } from '@pancakeswap/uikit'\r\n\r\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\r\n  max-width: 352px;\r\n  margin: 0 8px 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-self: baseline;\r\n  position: relative;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin: 0 12px 46px;\r\n  }\r\n`\r\n\r\nexport default StyledCard\r\n","import React from 'react'\r\nimport {\r\n  Tag,\r\n  VerifiedIcon,\r\n  CommunityIcon,\r\n  RefreshIcon,\r\n  AutoRenewIcon,\r\n  TagProps,\r\n  TimerIcon,\r\n  BlockIcon,\r\n  VoteIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst CoreTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Core')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CommunityTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\r\n      {t('Community')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst DualTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textSubtle\" outline {...props}>\r\n      {t('Dual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Manual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Auto')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst VoteNowTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Vote Now')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst SoonTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Soon')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ClosedTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\r\n      {t('Closed')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport {\r\n  Flex,\r\n  MetamaskIcon,\r\n  Text,\r\n  TooltipText,\r\n  LinkExternal,\r\n  TimerIcon,\r\n  Skeleton,\r\n  useTooltip,\r\n  Button,\r\n  Link,\r\n  HelpIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBscScanLink } from 'utils'\r\nimport Balance from 'components/Balance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\n\r\ninterface ExpandedFooterProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n}\r\n\r\nconst ExpandedWrapper = styled(Flex)`\r\n  svg {\r\n    height: 14px;\r\n    width: 14px;\r\n  }\r\n`\r\n\r\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\r\n  const { t } = useTranslation()\r\n  const { currentBlock } = useBlock()\r\n  const {\r\n    totalCakeInVault,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const {\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    sousId,\r\n    isAutoVault,\r\n  } = pool\r\n\r\n  const tokenAddress = earningToken.address || ''\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <ExpandedWrapper flexDirection=\"column\">\r\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text small>{t('Total staked')}:</Text>\r\n        <Flex alignItems=\"flex-start\">\r\n          {totalStaked && totalStaked.gte(0) ? (\r\n            <>\r\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n              <span ref={totalStakedTargetRef}>\r\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <Skeleton width=\"90px\" height=\"21px\" />\r\n          )}\r\n          {totalStakedTooltipVisible && totalStakedTooltip}\r\n        </Flex>\r\n      </Flex>\r\n      {stakingLimit && stakingLimit.gt(0) && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\r\n          <Text small>{t('Max. stake per user')}:</Text>\r\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n        </Flex>\r\n      )}\r\n      {shouldShowBlockCountdown && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n          {blocksRemaining || blocksUntilStart ? (\r\n            <Flex alignItems=\"center\">\r\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\r\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n                  {t('Blocks')}\r\n                </Text>\r\n                <TimerIcon ml=\"4px\" color=\"primary\" />\r\n              </Link>\r\n            </Flex>\r\n          ) : (\r\n            <Skeleton width=\"54px\" height=\"21px\" />\r\n          )}\r\n        </Flex>\r\n      )}\r\n      {isAutoVault && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {tooltipVisible && tooltip}\r\n          <TooltipText ref={targetRef} small>\r\n            {t('Performance Fee')}\r\n          </TooltipText>\r\n          <Flex alignItems=\"center\">\r\n            {performanceFee ? (\r\n              <Text ml=\"4px\" small>\r\n                {performanceFee / 100}%\r\n              </Text>\r\n            ) : (\r\n              <Skeleton width=\"90px\" height=\"21px\" />\r\n            )}\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal href={`/info/token/${earningToken.address}`} bold={false} small>\r\n          {t('See Token Info')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\r\n          {t('View Project Site')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      {poolContractAddress && (\r\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n          <LinkExternal\r\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n            bold={false}\r\n            small\r\n          >\r\n            {t('View Contract')}\r\n          </LinkExternal>\r\n        </Flex>\r\n      )}\r\n      {account && isMetaMaskInScope && tokenAddress && (\r\n        <Flex justifyContent=\"flex-end\">\r\n          <Button\r\n            variant=\"text\"\r\n            p=\"0\"\r\n            height=\"auto\"\r\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\r\n          >\r\n            <Text color=\"primary\" fontSize=\"14px\">\r\n              {t('Add to Metamask')}\r\n            </Text>\r\n            <MetamaskIcon ml=\"4px\" />\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n    </ExpandedWrapper>\r\n  )\r\n}\r\n\r\nexport default React.memo(ExpandedFooter)\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport ExpandedFooter from './ExpandedFooter'\r\n\r\ninterface FooterProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  totalCakeInVault?: BigNumber\r\n}\r\n\r\nconst ExpandableButtonWrapper = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  button {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\r\n  const { isAutoVault } = pool\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <CardFooter>\r\n      <ExpandableButtonWrapper>\r\n        <Flex alignItems=\"center\">\r\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n          {tooltipVisible && tooltip}\r\n          <Flex ref={targetRef}>\r\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n          </Flex>\r\n        </Flex>\r\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n          {isExpanded ? t('Hide') : t('Details')}\r\n        </ExpandableLabel>\r\n      </ExpandableButtonWrapper>\r\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {\r\n  TokenPairImage as UIKitTokenPairImage,\r\n  TokenPairImageProps as UIKitTokenPairImageProps,\r\n  TokenImage as UIKitTokenImage,\r\n  ImageProps,\r\n} from '@pancakeswap/uikit'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Token } from '@pancakeswap/sdk'\r\n\r\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\r\n  primaryToken: Token\r\n  secondaryToken: Token\r\n}\r\n\r\nconst getImageUrlFromToken = (token: Token) => {\r\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\r\n  return `/images/tokens/${address}.svg`\r\n}\r\n\r\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\r\n  return (\r\n    <UIKitTokenPairImage\r\n      primarySrc={getImageUrlFromToken(primaryToken)}\r\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\ninterface TokenImageProps extends ImageProps {\r\n  token: Token\r\n}\r\n\r\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\r\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\r\n}\r\n","import React from 'react'\r\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\r\nimport { mainnetTokens } from 'config/constants/tokens'\r\n\r\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\r\n  const primaryTokenSrc = `/images/tokens/${mainnetTokens.cake.address}.svg`\r\n\r\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\r\n}\r\n\r\nexport default CakeVaultTokenPairImage\r\n","import React from 'react'\r\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\r\n\r\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\r\n  background: ${({ isFinished, background, theme }) =>\r\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\r\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\r\n`\r\n\r\nconst StyledCardHeader: React.FC<{\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  isAutoVault?: boolean\r\n  isFinished?: boolean\r\n  isStaking?: boolean\r\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\r\n  const { t } = useTranslation()\r\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\r\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\r\n\r\n  const getHeadingPrefix = () => {\r\n    if (isAutoVault) {\r\n      // vault\r\n      return t('Auto')\r\n    }\r\n    if (isCakePool) {\r\n      // manual cake\r\n      return t('Manual')\r\n    }\r\n    // all other pools\r\n    return t('Earn')\r\n  }\r\n\r\n  const getSubHeading = () => {\r\n    if (isAutoVault) {\r\n      return t('Automatic restaking')\r\n    }\r\n    if (isCakePool) {\r\n      return t('Earn CAKE, stake CAKE')\r\n    }\r\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\r\n  }\r\n\r\n  return (\r\n    <Wrapper isFinished={isFinished} background={background}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Flex flexDirection=\"column\">\r\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\r\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\r\n          </Heading>\r\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\r\n        </Flex>\r\n        {isAutoVault ? (\r\n          <CakeVaultTokenPairImage width={64} height={64} />\r\n        ) : (\r\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\r\n        )}\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default StyledCardHeader\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers, Contract } from 'ethers'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserAllowance } from 'state/actions'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport useLastUpdated from 'hooks/useLastUpdated'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\n\r\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\r\n      const receipt = await tx.wait()\r\n\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      if (receipt.status) {\r\n        toastSuccess(\r\n          t('Contract Enabled'),\r\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\r\n          </ToastDescriptionWithTx>,\r\n        )\r\n        setRequestedApproval(false)\r\n      } else {\r\n        // user rejected tx or didn't go thru\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    }\r\n  }, [\r\n    account,\r\n    dispatch,\r\n    lpContract,\r\n    sousChefContract,\r\n    sousId,\r\n    earningTokenSymbol,\r\n    t,\r\n    toastError,\r\n    toastSuccess,\r\n    callWithGasPrice,\r\n  ])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\n// Approve CAKE auto pool\r\nexport const useVaultApprove = (setLastUpdated: () => void) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const cakeContract = useCake()\r\n\r\n  const handleApprove = async () => {\r\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\r\n    setRequestedApproval(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(\r\n        t('Contract Enabled'),\r\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\r\n        </ToastDescriptionWithTx>,\r\n      )\r\n      setLastUpdated()\r\n      setRequestedApproval(false)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setRequestedApproval(false)\r\n    }\r\n  }\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport const useCheckVaultApprovalStatus = () => {\r\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      try {\r\n        const currentAllowance = await cakeContract.allowance(account, cakeVaultContract.address)\r\n        setIsVaultApproved(currentAllowance.gt(0))\r\n      } catch (error) {\r\n        setIsVaultApproved(false)\r\n      }\r\n    }\r\n\r\n    checkApprovalStatus()\r\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\r\n\r\n  return { isVaultApproved, setLastUpdated }\r\n}\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useApprovePool } from '../../../hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  pool: DeserializedPool\r\n  isLoading?: boolean\r\n}\r\n\r\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\r\n  const { sousId, stakingToken, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenContract = useERC20(stakingToken.address || '')\r\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApprovalAction\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface NotEnoughTokensModalProps {\r\n  tokenSymbol: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <Modal\r\n      title={t('%symbol% required', { symbol: tokenSymbol })}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Text color=\"failure\" bold>\r\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\r\n      </Text>\r\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\r\n      <Text>\r\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\r\n          symbol: tokenSymbol,\r\n        })}\r\n      </Text>\r\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\r\n        {t('Buy')} {tokenSymbol}\r\n      </Button>\r\n      <StyledLink href=\"https://yieldwatch.net\" external>\r\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\r\n          {t('Locate Assets')}\r\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\r\n        </Button>\r\n      </StyledLink>\r\n      <Button variant=\"text\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NotEnoughTokensModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap/uikit'\r\n\r\ninterface PercentageButtonProps {\r\n  onClick: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport default PercentageButton\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stakeFarm } from 'utils/calls'\r\nimport BigNumber from 'bignumber.js'\r\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport getGasPrice from 'utils/getGasPrice'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\r\n    ...options,\r\n    gasPrice,\r\n  })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst sousStakeBnb = async (sousChefContract, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\r\n    ...options,\r\n    gasPrice,\r\n  })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await stakeFarm(masterChefContract, 0, amount)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, decimals)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStakePool\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { unstakeFarm } from 'utils/calls'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport getGasPrice from 'utils/getGasPrice'\r\n\r\nconst sousUnstake = async (sousChefContract: any, amount: string, decimals: number) => {\r\n  const gasPrice = getGasPrice()\r\n  const units = parseUnits(amount, decimals)\r\n\r\n  const tx = await sousChefContract.withdraw(units.toString(), {\r\n    gasPrice,\r\n  })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst sousEmergencyUnstake = async (sousChefContract: any) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useUnstakePool = (sousId: number, enableEmergencyWithdraw = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await unstakeFarm(masterChefContract, 0, amount)\r\n      } else if (enableEmergencyWithdraw) {\r\n        await sousEmergencyUnstake(sousChefContract)\r\n      } else {\r\n        await sousUnstake(sousChefContract, amount, decimals)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstakePool\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Flex,\r\n  Image,\r\n  Button,\r\n  Slider,\r\n  BalanceInput,\r\n  AutoRenewIcon,\r\n  Link,\r\n  CalculateIcon,\r\n  IconButton,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport BigNumber from 'bignumber.js'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\r\nimport PercentageButton from './PercentageButton'\r\nimport useStakePool from '../../../hooks/useStakePool'\r\nimport useUnstakePool from '../../../hooks/useUnstakePool'\r\n\r\ninterface StakeModalProps {\r\n  isBnbPool: boolean\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenPrice: number\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst AnnualRoiContainer = styled(Flex)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst AnnualRoiDisplay = styled(Text)`\r\n  width: 72px;\r\n  max-width: 72px;\r\n  overflow: hidden;\r\n  text-align: right;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst StakeModal: React.FC<StakeModalProps> = ({\r\n  isBnbPool,\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakingTokenPrice,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n}) => {\r\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { onStake } = useStakePool(sousId, isBnbPool)\r\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\r\n  const [percent, setPercent] = useState(0)\r\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\r\n  const getCalculatedStakingLimit = () => {\r\n    if (isRemovingStake) {\r\n      return userData.stakedBalance\r\n    }\r\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\r\n  }\r\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n  const userNotEnoughToken = isRemovingStake\r\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\r\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\r\n\r\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\r\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\r\n\r\n  const interestBreakdown = getInterestBreakdown({\r\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\r\n    apr,\r\n    earningTokenPrice,\r\n  })\r\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\r\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\r\n\r\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\r\n\r\n  useEffect(() => {\r\n    if (stakingLimit.gt(0) && !isRemovingStake) {\r\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\r\n    }\r\n  }, [\r\n    stakeAmount,\r\n    stakingLimit,\r\n    userData,\r\n    stakingToken,\r\n    isRemovingStake,\r\n    setHasReachedStakedLimit,\r\n    fullDecimalStakeAmount,\r\n  ])\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\r\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\r\n      setPercent(Math.min(percentage, 100))\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      if (isRemovingStake) {\r\n        // unstaking\r\n        await onUnstake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Unstaked')}!`,\r\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\r\n            symbol: earningToken.symbol,\r\n          }),\r\n        )\r\n      } else {\r\n        // staking\r\n        await onStake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Staked')}!`,\r\n          t('Your %symbol% funds have been staked in the pool!', {\r\n            symbol: stakingToken.symbol,\r\n          }),\r\n        )\r\n      }\r\n      setPendingTx(false)\r\n      onDismiss()\r\n    } catch (e) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  if (showRoiCalculator) {\r\n    return (\r\n      <RoiCalculatorModal\r\n        earningTokenPrice={earningTokenPrice}\r\n        stakingTokenPrice={stakingTokenPrice}\r\n        apr={apr}\r\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        linkHref={getTokenLink}\r\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\r\n        stakingTokenSymbol={stakingToken.symbol}\r\n        earningTokenSymbol={earningToken.symbol}\r\n        onBack={() => setShowRoiCalculator(false)}\r\n        initialValue={stakeAmount}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      minWidth=\"346px\"\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {stakingLimit.gt(0) && !isRemovingStake && (\r\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\r\n          {t('Max stake for this pool: %amount% %token%', {\r\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\r\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      {hasReachedStakeLimit && (\r\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\r\n          {t('Maximum total stake: %amount% %token%', {\r\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      {userNotEnoughToken && (\r\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\r\n          {t('Insufficient %symbol% balance', {\r\n            symbol: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', {\r\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\r\n        })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\r\n      </Flex>\r\n      {!isRemovingStake && (\r\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Text mr=\"8px\" color=\"textSubtle\">\r\n            {t('Annual ROI at current rates')}:\r\n          </Text>\r\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\r\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\r\n            <IconButton variant=\"text\" scale=\"sm\">\r\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n            </IconButton>\r\n          </AnnualRoiContainer>\r\n        </Flex>\r\n      )}\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <StyledLink external href={getTokenLink}>\r\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\r\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n          </Button>\r\n        </StyledLink>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../Modals/StakeModal'\r\n\r\ninterface StakeActionsProps {\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  isBnbPool: boolean\r\n  isStaked: ConstrainBoolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst StakeAction: React.FC<StakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakedBalance,\r\n  isBnbPool,\r\n  isStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  const renderStakeAction = () => {\r\n    return isStaked ? (\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flexDirection=\"column\">\r\n          <>\r\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\r\n            {stakingTokenPrice !== 0 && (\r\n              <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={stakedTokenDollarBalance}\r\n                  prefix=\"~\"\r\n                  unit=\" USD\"\r\n                />\r\n              </Text>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Flex>\r\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n            <MinusIcon color=\"primary\" width=\"24px\" />\r\n          </IconButton>\r\n          {reachStakingLimit ? (\r\n            <span ref={targetRef}>\r\n              <IconButton variant=\"secondary\" disabled>\r\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n              </IconButton>\r\n            </span>\r\n          ) : (\r\n            <IconButton\r\n              variant=\"secondary\"\r\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\r\n              disabled={isFinished}\r\n            >\r\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n            </IconButton>\r\n          )}\r\n        </Flex>\r\n        {tooltipVisible && tooltip}\r\n      </Flex>\r\n    ) : (\r\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n        {t('Stake')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default StakeAction\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport getGasPrice from 'utils/getGasPrice'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport { DEFAULT_GAS_LIMIT } from 'config'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst harvestPool = async (sousChefContract) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst harvestPoolBnb = async (sousChefContract) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvestFarm(masterChefContract, 0)\r\n    } else if (isUsingBnb) {\r\n      await harvestPoolBnb(sousChefContract)\r\n    } else {\r\n      await harvestPool(sousChefContract)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport default useHarvestPool\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Heading,\r\n  Flex,\r\n  AutoRenewIcon,\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  HelpIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport useHarvestPool from '../../../hooks/useHarvestPool'\r\nimport useStakePool from '../../../hooks/useStakePool'\r\n\r\ninterface CollectModalProps {\r\n  formattedBalance: string\r\n  fullBalance: string\r\n  earningToken: Token\r\n  earningsDollarValue: number\r\n  sousId: number\r\n  isBnbPool: boolean\r\n  isCompoundPool?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst CollectModal: React.FC<CollectModalProps> = ({\r\n  formattedBalance,\r\n  fullBalance,\r\n  earningToken,\r\n  earningsDollarValue,\r\n  sousId,\r\n  isBnbPool,\r\n  isCompoundPool = false,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\r\n  const { onStake } = useStakePool(sousId, isBnbPool)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\r\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\r\n    </>,\r\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const handleHarvestConfirm = async () => {\r\n    setPendingTx(true)\r\n    // compounding\r\n    if (shouldCompound) {\r\n      try {\r\n        await onStake(fullBalance, earningToken.decimals)\r\n        toastSuccess(\r\n          `${t('Compounded')}!`,\r\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // harvesting\r\n      try {\r\n        await onReward()\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {isCompoundPool && (\r\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\r\n          <ButtonMenu\r\n            activeIndex={shouldCompound ? 0 : 1}\r\n            scale=\"sm\"\r\n            variant=\"subtle\"\r\n            onItemClick={(index) => setShouldCompound(!index)}\r\n          >\r\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\r\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n          <Flex ml=\"10px\" ref={targetRef}>\r\n            <HelpIcon color=\"textSubtle\" />\r\n          </Flex>\r\n          {tooltipVisible && tooltip}\r\n        </Flex>\r\n      )}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Heading>\r\n            {formattedBalance} {earningToken.symbol}\r\n          </Heading>\r\n          {earningsDollarValue > 0 && (\r\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Button\r\n        mt=\"8px\"\r\n        onClick={handleHarvestConfirm}\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CollectModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport CollectModal from '../Modals/CollectModal'\r\n\r\ninterface HarvestActionsProps {\r\n  earnings: BigNumber\r\n  earningToken: Token\r\n  sousId: number\r\n  earningTokenPrice: number\r\n  isBnbPool: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\r\n  earnings,\r\n  earningToken,\r\n  sousId,\r\n  isBnbPool,\r\n  earningTokenPrice,\r\n  isLoading = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const hasEarnings = earnings.toNumber() > 0\r\n  const isCompoundPool = sousId === 0\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\r\n      <Flex flexDirection=\"column\">\r\n        {isLoading ? (\r\n          <Skeleton width=\"80px\" height=\"48px\" />\r\n        ) : (\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </Flex>\r\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n        {isCompoundPool ? t('Collect') : t('Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { DeserializedPool } from 'state/types'\r\nimport ApprovalAction from './ApprovalAction'\r\nimport StakeActions from './StakeActions'\r\nimport HarvestActions from './HarvestActions'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\ninterface CardActionsProps {\r\n  pool: DeserializedPool\r\n  stakedBalance: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\r\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const { t } = useTranslation()\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const needsApproval = !allowance.gt(0) && !isBnbPool\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isLoading = !userData\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        {harvest && (\r\n          <>\r\n            <Box display=\"inline\">\r\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {`${earningToken.symbol} `}\r\n              </InlineText>\r\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {t('Earned')}\r\n              </InlineText>\r\n            </Box>\r\n            <HarvestActions\r\n              earnings={earnings}\r\n              earningToken={earningToken}\r\n              sousId={sousId}\r\n              earningTokenPrice={earningTokenPrice}\r\n              isBnbPool={isBnbPool}\r\n              isLoading={isLoading}\r\n            />\r\n          </>\r\n        )}\r\n        <Box display=\"inline\">\r\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {needsApproval ? (\r\n          <ApprovalAction pool={pool} isLoading={isLoading} />\r\n        ) : (\r\n          <StakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            stakedBalance={stakedBalance}\r\n            isBnbPool={isBnbPool}\r\n            isStaked={isStaked}\r\n          />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { DeserializedPool } from 'state/types'\r\nimport AprRow from './AprRow'\r\nimport { StyledCard } from './StyledCard'\r\nimport CardFooter from './CardFooter'\r\nimport StyledCardHeader from './StyledCardHeader'\r\nimport CardActions from './CardActions'\r\n\r\nconst PoolCard: React.FC<{ pool: DeserializedPool; account: string }> = ({ pool, account }) => {\r\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const accountHasStakedBalance = stakedBalance.gt(0)\r\n\r\n  return (\r\n    <StyledCard\r\n      isFinished={isFinished && sousId !== 0}\r\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\r\n    >\r\n      <StyledCardHeader\r\n        isStaking={accountHasStakedBalance}\r\n        earningToken={earningToken}\r\n        stakingToken={stakingToken}\r\n        isFinished={isFinished && sousId !== 0}\r\n      />\r\n      <CardBody>\r\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\r\n        <Flex mt=\"24px\" flexDirection=\"column\">\r\n          {account ? (\r\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\r\n          ) : (\r\n            <>\r\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                {t('Start earning')}\r\n              </Text>\r\n              <ConnectWalletButton />\r\n            </>\r\n          )}\r\n        </Flex>\r\n      </CardBody>\r\n      <CardFooter pool={pool} account={account} />\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useVaultApprove } from '../../../hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  setLastUpdated: () => void\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VaultApprovalAction\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\r\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\r\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\r\n\r\n  useEffect(() => {\r\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\r\n    const secondsRemainingCalc = feeEndTime - currentSeconds\r\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\r\n\r\n    const tick = () => {\r\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\r\n    }\r\n    const timerInterval = setInterval(() => tick(), 1000)\r\n    if (doesUnstakingFeeApply) {\r\n      setSecondsRemaining(secondsRemainingCalc)\r\n      setHasUnstakingFee(true)\r\n    } else {\r\n      setHasUnstakingFee(false)\r\n      clearInterval(timerInterval)\r\n    }\r\n\r\n    return () => clearInterval(timerInterval)\r\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\r\n\r\n  return { hasUnstakingFee, secondsRemaining }\r\n}\r\n\r\nexport default useWithdrawalFeeTimer\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\r\n  const { t } = useTranslation()\r\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\r\n\r\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\r\n}\r\n\r\nexport default WithdrawalFeeTimer\r\n","import React from 'react'\r\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\r\n\r\ninterface UnstakingFeeCountdownRowProps {\r\n  isTableVariant?: boolean\r\n}\r\n\r\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    fees: { withdrawalFee, withdrawalFeePeriod },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100 || '-'\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\r\n    parseInt(lastDepositedTime, 10),\r\n    userShares,\r\n    withdrawalFeePeriod,\r\n  )\r\n\r\n  // The user has made a deposit, but has no fee\r\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\r\n\r\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\r\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\r\n\r\n  const getRowText = () => {\r\n    if (noFeeToPay) {\r\n      return t('Unstaking Fee').toLowerCase()\r\n    }\r\n    if (shouldShowTimer) {\r\n      return t('unstaking fee until')\r\n    }\r\n    return t('unstaking fee if withdrawn within 72h')\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\r\n      justifyContent=\"space-between\"\r\n      flexDirection={isTableVariant ? 'column' : 'row'}\r\n    >\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\r\n      </TooltipText>\r\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default UnstakingFeeCountdownRow\r\n","import React from 'react'\r\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\n\r\ninterface FeeSummaryProps {\r\n  stakingTokenSymbol: string\r\n  stakeAmount: string\r\n}\r\n\r\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    fees: { withdrawalFee },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100\r\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'top-start' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        {tooltipVisible && tooltip}\r\n        <TooltipText ref={targetRef} small>\r\n          {t('Unstaking Fee')}\r\n        </TooltipText>\r\n        <Text fontSize=\"14px\">\r\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\r\n        </Text>\r\n      </Flex>\r\n      <UnstakingFeeCountdownRow />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FeeSummary\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Flex,\r\n  Image,\r\n  Button,\r\n  Slider,\r\n  BalanceInput,\r\n  AutoRenewIcon,\r\n  CalculateIcon,\r\n  IconButton,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { useCakeVaultContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\nimport { fetchCakeVaultUserData } from 'state/pools'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\r\nimport FeeSummary from './FeeSummary'\r\n\r\ninterface VaultStakeModalProps {\r\n  pool: DeserializedPool\r\n  stakingMax: BigNumber\r\n  performanceFee?: number\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst AnnualRoiContainer = styled(Flex)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst AnnualRoiDisplay = styled(Text)`\r\n  width: 72px;\r\n  max-width: 72px;\r\n  overflow: hidden;\r\n  text-align: right;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst callOptions = {\r\n  gasLimit: 380000,\r\n}\r\n\r\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\r\n  pool,\r\n  stakingMax,\r\n  performanceFee,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n}) => {\r\n  const dispatch = useAppDispatch()\r\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\r\n  const { account } = useWeb3React()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [percent, setPercent] = useState(0)\r\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\r\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\r\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\r\n\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n\r\n  const interestBreakdown = getInterestBreakdown({\r\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\r\n    apr,\r\n    earningTokenPrice,\r\n    performanceFee,\r\n  })\r\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\r\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\r\n\r\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\r\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\r\n      setPercent(percentage > 100 ? 100 : percentage)\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\r\n    setPendingTx(true)\r\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\r\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\r\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\r\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\r\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\r\n\r\n    if (isWithdrawingAll) {\r\n      try {\r\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          toastSuccess(\r\n            t('Unstaked!'),\r\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n              {t('Your earnings have also been harvested to your wallet')}\r\n            </ToastDescriptionWithTx>,\r\n          )\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // .toString() being called to fix a BigNumber error in prod\r\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n      try {\r\n        const tx = await callWithGasPrice(\r\n          cakeVaultContract,\r\n          'withdraw',\r\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\r\n          callOptions,\r\n        )\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          toastSuccess(\r\n            t('Unstaked!'),\r\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n              {t('Your earnings have also been harvested to your wallet')}\r\n            </ToastDescriptionWithTx>,\r\n          )\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\r\n    setPendingTx(true)\r\n    try {\r\n      // .toString() being called to fix a BigNumber error in prod\r\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\r\n      const receipt = await tx.wait()\r\n      if (receipt.status) {\r\n        toastSuccess(\r\n          t('Staked!'),\r\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n            {t('Your funds have been staked in the pool')}\r\n          </ToastDescriptionWithTx>,\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n        dispatch(fetchCakeVaultUserData({ account }))\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n    if (isRemovingStake) {\r\n      // unstaking\r\n      handleWithdrawal(convertedStakeAmount)\r\n    } else {\r\n      // staking\r\n      handleDeposit(convertedStakeAmount)\r\n    }\r\n  }\r\n\r\n  if (showRoiCalculator) {\r\n    return (\r\n      <RoiCalculatorModal\r\n        earningTokenPrice={earningTokenPrice}\r\n        stakingTokenPrice={stakingTokenPrice}\r\n        apr={apr}\r\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        linkHref={getTokenLink}\r\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\r\n        stakingTokenSymbol={stakingToken.symbol}\r\n        earningTokenSymbol={earningToken.symbol}\r\n        onBack={() => setShowRoiCalculator(false)}\r\n        initialValue={stakeAmount}\r\n        performanceFee={performanceFee}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\r\n          25%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\r\n          50%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\r\n          75%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\r\n          {t('Max')}\r\n        </StyledButton>\r\n      </Flex>\r\n      {isRemovingStake && hasUnstakingFee && (\r\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\r\n      )}\r\n      {!isRemovingStake && (\r\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Text mr=\"8px\" color=\"textSubtle\">\r\n            {t('Annual ROI at current rates')}:\r\n          </Text>\r\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\r\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\r\n            <IconButton variant=\"text\" scale=\"sm\">\r\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n            </IconButton>\r\n          </AnnualRoiContainer>\r\n        </Flex>\r\n      )}\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\r\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        </Button>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VaultStakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport { convertSharesToCake } from '../../../helpers'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\n\r\ninterface HasStakeActionProps {\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  performanceFee: number\r\n}\r\n\r\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { stakingToken } = pool\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const stakedDollarValue = cakePriceBusd.gt(0)\r\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\r\n    : 0\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(\r\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\r\n  )\r\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\">\r\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\r\n        <Text fontSize=\"12px\" color=\"textSubtle\">\r\n          {cakePriceBusd.gt(0) ? (\r\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\r\n          ) : (\r\n            <Skeleton mt=\"1px\" height={16} width={64} />\r\n          )}\r\n        </Text>\r\n      </Flex>\r\n      <Flex>\r\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"24px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n        </IconButton>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HasSharesActions\r\n","import React from 'react'\r\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DeserializedPool } from 'state/types'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\nimport HasSharesActions from './HasSharesActions'\r\n\r\ninterface VaultStakeActionsProps {\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  accountHasSharesStaked: boolean\r\n  performanceFee: number\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  accountHasSharesStaked,\r\n  performanceFee,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken } = pool\r\n  const { t } = useTranslation()\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(\r\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\r\n  )\r\n\r\n  const renderStakeAction = () => {\r\n    return accountHasSharesStaked ? (\r\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\r\n    ) : (\r\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default VaultStakeActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport VaultApprovalAction from './VaultApprovalAction'\r\nimport VaultStakeActions from './VaultStakeActions'\r\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\nconst CakeVaultCardActions: React.FC<{\r\n  pool: DeserializedPool\r\n  accountHasSharesStaked: boolean\r\n  isLoading: boolean\r\n  performanceFee: number\r\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\r\n  const { stakingToken, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        <Box display=\"inline\">\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {isVaultApproved ? (\r\n          <VaultStakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            accountHasSharesStaked={accountHasSharesStaked}\r\n            performanceFee={performanceFee}\r\n          />\r\n        ) : (\r\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCardActions\r\n","import React from 'react'\r\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\ninterface RecentCakeProfitBalanceProps {\r\n  cakeToDisplay: number\r\n  dollarValueToDisplay: number\r\n  dateStringToDisplay: string\r\n}\r\n\r\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\r\n  cakeToDisplay,\r\n  dollarValueToDisplay,\r\n  dateStringToDisplay,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    {\r\n      placement: 'bottom-end',\r\n    },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\r\n      </TooltipText>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitBalance\r\n","import React from 'react'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\r\n\r\nconst RecentCakeProfitCountdownRow = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    pricePerFullShare,\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    cakePriceBusd.toNumber(),\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\r\n      {hasAutoEarnings && (\r\n        <RecentCakeProfitBalance\r\n          cakeToDisplay={autoCakeToDisplay}\r\n          dollarValueToDisplay={autoUsdToDisplay}\r\n          dateStringToDisplay={dateStringToDisplay}\r\n        />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitCountdownRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport AprRow from '../PoolCard/AprRow'\r\nimport { StyledCard } from '../PoolCard/StyledCard'\r\nimport CardFooter from '../PoolCard/CardFooter'\r\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\r\nimport VaultCardActions from './VaultCardActions'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\r\n\r\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\r\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\r\n`\r\n\r\ninterface CakeVaultProps {\r\n  pool: DeserializedPool\r\n  showStakedOnly: boolean\r\n}\r\n\r\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { userShares, isLoading: isVaultUserDataLoading },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n\r\n  const accountHasSharesStaked = userShares && userShares.gt(0)\r\n  const isLoading = !pool.userData || isVaultUserDataLoading\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  if (showStakedOnly && !accountHasSharesStaked) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <StyledCard isActive>\r\n      <StyledCardHeader\r\n        isStaking={accountHasSharesStaked}\r\n        isAutoVault\r\n        earningToken={tokens.cake}\r\n        stakingToken={tokens.cake}\r\n      />\r\n      <StyledCardBody isLoading={isLoading}>\r\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\r\n        <Box mt=\"24px\">\r\n          <RecentCakeProfitRow />\r\n        </Box>\r\n        <Box mt=\"8px\">\r\n          <UnstakingFeeCountdownRow />\r\n        </Box>\r\n        <Flex mt=\"32px\" flexDirection=\"column\">\r\n          {account ? (\r\n            <VaultCardActions\r\n              pool={pool}\r\n              accountHasSharesStaked={accountHasSharesStaked}\r\n              isLoading={isLoading}\r\n              performanceFee={performanceFeeAsDecimal}\r\n            />\r\n          ) : (\r\n            <>\r\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                {t('Start earning')}\r\n              </Text>\r\n              <ConnectWalletButton />\r\n            </>\r\n          )}\r\n        </Flex>\r\n      </StyledCardBody>\r\n      <CardFooter pool={pool} account={account} />\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { ViewMode } from 'state/user/actions'\r\n\r\ninterface ToggleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-right: 0px;\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n    margin-right: 16px;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import React from 'react'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ViewMode } from 'state/user/actions'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ToggleView from './ToggleView/ToggleView'\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  a {\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n\r\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const { t } = useTranslation()\r\n\r\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n\r\n  const liveOrFinishedSwitch = (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {t('Live')}\r\n        </ButtonMenuItem>\r\n        <NotificationDot show={hasStakeInFinishedPools}>\r\n          <ButtonMenuItem id=\"finished-pools-button\" as={Link} to={`${url}/history`}>\r\n            {t('Finished')}\r\n          </ButtonMenuItem>\r\n        </NotificationDot>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n\r\n  const stakedOnlySwitch = (\r\n    <ToggleWrapper>\r\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\r\n      <Text> {t('Staked only')}</Text>\r\n    </ToggleWrapper>\r\n  )\r\n\r\n  return (\r\n    <ViewControls>\r\n      {viewModeToggle}\r\n      {stakedOnlySwitch}\r\n      {liveOrFinishedSwitch}\r\n    </ViewControls>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useCakeVaultContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport Balance from 'components/Balance'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\n\r\ninterface BountyModalProps {\r\n  onDismiss?: () => void\r\n  TooltipComponent: React.ElementType\r\n}\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\r\n  height: 1px;\r\n  margin: 16px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n  const { toastError, toastSuccess } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const {\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: { callFee },\r\n  } = useCakeVault()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const callFeeAsDecimal = callFee / 100\r\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\r\n\r\n  const estimatedDollarBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\r\n  }, [cakePriceBusd, estimatedCakeBountyReward])\r\n\r\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\r\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\r\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\r\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\r\n    placement: 'bottom',\r\n    tooltipPadding: { right: 15 },\r\n  })\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      const tx = await callWithGasPrice(cakeVaultContract, 'harvest', undefined, { gasLimit: 300000 })\r\n      const receipt = await tx.wait()\r\n      if (receipt.status) {\r\n        toastSuccess(\r\n          t('Bounty collected!'),\r\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n            {t('CAKE bounty has been sent to your wallet.')}\r\n          </ToastDescriptionWithTx>,\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      {tooltipVisible && tooltip}\r\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\r\n        <Text>{t('You’ll claim')}</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              color=\"textSubtle\"\r\n              value={dollarBountyToDisplay}\r\n              decimals={2}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <Divider />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('Pool total pending yield')}\r\n        </Text>\r\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('Bounty')}\r\n        </Text>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {callFeeAsDecimal}%\r\n        </Text>\r\n      </Flex>\r\n      {account ? (\r\n        <Button\r\n          isLoading={pendingTx}\r\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\r\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          onClick={handleConfirmClick}\r\n          mb=\"28px\"\r\n          id=\"autoCakeConfirmBounty\"\r\n        >\r\n          {pendingTx ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      ) : (\r\n        <ConnectWalletButton mb=\"28px\" />\r\n      )}\r\n      <Flex justifyContent=\"center\" alignItems=\"center\">\r\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\r\n          {t('What’s this?')}\r\n        </Text>\r\n        <span ref={targetRef}>\r\n          <HelpIcon color=\"textSubtle\" />\r\n        </span>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BountyModal\r\n","import React, { useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Text,\r\n  Flex,\r\n  HelpIcon,\r\n  Button,\r\n  Heading,\r\n  Skeleton,\r\n  useModal,\r\n  Box,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport Balance from 'components/Balance'\r\nimport BountyModal from './BountyModal'\r\n\r\nconst StyledCard = styled(Card)`\r\n  width: 100%;\r\n  flex: 1;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 240px;\r\n  }\r\n`\r\n\r\nconst BountyCard = () => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    estimatedCakeBountyReward,\r\n    fees: { callFee },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n\r\n  const estimatedDollarBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\r\n  }, [cakePriceBusd, estimatedCakeBountyReward])\r\n\r\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\r\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\r\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\r\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\r\n\r\n  const TooltipComponent = ({ fee }: { fee: number }) => (\r\n    <>\r\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\r\n      <Text mb=\"16px\">\r\n        {t(\r\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\r\n        )}\r\n      </Text>\r\n      <Text style={{ fontWeight: 'bold' }}>\r\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\r\n    placement: 'bottom-end',\r\n    tooltipOffset: [20, 10],\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <StyledCard>\r\n        <CardBody>\r\n          <Flex flexDirection=\"column\">\r\n            <Flex alignItems=\"center\" mb=\"12px\">\r\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\r\n                {t('Auto CAKE Bounty')}\r\n              </Text>\r\n              <Box ref={targetRef}>\r\n                <HelpIcon color=\"textSubtle\" />\r\n              </Box>\r\n            </Flex>\r\n          </Flex>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Flex flexDirection=\"column\" mr=\"12px\">\r\n              <Heading>\r\n                {hasFetchedCakeBounty ? (\r\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\r\n                ) : (\r\n                  <Skeleton height={20} width={96} mb=\"2px\" />\r\n                )}\r\n              </Heading>\r\n              {hasFetchedDollarBounty ? (\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  value={dollarBountyToDisplay}\r\n                  decimals={2}\r\n                  unit=\" USD\"\r\n                  prefix=\"~\"\r\n                />\r\n              ) : (\r\n                <Skeleton height={16} width={62} />\r\n              )}\r\n            </Flex>\r\n            <Button\r\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\r\n              onClick={onPresentBountyModal}\r\n              scale=\"sm\"\r\n              id=\"clickClaimVaultBounty\"\r\n            >\r\n              {t('Claim')}\r\n            </Button>\r\n          </Flex>\r\n        </CardBody>\r\n      </StyledCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BountyCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ButtonText = styled(Text)`\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  margin-right: 16px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst HelpButton = () => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\r\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\r\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\r\n          {t('Help')}\r\n        </ButtonText>\r\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\r\n      </Button>\r\n    </StyledLink>\r\n  )\r\n}\r\n\r\nexport default HelpButton\r\n","import { useState, useEffect } from 'react'\r\n\r\n/**\r\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\r\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\r\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\r\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\r\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\r\n * This hook \"shows\" element immediately when the isMounted is true\r\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\r\n * delayTime should be the same as animation time in most cases.\r\n */\r\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\r\n  const [shouldRender, setShouldRender] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let timeoutId: ReturnType<typeof setTimeout>\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true)\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\r\n    }\r\n    return () => clearTimeout(timeoutId)\r\n  }, [isMounted, delayTime, shouldRender])\r\n  return shouldRender\r\n}\r\n\r\nexport default useDelayedUnmount\r\n","import { Flex, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseCell = styled.div`\r\n  color: black;\r\n\r\n  padding: 24px 8px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\n\r\nexport const CellContent = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  max-height: 40px;\r\n  ${Text} {\r\n    line-height: 1;\r\n  }\r\n`\r\n\r\nexport default BaseCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface NameCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 5;\r\n  flex-direction: row;\r\n  padding-left: 12px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 150px;\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\r\n  const {\r\n    userData: { userShares },\r\n  } = useCakeVault()\r\n  const hasVaultShares = userShares && userShares.gt(0)\r\n\r\n  const stakingTokenSymbol = stakingToken.symbol\r\n  const earningTokenSymbol = earningToken.symbol\r\n\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\r\n\r\n  let title = `${t('Earn')} ${earningTokenSymbol}`\r\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\r\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\r\n\r\n  if (isAutoVault) {\r\n    title = t('Auto CAKE')\r\n    subtitle = t('Automatic restaking')\r\n  } else if (isManualCakePool) {\r\n    title = t('Manual CAKE')\r\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isAutoVault ? (\r\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\r\n      ) : (\r\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\r\n      )}\r\n      <CellContent>\r\n        {showStakedTag && (\r\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\r\n            {t('Staked')}\r\n          </Text>\r\n        )}\r\n        <Text bold={!isMobile} small={isMobile}>\r\n          {title}\r\n        </Text>\r\n        {showSubtitle && (\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {subtitle}\r\n          </Text>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default NameCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\n\r\ninterface EarningsCellProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 4.5;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 120px;\r\n  }\r\n`\r\n\r\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  const hasEarnings = account && earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isManualCakePool}\r\n    />,\r\n  )\r\n\r\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentCollect()\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {labelText}\r\n        </Text>\r\n        {!userDataLoaded && account ? (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        ) : (\r\n          <>\r\n            <Flex>\r\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\r\n                <Balance\r\n                  mt=\"4px\"\r\n                  bold={!isMobile}\r\n                  fontSize={isMobile ? '14px' : '16px'}\r\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\r\n                  decimals={hasEarnings ? 5 : 1}\r\n                  value={hasEarnings ? earningTokenBalance : 0}\r\n                />\r\n                {hasEarnings ? (\r\n                  <>\r\n                    {earningTokenPrice > 0 && (\r\n                      <Balance\r\n                        display=\"inline\"\r\n                        fontSize=\"12px\"\r\n                        color=\"textSubtle\"\r\n                        decimals={2}\r\n                        prefix=\"~\"\r\n                        value={earningTokenDollarBalance}\r\n                        unit=\" USD\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\r\n                    0 USD\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EarningsCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport Balance from 'components/Balance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getAprData } from 'views/Pools/helpers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nconst AprLabelContainer = styled(Flex)`\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\ninterface AprProps extends FlexProps {\r\n  pool: DeserializedPool\r\n  stakedBalance: BigNumber\r\n  showIcon: boolean\r\n  performanceFee?: number\r\n}\r\n\r\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\r\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\r\n  const { t } = useTranslation()\r\n\r\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <RoiCalculatorModal\r\n      earningTokenPrice={earningTokenPrice}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\r\n      apr={apr}\r\n      stakingTokenSymbol={stakingToken.symbol}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      autoCompoundFrequency={autoCompoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\r\n      {earningsPercentageToDisplay || isFinished ? (\r\n        <>\r\n          <Balance\r\n            onClick={openRoiModal}\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={isFinished ? 0 : earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n          />\r\n          {!isFinished && showIcon && (\r\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\r\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\r\n            </Button>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Skeleton width=\"80px\" height=\"16px\" />\r\n      )}\r\n    </AprLabelContainer>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport Apr from '../Apr'\r\n\r\ninterface AprCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 1 0 50px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n  }\r\n`\r\n\r\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const { userData } = pool\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('APR')}\r\n        </Text>\r\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AprCell\r\n","import React, { useMemo } from 'react'\r\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport Balance from 'components/Balance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface TotalStakedCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\r\n  const { totalCakeInVault } = useCakeVault()\r\n\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const totalStakedBalance = useMemo(() => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('Total staked')}\r\n        </Text>\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <Flex height=\"20px\" alignItems=\"center\">\r\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n          </Flex>\r\n        ) : (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\r\nimport { getBscScanLink } from 'utils'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface FinishCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\r\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\r\n  const { currentBlock } = useBlock()\r\n  const { t } = useTranslation()\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isCakePool = sousId === 0\r\n\r\n  const renderBlocks = shouldShowBlockCountdown ? (\r\n    <Flex alignItems=\"center\">\r\n      <Flex flex=\"1.3\">\r\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\r\n        <Text ml=\"4px\" textTransform=\"lowercase\">\r\n          {t('Blocks')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex flex=\"1\">\r\n        <Link\r\n          external\r\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <TimerIcon ml=\"4px\" />\r\n        </Link>\r\n      </Flex>\r\n    </Flex>\r\n  ) : (\r\n    <Text>-</Text>\r\n  )\r\n\r\n  // A bit hacky way to determine if public data is loading relying on totalStaked\r\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\r\n  // anywhere else\r\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\r\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\r\n        </Text>\r\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EndsInCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell from './BaseCell'\r\n\r\ninterface ExpandActionCellProps {\r\n  expanded: boolean\r\n  isFullLayout: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex: 1;\r\n  padding-right: 12px;\r\n  padding-left: 0px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n    padding-right: 32px;\r\n    padding-left: 8px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 24px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isFullLayout && (\r\n        <Text color=\"primary\" bold>\r\n          {expanded ? t('Hide') : t('Details')}\r\n        </Text>\r\n      )}\r\n      <ArrowIcon color=\"primary\" toggled={expanded} />\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\r\n  }\r\n}\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 32px;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n","import React from 'react'\r\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { DeserializedPool } from 'state/types'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\n\r\ninterface HarvestActionProps extends DeserializedPool {\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\r\n  sousId,\r\n  poolCategory,\r\n  earningToken,\r\n  userData,\r\n  userDataLoaded,\r\n  earningTokenPrice,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  const hasEarnings = earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const isCompoundPool = sousId === 0\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  const actionTitle = (\r\n    <>\r\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n        {earningToken.symbol}{' '}\r\n      </Text>\r\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n        {t('Earned')}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Heading>0</Heading>\r\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>{actionTitle}</ActionTitles>\r\n      <ActionContent>\r\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n          {isCompoundPool ? t('Collect') : t('Harvest')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\r\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\r\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps {\r\n  pool: DeserializedPool\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    stakingLimit,\r\n    isFinished,\r\n    poolCategory,\r\n    userData,\r\n    stakingTokenPrice,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const stakingTokenContract = useERC20(stakingToken.address || '')\r\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\r\n    stakingTokenContract,\r\n    sousId,\r\n    earningToken.symbol,\r\n  )\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\r\n    useVaultApprove(setLastUpdated)\r\n\r\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\r\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\r\n\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const hasSharesStaked = userShares && userShares.gt(0)\r\n  const isVaultWithShares = isAutoVault && hasSharesStaked\r\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\r\n\r\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  const onStake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultStake()\r\n    } else {\r\n      onPresentStake()\r\n    }\r\n  }\r\n\r\n  const onUnstake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultUnstake()\r\n    } else {\r\n      onPresentUnstake()\r\n    }\r\n  }\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <ConnectWalletButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (needsApproval) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Enable pool')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n            {t('Enable')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  // Wallet connected, user data loaded and approved\r\n  if (isNotVaultAndHasStake || isVaultWithShares) {\r\n    return (\r\n      <ActionContainer isAutoVault={isAutoVault}>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n            {stakingToken.symbol}{' '}\r\n          </Text>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n            <Balance\r\n              lineHeight=\"1\"\r\n              bold\r\n              fontSize=\"20px\"\r\n              decimals={5}\r\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\r\n            />\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              display=\"inline\"\r\n              color=\"textSubtle\"\r\n              decimals={2}\r\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Flex>\r\n          <IconButtonWrapper>\r\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\r\n              <MinusIcon color=\"primary\" width=\"14px\" />\r\n            </IconButton>\r\n            {reachStakingLimit ? (\r\n              <span ref={targetRef}>\r\n                <IconButton variant=\"secondary\" disabled>\r\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : (\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n                disabled={isFinished}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            )}\r\n          </IconButtonWrapper>\r\n          {tooltipVisible && tooltip}\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n          {t('Stake')}{' '}\r\n        </Text>\r\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n          {stakingToken.symbol}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n          variant=\"secondary\"\r\n          disabled={isFinished}\r\n        >\r\n          {t('Stake')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\r\n\r\ninterface AutoHarvestActionProps extends DeserializedPool {\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    pricePerFullShare,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  const earningTokenBalance = autoCakeToDisplay\r\n  const earningTokenDollarBalance = autoUsdToDisplay\r\n  const hasEarnings = hasAutoEarnings\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const actionTitle = (\r\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n      {t('Recent CAKE profit')}\r\n    </Text>\r\n  )\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Heading>0</Heading>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer isAutoVault>\r\n      <ActionTitles>{actionTitle}</ActionTitles>\r\n      <ActionContent>\r\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\r\n          <UnstakingFeeCountdownRow isTableVariant />\r\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            {tooltipVisible && tooltip}\r\n            <TooltipText ref={targetRef} small>\r\n              {t('Performance Fee')}\r\n            </TooltipText>\r\n            <Flex alignItems=\"center\">\r\n              <Text ml=\"4px\" small>\r\n                {performanceFee / 100}%\r\n              </Text>\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default AutoHarvestAction\r\n","import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  HelpIcon,\r\n  Link,\r\n  LinkExternal,\r\n  MetamaskIcon,\r\n  Skeleton,\r\n  Text,\r\n  TimerIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport Harvest from './Harvest'\r\nimport Stake from './Stake'\r\nimport Apr from '../Apr'\r\nimport AutoHarvest from './AutoHarvest'\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 700px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 700px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: center;\r\n  padding: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\ntype MediaBreakpoints = {\r\n  isXs: boolean\r\n  isSm: boolean\r\n  isMd: boolean\r\n  isLg: boolean\r\n  isXl: boolean\r\n  isXxl: boolean\r\n}\r\n\r\ninterface ActionPanelProps {\r\n  account: string\r\n  pool: DeserializedPool\r\n  userDataLoaded: boolean\r\n  expanded: boolean\r\n  breakpoints: MediaBreakpoints\r\n}\r\n\r\nconst InfoSection = styled(Box)`\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  flex-basis: auto;\r\n  padding: 8px 8px;\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding: 0;\r\n    flex-basis: 230px;\r\n  }\r\n`\r\n\r\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    userData,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const { currentBlock } = useBlock()\r\n  const { isXs, isSm, isMd } = breakpoints\r\n  const showSubtitle = (isXs || isSm) && sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\r\n  const tokenAddress = earningToken.address || ''\r\n\r\n  const {\r\n    totalCakeInVault,\r\n    userData: { userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const poolStakingTokenBalance = isAutoVault\r\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\r\n    : stakedBalance.plus(stakingTokenBalance)\r\n\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const {\r\n    targetRef: tagTargetRef,\r\n    tooltip: tagTooltip,\r\n    tooltipVisible: tagTooltipVisible,\r\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom-start',\r\n  })\r\n\r\n  const maxStakeRow = stakingLimit.gt(0) ? (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n      <Text>{t('Max. stake per user')}:</Text>\r\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n    </Flex>\r\n  ) : null\r\n\r\n  const blocksRow =\r\n    blocksRemaining || blocksUntilStart ? (\r\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n        <Flex>\r\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\r\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n              {t('Blocks')}\r\n            </Text>\r\n            <TimerIcon ml=\"4px\" color=\"primary\" />\r\n          </Link>\r\n        </Flex>\r\n      </Flex>\r\n    ) : (\r\n      <Skeleton width=\"56px\" height=\"16px\" />\r\n    )\r\n\r\n  const aprRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\r\n      <Apr\r\n        pool={pool}\r\n        showIcon\r\n        stakedBalance={poolStakingTokenBalance}\r\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\r\n      />\r\n    </Flex>\r\n  )\r\n\r\n  const totalStakedRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\r\n      <Flex alignItems=\"center\">\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <>\r\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n            <span ref={totalStakedTargetRef}>\r\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <Skeleton width=\"56px\" height=\"16px\" />\r\n        )}\r\n        {totalStakedTooltipVisible && totalStakedTooltip}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n\r\n  return (\r\n    <StyledActionPanel expanded={expanded}>\r\n      <InfoSection>\r\n        {maxStakeRow}\r\n        {(isXs || isSm) && aprRow}\r\n        {(isXs || isSm || isMd) && totalStakedRow}\r\n        {shouldShowBlockCountdown && blocksRow}\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={`/info/token/${earningToken.address}`} bold={false}>\r\n            {t('See Token Info')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={earningToken.projectLink} bold={false}>\r\n            {t('View Project Site')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        {poolContractAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <LinkExternal\r\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n              bold={false}\r\n            >\r\n              {t('View Contract')}\r\n            </LinkExternal>\r\n          </Flex>\r\n        )}\r\n        {account && isMetaMaskInScope && tokenAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <Button\r\n              variant=\"text\"\r\n              p=\"0\"\r\n              height=\"auto\"\r\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\r\n            >\r\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\r\n              <MetamaskIcon ml=\"4px\" />\r\n            </Button>\r\n          </Flex>\r\n        )}\r\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n        {tagTooltipVisible && tagTooltip}\r\n        <span ref={tagTargetRef}>\r\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n        </span>\r\n      </InfoSection>\r\n      <ActionContainer>\r\n        {showSubtitle && (\r\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\r\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\r\n          </Text>\r\n        )}\r\n        {pool.isAutoVault ? (\r\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\r\n        ) : (\r\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\r\n        )}\r\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\r\n      </ActionContainer>\r\n    </StyledActionPanel>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface AutoEarningsCellProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 4.5;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 120px;\r\n  }\r\n`\r\n\r\nconst HelpIconWrapper = styled.div`\r\n  align-self: center;\r\n`\r\n\r\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const { earningTokenPrice } = pool\r\n\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  const labelText = t('Recent CAKE profit')\r\n  const earningTokenBalance = autoCakeToDisplay\r\n  const hasEarnings = hasAutoEarnings\r\n  const earningTokenDollarBalance = autoUsdToDisplay\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {labelText}\r\n        </Text>\r\n        {!userDataLoaded && account ? (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        ) : (\r\n          <>\r\n            {tooltipVisible && tooltip}\r\n            <Flex>\r\n              <Box mr=\"8px\" height=\"32px\">\r\n                <Balance\r\n                  mt=\"4px\"\r\n                  bold={!isMobile}\r\n                  fontSize={isMobile ? '14px' : '16px'}\r\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\r\n                  decimals={hasEarnings ? 5 : 1}\r\n                  value={hasEarnings ? earningTokenBalance : 0}\r\n                />\r\n                {hasEarnings ? (\r\n                  <>\r\n                    {earningTokenPrice > 0 && (\r\n                      <Balance\r\n                        display=\"inline\"\r\n                        fontSize=\"12px\"\r\n                        color=\"textSubtle\"\r\n                        decimals={2}\r\n                        prefix=\"~\"\r\n                        value={earningTokenDollarBalance}\r\n                        unit=\" USD\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\r\n                    0 USD\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n              {hasEarnings && !isMobile && (\r\n                <HelpIconWrapper ref={targetRef}>\r\n                  <HelpIcon color=\"textSubtle\" />\r\n                </HelpIconWrapper>\r\n              )}\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AutoEarningsCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport Apr from '../Apr'\r\nimport { convertSharesToCake } from '../../../helpers'\r\n\r\ninterface AprCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 1 0 50px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n  }\r\n`\r\n\r\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n\r\n  const {\r\n    userData: { userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('APY')}\r\n        </Text>\r\n        <Apr\r\n          pool={pool}\r\n          stakedBalance={cakeAsBigNumber}\r\n          performanceFee={performanceFeeAsDecimal}\r\n          showIcon={!isMobile}\r\n        />\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AutoAprCell\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport NameCell from './Cells/NameCell'\r\nimport EarningsCell from './Cells/EarningsCell'\r\nimport AprCell from './Cells/AprCell'\r\nimport TotalStakedCell from './Cells/TotalStakedCell'\r\nimport EndsInCell from './Cells/EndsInCell'\r\nimport ExpandActionCell from './Cells/ExpandActionCell'\r\nimport ActionPanel from './ActionPanel/ActionPanel'\r\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\r\nimport AutoAprCell from './Cells/AutoAprCell'\r\n\r\ninterface PoolRowProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledRow = styled.div`\r\n  background-color: transparent;\r\n  display: flex;\r\n  cursor: pointer;\r\n`\r\n\r\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\r\n  const isLargerScreen = isLg || isXl || isXxl\r\n  const [expanded, setExpanded] = useState(false)\r\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded((prev) => !prev)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\r\n        <NameCell pool={pool} />\r\n        {pool.isAutoVault ? (\r\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\r\n        ) : (\r\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\r\n        )}\r\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\r\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\r\n        {isDesktop && <EndsInCell pool={pool} />}\r\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\r\n      </StyledRow>\r\n      {shouldRenderActionPanel && (\r\n        <ActionPanel\r\n          account={account}\r\n          pool={pool}\r\n          userDataLoaded={userDataLoaded}\r\n          expanded={expanded}\r\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PoolRow\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DeserializedPool } from 'state/types'\r\nimport PoolRow from './PoolRow'\r\n\r\ninterface PoolsTableProps {\r\n  pools: DeserializedPool[]\r\n  userDataLoaded: boolean\r\n  account: string\r\n}\r\n\r\nconst StyledTable = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  > div:not(:last-child) {\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\r\n  }\r\n`\r\n\r\nconst StyledTableBorder = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 1px 1px 3px 1px;\r\n  background-size: 400% 400%;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\r\n  const { t } = useTranslation()\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n  return (\r\n    <StyledTableBorder>\r\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\r\n        {pools.map((pool) => (\r\n          <PoolRow\r\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\r\n            pool={pool}\r\n            account={account}\r\n            userDataLoaded={userDataLoaded}\r\n          />\r\n        ))}\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </StyledTable>\r\n    </StyledTableBorder>\r\n  )\r\n}\r\n\r\nexport default PoolsTable\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\r\nimport {\r\n  useFetchPublicPoolsData,\r\n  usePools,\r\n  useFetchUserPools,\r\n  useFetchCakeVault,\r\n  useCakeVault,\r\n} from 'state/pools/hooks'\r\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\r\nimport { latinise } from 'utils/latinise'\r\nimport FlexLayout from 'components/Layout/Flex'\r\nimport Page from 'components/Layout/Page'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\r\nimport { ViewMode } from 'state/user/actions'\r\nimport Loading from 'components/Loading'\r\nimport PoolCard from './components/PoolCard'\r\nimport CakeVaultCard from './components/CakeVaultCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport BountyCard from './components/BountyCard'\r\nimport HelpButton from './components/HelpButton'\r\nimport PoolsTable from './components/PoolsTable/PoolsTable'\r\nimport { getAprData, getCakeVaultEarnings } from './helpers'\r\n\r\nconst CardLayout = styled(FlexLayout)`\r\n  justify-content: center;\r\n`\r\n\r\nconst PoolControls = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst ControlStretch = styled(Flex)`\r\n  > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst NUMBER_OF_POOLS_VISIBLE = 12\r\n\r\nconst Pools: React.FC = () => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools()\r\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\r\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\r\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\r\n  const { observerRef, isIntersecting } = useIntersectionObserver()\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const chosenPoolsLength = useRef(0)\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n  } = useCakeVault()\r\n  const accountHasVaultShares = userShares && userShares.gt(0)\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  const pools = useMemo(() => {\r\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\r\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\r\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\r\n  }, [poolsWithoutAutoVault])\r\n\r\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\r\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\r\n  const stakedOnlyFinishedPools = useMemo(\r\n    () =>\r\n      finishedPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [finishedPools, accountHasVaultShares],\r\n  )\r\n  const stakedOnlyOpenPools = useMemo(\r\n    () =>\r\n      openPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [openPools, accountHasVaultShares],\r\n  )\r\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\r\n\r\n  usePollFarmsPublicData()\r\n  useFetchCakeVault()\r\n  useFetchPublicPoolsData()\r\n  useFetchUserPools(account)\r\n\r\n  useEffect(() => {\r\n    if (isIntersecting) {\r\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\r\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\r\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\r\n        }\r\n        return poolsCurrentlyVisible\r\n      })\r\n    }\r\n  }, [isIntersecting])\r\n\r\n  const showFinishedPools = location.pathname.includes('history')\r\n\r\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value)\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  const sortPools = (poolsToSort: DeserializedPool[]) => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: DeserializedPool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\r\n          'desc',\r\n        )\r\n      case 'earned':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: DeserializedPool) => {\r\n            if (!pool.userData || !pool.earningTokenPrice) {\r\n              return 0\r\n            }\r\n            return pool.isAutoVault\r\n              ? getCakeVaultEarnings(\r\n                  account,\r\n                  cakeAtLastUserAction,\r\n                  userShares,\r\n                  pricePerFullShare,\r\n                  pool.earningTokenPrice,\r\n                ).autoUsdToDisplay\r\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\r\n          },\r\n          'desc',\r\n        )\r\n      case 'totalStaked':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: DeserializedPool) => {\r\n            let totalStaked = Number.NaN\r\n            if (pool.isAutoVault) {\r\n              if (totalCakeInVault.isFinite()) {\r\n                totalStaked = +formatUnits(\r\n                  ethers.BigNumber.from(totalCakeInVault.toString()),\r\n                  pool.stakingToken.decimals,\r\n                )\r\n              }\r\n            } else if (pool.sousId === 0) {\r\n              if (pool.totalStaked?.isFinite() && totalCakeInVault.isFinite()) {\r\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\r\n                  totalCakeInVault.toString(),\r\n                )\r\n                totalStaked = +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals)\r\n              }\r\n            } else if (pool.totalStaked?.isFinite()) {\r\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\r\n            }\r\n            return Number.isFinite(totalStaked) ? totalStaked : 0\r\n          },\r\n          'desc',\r\n        )\r\n      default:\r\n        return poolsToSort\r\n    }\r\n  }\r\n\r\n  let chosenPools\r\n  if (showFinishedPools) {\r\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\r\n  } else {\r\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\r\n  }\r\n\r\n  if (searchQuery) {\r\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\r\n    chosenPools = chosenPools.filter((pool) =>\r\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\r\n    )\r\n  }\r\n\r\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\r\n  chosenPoolsLength.current = chosenPools.length\r\n\r\n  const cardLayout = (\r\n    <CardLayout>\r\n      {chosenPools.map((pool) =>\r\n        pool.isAutoVault ? (\r\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\r\n        ) : (\r\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\r\n        ),\r\n      )}\r\n    </CardLayout>\r\n  )\r\n\r\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\r\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n              {t('Syrup Pools')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\">\r\n              {t('Just stake some tokens to earn.')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\">\r\n              {t('High APR, low risk.')}\r\n            </Heading>\r\n          </Flex>\r\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\r\n            <HelpButton />\r\n            <BountyCard />\r\n          </Flex>\r\n        </Flex>\r\n      </PageHeader>\r\n      <Page>\r\n        <PoolControls>\r\n          <PoolTabButtons\r\n            stakedOnly={stakedOnly}\r\n            setStakedOnly={setStakedOnly}\r\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\r\n            viewMode={viewMode}\r\n            setViewMode={setViewMode}\r\n          />\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Sort by')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <Select\r\n                  options={[\r\n                    {\r\n                      label: t('Hot'),\r\n                      value: 'hot',\r\n                    },\r\n                    {\r\n                      label: t('APR'),\r\n                      value: 'apr',\r\n                    },\r\n                    {\r\n                      label: t('Earned'),\r\n                      value: 'earned',\r\n                    },\r\n                    {\r\n                      label: t('Total staked'),\r\n                      value: 'totalStaked',\r\n                    },\r\n                  ]}\r\n                  onOptionChange={handleSortOptionChange}\r\n                />\r\n              </ControlStretch>\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Search')}\r\n              </Text>\r\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </PoolControls>\r\n        {showFinishedPools && (\r\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\r\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\r\n          </Text>\r\n        )}\r\n        {account && !userDataLoaded && stakedOnly && (\r\n          <Flex justifyContent=\"center\" mb=\"4px\">\r\n            <Loading />\r\n          </Flex>\r\n        )}\r\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\r\n        <div ref={observerRef} />\r\n        <Image\r\n          mx=\"auto\"\r\n          mt=\"12px\"\r\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\r\n          alt=\"Pancake illustration\"\r\n          width={192}\r\n          height={184.5}\r\n        />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pools\r\n","import { Token } from '@pancakeswap/sdk'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nconst { bondly, safemoon } = tokens\r\n\r\ninterface WarningTokenList {\r\n  [key: string]: Token\r\n}\r\n\r\nconst SwapWarningTokens = <WarningTokenList>{\r\n  safemoon,\r\n  bondly,\r\n}\r\n\r\nexport default SwapWarningTokens\r\n","import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useENS from '../../../hooks/ENS/useENS'\r\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\r\nimport { AutoColumn } from '../../../components/Layout/Column'\r\nimport { RowBetween } from '../../../components/Layout/Row'\r\nimport { getBscScanLink } from '../../../utils'\r\n\r\nconst InputPanel = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: 1.25rem;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  z-index: 1;\r\n  width: 100%;\r\n`\r\n\r\nconst ContainerRow = styled.div<{ error: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 1.25rem;\r\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\r\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\r\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  flex: 1;\r\n  padding: 1rem;\r\n`\r\n\r\nconst Input = styled.input<{ error?: boolean }>`\r\n  font-size: 1.25rem;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n`\r\n\r\nexport default function AddressInputPanel({\r\n  id,\r\n  value,\r\n  onChange,\r\n}: {\r\n  id?: string\r\n  // the typed string value\r\n  value: string\r\n  // triggers whenever the typed value changes\r\n  onChange: (value: string) => void\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const { address, loading, name } = useENS(value)\r\n\r\n  const handleInput = useCallback(\r\n    (event) => {\r\n      const input = event.target.value\r\n      const withoutSpaces = input.replace(/\\s+/g, '')\r\n      onChange(withoutSpaces)\r\n    },\r\n    [onChange],\r\n  )\r\n\r\n  const error = Boolean(value.length > 0 && !loading && !address)\r\n\r\n  return (\r\n    <InputPanel id={id}>\r\n      <ContainerRow error={error}>\r\n        <InputContainer>\r\n          <AutoColumn gap=\"md\">\r\n            <RowBetween>\r\n              <Text>{t('Recipient')}</Text>\r\n              {address && chainId && (\r\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\r\n                  ({t('View on BscScan')})\r\n                </Link>\r\n              )}\r\n            </RowBetween>\r\n            <Input\r\n              className=\"recipient-address-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"off\"\r\n              spellCheck=\"false\"\r\n              placeholder={t('Wallet Address or ENS name')}\r\n              error={error}\r\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\r\n              onChange={handleInput}\r\n              value={value}\r\n            />\r\n          </AutoColumn>\r\n        </InputContainer>\r\n      </ContainerRow>\r\n    </InputPanel>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\r\nimport styled, { css } from 'styled-components'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  padding: 1rem;\r\n  background-Image: url ( https://dtexchange.netlify.app/static/media/back.a17ba737.png )\r\n`\r\n\r\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\r\n  padding: 2px;\r\n\r\n  ${({ clickable }) =>\r\n    clickable\r\n      ? css`\r\n          :hover {\r\n            cursor: pointer;\r\n            opacity: 0.8;\r\n          }\r\n        `\r\n      : null}\r\n`\r\n\r\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\r\n  color: ${({ theme, severity }) =>\r\n    severity === 3 || severity === 4\r\n      ? theme.colors.failure\r\n      : severity === 2\r\n      ? theme.colors.warning\r\n      : severity === 1\r\n      ? theme.colors.text\r\n      : theme.colors.success};\r\n`\r\n\r\nexport const StyledBalanceMaxMini = styled.button`\r\n  height: 22px;\r\n  width: 22px;\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n\r\n )\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0.2rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 400;\r\n  margin-left: 0.4rem;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  float: right;\r\n\r\n  :hover {\r\n    background-color: ${({ theme }) => theme.colors.dropdown};\r\n  }\r\n  :focus {\r\n    background-color: ${({ theme }) => theme.colors.dropdown};\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\r\n  width: 220px;\r\n`\r\n\r\nconst SwapCallbackErrorInner = styled.div`\r\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.825rem;\r\n  width: 100%;\r\n  padding: 3rem 1.25rem 1rem 1rem;\r\n  margin-top: -2rem;\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  z-index: -1;\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\r\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px;\r\n  border-radius: 12px;\r\n  min-width: 48px;\r\n  height: 48px;\r\n`\r\n\r\nexport function SwapCallbackError({ error }: { error: string }) {\r\n  return (\r\n    <SwapCallbackErrorInner>\r\n      <SwapCallbackErrorInnerAlertTriangle>\r\n        <ErrorIcon width=\"24px\" />\r\n      </SwapCallbackErrorInnerAlertTriangle>\r\n      <p>{error}</p>\r\n    </SwapCallbackErrorInner>\r\n  )\r\n}\r\n\r\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\r\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\r\n  padding: 0.5rem;\r\n  border-radius: 12px;\r\n  margin-top: 8px;\r\n`\r\n","import { Percent } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { warningSeverity } from 'utils/prices'\r\nimport { ONE_BIPS } from '../../../config/constants'\r\nimport { ErrorText } from './styleds'\r\n\r\n/**\r\n * Formatted version of price impact text with warning colors\r\n */\r\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\r\n  return (\r\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\r\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\r\n    </ErrorText>\r\n  )\r\n}\r\n","import React, { useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Field } from 'state/swap/actions'\r\nimport {\r\n  computeSlippageAdjustedAmounts,\r\n  computeTradePriceBreakdown,\r\n  formatExecutionPrice,\r\n  warningSeverity,\r\n} from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\r\n\r\nconst SwapModalFooterContainer = styled(AutoColumn)`\r\n  margin-top: 24px;\r\n  padding: 16px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport default function SwapModalFooter({\r\n  trade,\r\n  onConfirm,\r\n  allowedSlippage,\r\n  swapErrorMessage,\r\n  disabledConfirm,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  disabledConfirm: boolean\r\n}) {\r\n  const { t } = useTranslation()\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\r\n    [allowedSlippage, trade],\r\n  )\r\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const severity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  return (\r\n    <>\r\n      <SwapModalFooterContainer>\r\n        <RowBetween align=\"center\">\r\n          <Text fontSize=\"14px\">{t('Price')}</Text>\r\n          <Text\r\n            fontSize=\"14px\"\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              textAlign: 'right',\r\n              paddingLeft: '10px',\r\n            }}\r\n          >\r\n            {formatExecutionPrice(trade, showInverted)}\r\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n              <AutoRenewIcon width=\"14px\" />\r\n            </StyledBalanceMaxMini>\r\n          </Text>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\r\n            </Text>\r\n            <QuestionHelper\r\n              text={t(\r\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\r\n              )}\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\r\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\r\n            </Text>\r\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? trade.outputAmount.currency.symbol\r\n                : trade.inputAmount.currency.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\r\n            <QuestionHelper\r\n              text={t('The difference between the market price and your price due to trade size.')}\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\r\n            <QuestionHelper\r\n              text={\r\n                <>\r\n                  <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\r\n                  <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\r\n                  <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\r\n                  <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\r\n                </>\r\n              }\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n          </Text>\r\n        </RowBetween>\r\n      </SwapModalFooterContainer>\r\n\r\n      <AutoRow>\r\n        <Button\r\n          variant={severity > 2 ? 'danger' : 'primary'}\r\n          onClick={onConfirm}\r\n          disabled={disabledConfirm}\r\n          mt=\"12px\"\r\n          id=\"confirm-swap-or-send\"\r\n          width=\"100%\"\r\n        >\r\n          {severity > 2 ? t('Swap Anyway') : t('Confirm Swap')}\r\n        </Button>\r\n\r\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n      </AutoRow>\r\n    </>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\r\n\r\nexport default function SwapModalHeader({\r\n  trade,\r\n  allowedSlippage,\r\n  recipient,\r\n  showAcceptChanges,\r\n  onAcceptChanges,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  recipient: string | null\r\n  showAcceptChanges: boolean\r\n  onAcceptChanges: () => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\r\n    [trade, allowedSlippage],\r\n  )\r\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  const amount =\r\n    trade.tradeType === TradeType.EXACT_INPUT\r\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\r\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\r\n  const symbol =\r\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\r\n\r\n  const tradeInfoText =\r\n    trade.tradeType === TradeType.EXACT_INPUT\r\n      ? t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will revert.', {\r\n          amount,\r\n          symbol,\r\n        })\r\n      : t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will revert.', {\r\n          amount,\r\n          symbol,\r\n        })\r\n\r\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\r\n\r\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\r\n\r\n  const recipientInfoText = t('Output will be sent to %recipient%', {\r\n    recipient: truncatedRecipient,\r\n  })\r\n\r\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\r\n\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap=\"0px\">\r\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\r\n          <TruncatedText\r\n            fontSize=\"24px\"\r\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\r\n          >\r\n            {trade.inputAmount.toSignificant(6)}\r\n          </TruncatedText>\r\n        </RowFixed>\r\n        <RowFixed gap=\"0px\">\r\n          <Text fontSize=\"24px\" ml=\"10px\">\r\n            {trade.inputAmount.currency.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowFixed>\r\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\r\n      </RowFixed>\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap=\"0px\">\r\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\r\n          <TruncatedText\r\n            fontSize=\"24px\"\r\n            color={\r\n              priceImpactSeverity > 2\r\n                ? 'failure'\r\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\r\n                ? 'primary'\r\n                : 'text'\r\n            }\r\n          >\r\n            {trade.outputAmount.toSignificant(6)}\r\n          </TruncatedText>\r\n        </RowFixed>\r\n        <RowFixed gap=\"0px\">\r\n          <Text fontSize=\"24px\" ml=\"10px\">\r\n            {trade.outputAmount.currency.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      {showAcceptChanges ? (\r\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <ErrorIcon mr=\"8px\" />\r\n              <Text bold> {t('Price Updated')}</Text>\r\n            </RowFixed>\r\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\r\n          </RowBetween>\r\n        </SwapShowAcceptChanges>\r\n      ) : null}\r\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\r\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\r\n          {estimatedText}\r\n          <b>\r\n            {amount} {symbol}\r\n          </b>\r\n          {transactionRevertText}\r\n        </Text>\r\n      </AutoColumn>\r\n      {recipient !== null ? (\r\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\r\n          <Text color=\"textSubtle\">\r\n            {recipientSentToText}\r\n            <b title={recipient}>{truncatedRecipient}</b>\r\n            {postSentToText}\r\n          </Text>\r\n        </AutoColumn>\r\n      ) : null}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\r\nimport { InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent,\r\n} from 'components/TransactionConfirmationModal'\r\nimport SwapModalFooter from './SwapModalFooter'\r\nimport SwapModalHeader from './SwapModalHeader'\r\n\r\n/**\r\n * Returns true if the trade requires a confirmation of details before we can submit it\r\n * @param tradeA trade A\r\n * @param tradeB trade B\r\n */\r\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\r\n  return (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\r\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\r\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\r\n  )\r\n}\r\ninterface ConfirmSwapModalProps {\r\n  trade?: Trade\r\n  originalTrade?: Trade\r\n  attemptingTxn: boolean\r\n  txHash?: string\r\n  recipient: string | null\r\n  allowedSlippage: number\r\n  onAcceptChanges: () => void\r\n  onConfirm: () => void\r\n  swapErrorMessage?: string\r\n  customOnDismiss?: () => void\r\n}\r\n\r\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\r\n  trade,\r\n  originalTrade,\r\n  onAcceptChanges,\r\n  allowedSlippage,\r\n  onConfirm,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  recipient,\r\n  swapErrorMessage,\r\n  attemptingTxn,\r\n  txHash,\r\n}) => {\r\n  const showAcceptChanges = useMemo(\r\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\r\n    [originalTrade, trade],\r\n  )\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const modalHeader = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalHeader\r\n        trade={trade}\r\n        allowedSlippage={allowedSlippage}\r\n        recipient={recipient}\r\n        showAcceptChanges={showAcceptChanges}\r\n        onAcceptChanges={onAcceptChanges}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\r\n\r\n  const modalBottom = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalFooter\r\n        onConfirm={onConfirm}\r\n        trade={trade}\r\n        disabledConfirm={showAcceptChanges}\r\n        swapErrorMessage={swapErrorMessage}\r\n        allowedSlippage={allowedSlippage}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\r\n\r\n  // text to show while loading\r\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\r\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\r\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\r\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\r\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\r\n  })\r\n\r\n  const confirmationContent = useCallback(\r\n    () =>\r\n      swapErrorMessage ? (\r\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\r\n      ) : (\r\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\r\n      ),\r\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\r\n  )\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      title={t('Confirm Swap')}\r\n      onDismiss={onDismiss}\r\n      customOnDismiss={customOnDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={confirmationContent}\r\n      pendingText={pendingText}\r\n      currencyToAdd={trade?.outputAmount.currency}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ConfirmSwapModal\r\n","import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\r\nfunction useLast<T>(\r\n  value: T | undefined | null,\r\n  filterFn?: (value: T | null | undefined) => boolean,\r\n): T | null | undefined {\r\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\r\n  useEffect(() => {\r\n    setLast((prev) => {\r\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\r\n      if (shouldUse) return value\r\n      return prev\r\n    })\r\n  }, [filterFn, value])\r\n  return last\r\n}\r\n\r\nfunction isDefined<T>(x: T | null | undefined): x is T {\r\n  return x !== null && x !== undefined\r\n}\r\n\r\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\r\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\r\n  return useLast(value, isDefined)\r\n}\r\n\r\nexport default useLastTruthy\r\n","import React, { Fragment, memo } from 'react'\r\nimport { Trade } from '@pancakeswap/sdk'\r\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport { unwrappedToken } from 'utils/wrappedCurrency'\r\n\r\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\r\n  return (\r\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n      {trade.route.path.map((token, i, path) => {\r\n        const isLastItem: boolean = i === path.length - 1\r\n        const currency = unwrappedToken(token)\r\n        return (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <Fragment key={i}>\r\n            <Flex alignItems=\"end\">\r\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\r\n                {currency.symbol}\r\n              </Text>\r\n            </Flex>\r\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\r\n          </Fragment>\r\n        )\r\n      })}\r\n    </Flex>\r\n  )\r\n})\r\n","import React from 'react'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport SwapRoute from './SwapRoute'\r\n\r\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\r\n  const { t } = useTranslation()\r\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\r\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\r\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\r\n\r\n  return (\r\n    <AutoColumn style={{ padding: '0 16px' }}>\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {isExactIn ? t('Minimum received') : t('Maximum sold')}\r\n          </Text>\r\n          <QuestionHelper\r\n            text={t(\r\n              'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\r\n            )}\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {isExactIn\r\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\r\n                '-'\r\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {t('Price Impact')}\r\n          </Text>\r\n          <QuestionHelper\r\n            text={t('The difference between the market price and estimated price due to trade size.')}\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n      </RowBetween>\r\n\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {t('Liquidity Provider Fee')}\r\n          </Text>\r\n          <QuestionHelper\r\n            text={\r\n              <>\r\n                <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\r\n                <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\r\n                <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\r\n                <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\r\n              </>\r\n            }\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <Text fontSize=\"14px\">\r\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n        </Text>\r\n      </RowBetween>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport interface AdvancedSwapDetailsProps {\r\n  trade?: Trade\r\n}\r\n\r\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\r\n  const { t } = useTranslation()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\r\n\r\n  return (\r\n    <AutoColumn gap=\"0px\">\r\n      {trade && (\r\n        <>\r\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\r\n          {showRoute && (\r\n            <>\r\n              <RowBetween style={{ padding: '0 16px' }}>\r\n                <span style={{ display: 'flex', alignItems: 'center' }}>\r\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                    {t('Route')}\r\n                  </Text>\r\n                  <QuestionHelper\r\n                    text={t('Routing through these tokens resulted in the best price for your trade.')}\r\n                    ml=\"4px\"\r\n                  />\r\n                </span>\r\n                <SwapRoute trade={trade} />\r\n              </RowBetween>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useLastTruthy from 'hooks/useLast'\r\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\r\n\r\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\r\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-radius: 20px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n\r\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\r\n  transition: transform 300ms ease-in-out;\r\n`\r\n\r\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\r\n  const lastTrade = useLastTruthy(trade)\r\n\r\n  return (\r\n    <AdvancedDetailsFooter show={Boolean(trade)}>\r\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\r\n    </AdvancedDetailsFooter>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Price } from '@pancakeswap/sdk'\r\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { StyledBalanceMaxMini } from './styleds'\r\n\r\ninterface TradePriceProps {\r\n  price?: Price\r\n  showInverted: boolean\r\n  setShowInverted: (showInverted: boolean) => void\r\n}\r\n\r\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\r\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\r\n\r\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\r\n  const label = showInverted\r\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\r\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\r\n\r\n  return (\r\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\r\n      {show ? (\r\n        <>\r\n          {formattedPrice ?? '-'} {label}\r\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n            <AutoRenewIcon width=\"14px\" />\r\n          </StyledBalanceMaxMini>\r\n        </>\r\n      ) : (\r\n        '-'\r\n      )}\r\n    </Text>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport ImportToken from 'components/SearchModal/ImportToken'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface Props extends InjectedModalProps {\r\n  tokens: Token[]\r\n  onCancel: () => void\r\n}\r\n\r\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Modal\r\n      title={t('Import Token')}\r\n      onDismiss={() => {\r\n        if (onDismiss) {\r\n          onDismiss()\r\n        }\r\n        onCancel()\r\n      }}\r\n      style={{ maxWidth: '420px' }}\r\n    >\r\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ImportTokenWarningModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { RowBetween } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\n\r\nconst Grouping = styled(RowBetween)`\r\n  width: 50%;\r\n`\r\n\r\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  background-color: ${({ theme, confirmed, disabled }) =>\r\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\r\n  border-radius: 50%;\r\n  color: #ffffff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  line-height: 8px;\r\n  font-size: 12px;\r\n`\r\n\r\nconst CircleRow = styled.div`\r\n  width: calc(100% - 20px);\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(\r\n    90deg,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\r\n      0%,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled\r\n          ? theme.colors.backgroundDisabled\r\n          : prevConfirmed\r\n          ? theme.colors.primary\r\n          : theme.colors.backgroundDisabled}\r\n      80%\r\n  );\r\n  opacity: 0.6;\r\n`\r\n\r\ninterface ProgressCirclesProps {\r\n  steps: boolean[]\r\n  disabled?: boolean\r\n}\r\n\r\n/**\r\n * Based on array of steps, create a step counter of circles.\r\n * A circle can be enabled, disabled, or confirmed. States are derived\r\n * from previous step.\r\n *\r\n * An extra circle is added to represent the ability to swap, add, or remove.\r\n * This step will never be marked as complete (because no 'txn done' state in body ui).\r\n *\r\n * @param steps  array of booleans where true means step is complete\r\n */\r\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\r\n  return (\r\n    <AutoColumn justify=\"center\" {...rest}>\r\n      <Grouping>\r\n        {steps.map((step, i) => {\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <CircleRow key={i}>\r\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\r\n                {step ? '✓' : i + 1}\r\n              </Circle>\r\n              <Connector prevConfirmed={step} disabled={disabled} />\r\n            </CircleRow>\r\n          )\r\n        })}\r\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\r\n      </Grouping>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useGasPrice } from 'state/user/hooks'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils'\r\nimport isZero from '../utils/isZero'\r\nimport useTransactionDeadline from './useTransactionDeadline'\r\nimport useENS from './ENS/useENS'\r\n\r\nexport enum SwapCallbackState {\r\n  INVALID,\r\n  LOADING,\r\n  VALID,\r\n}\r\n\r\ninterface SwapCall {\r\n  contract: Contract\r\n  parameters: SwapParameters\r\n}\r\n\r\ninterface SuccessfulCall {\r\n  call: SwapCall\r\n  gasEstimate: BigNumber\r\n}\r\n\r\ninterface FailedCall {\r\n  call: SwapCall\r\n  error: Error\r\n}\r\n\r\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\r\n\r\n/**\r\n * Returns the swap calls that can be used to make the trade\r\n * @param trade trade to execute\r\n * @param allowedSlippage user allowed slippage\r\n * @param recipientAddressOrName\r\n */\r\nfunction useSwapCallArguments(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): SwapCall[] {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n  const deadline = useTransactionDeadline()\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\r\n\r\n    const contract: Contract | null = getRouterContract(chainId, library, account)\r\n    if (!contract) {\r\n      return []\r\n    }\r\n\r\n    const swapMethods = []\r\n\r\n    swapMethods.push(\r\n      Router.swapCallParameters(trade, {\r\n        feeOnTransfer: false,\r\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n        recipient,\r\n        deadline: deadline.toNumber(),\r\n      }),\r\n    )\r\n\r\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\r\n      swapMethods.push(\r\n        Router.swapCallParameters(trade, {\r\n          feeOnTransfer: true,\r\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n          recipient,\r\n          deadline: deadline.toNumber(),\r\n        }),\r\n      )\r\n    }\r\n\r\n    return swapMethods.map((parameters) => ({ parameters, contract }))\r\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\r\n}\r\n\r\n// returns a function that will execute a swap, if the parameters are all valid\r\n// and the user has approved the slippage adjusted input amount for the trade\r\nexport function useSwapCallback(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const gasPrice = useGasPrice()\r\n\r\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !library || !account || !chainId) {\r\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\r\n    }\r\n    if (!recipient) {\r\n      if (recipientAddressOrName !== null) {\r\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\r\n      }\r\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\r\n    }\r\n\r\n    return {\r\n      state: SwapCallbackState.VALID,\r\n      callback: async function onSwap(): Promise<string> {\r\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\r\n          swapCalls.map((call) => {\r\n            const {\r\n              parameters: { methodName, args, value },\r\n              contract,\r\n            } = call\r\n            const options = !value || isZero(value) ? {} : { value }\r\n\r\n            return contract.estimateGas[methodName](...args, options)\r\n              .then((gasEstimate) => {\r\n                return {\r\n                  call,\r\n                  gasEstimate,\r\n                }\r\n              })\r\n              .catch((gasError) => {\r\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\r\n\r\n                return contract.callStatic[methodName](...args, options)\r\n                  .then((result) => {\r\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\r\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\r\n                  })\r\n                  .catch((callError) => {\r\n                    console.error('Call threw error', call, callError)\r\n                    const reason: string = callError.reason || callError.data?.message || callError.message\r\n                    const errorMessage = `The transaction cannot succeed due to error: ${\r\n                      reason ?? 'Unknown error, check the logs'\r\n                    }.`\r\n\r\n                    return { call, error: new Error(errorMessage) }\r\n                  })\r\n              })\r\n          }),\r\n        )\r\n\r\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\r\n        const successfulEstimation = estimatedCalls.find(\r\n          (el, ix, list): el is SuccessfulCall =>\r\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\r\n        )\r\n\r\n        if (!successfulEstimation) {\r\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\r\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\r\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\r\n        }\r\n\r\n        const {\r\n          call: {\r\n            contract,\r\n            parameters: { methodName, args, value },\r\n          },\r\n          gasEstimate,\r\n        } = successfulEstimation\r\n\r\n        return contract[methodName](...args, {\r\n          gasLimit: calculateGasMargin(gasEstimate),\r\n          gasPrice,\r\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\r\n        })\r\n          .then((response: any) => {\r\n            const inputSymbol = trade.inputAmount.currency.symbol\r\n            const outputSymbol = trade.outputAmount.currency.symbol\r\n            const inputAmount = trade.inputAmount.toSignificant(3)\r\n            const outputAmount = trade.outputAmount.toSignificant(3)\r\n\r\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\r\n            const withRecipient =\r\n              recipient === account\r\n                ? base\r\n                : `${base} to ${\r\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\r\n                      ? truncateHash(recipientAddressOrName)\r\n                      : recipientAddressOrName\r\n                  }`\r\n\r\n            addTransaction(response, {\r\n              summary: withRecipient,\r\n            })\r\n\r\n            return response.hash\r\n          })\r\n          .catch((error: any) => {\r\n            // if the user rejected the tx, pass this along\r\n            if (error?.code === 4001) {\r\n              throw new Error('Transaction rejected.')\r\n            } else {\r\n              // otherwise, the error was unexpected and we need to convey that\r\n              console.error(`Swap failed`, error, methodName, args, value)\r\n              throw new Error(`Swap failed: ${error.message}`)\r\n            }\r\n          })\r\n      },\r\n      error: null,\r\n    }\r\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\r\n}\r\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { tryParseAmount } from '../state/swap/hooks'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\nimport { useCurrencyBalance } from '../state/wallet/hooks'\r\nimport { useWETHContract } from './useContract'\r\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\r\n\r\nexport enum WrapType {\r\n  NOT_APPLICABLE,\r\n  WRAP,\r\n  UNWRAP,\r\n}\r\n\r\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\r\n/**\r\n * Given the selected input and output currency, return a wrap callback\r\n * @param inputCurrency the selected input currency\r\n * @param outputCurrency the selected output currency\r\n * @param typedValue the user input value\r\n */\r\nexport default function useWrapCallback(\r\n  inputCurrency: Currency | undefined,\r\n  outputCurrency: Currency | undefined,\r\n  typedValue: string | undefined,\r\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const wethContract = useWETHContract()\r\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\r\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\r\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  return useMemo(() => {\r\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\r\n\r\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\r\n\r\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\r\n      return {\r\n        wrapType: WrapType.WRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\r\n                    value: `0x${inputAmount.raw.toString(16)}`,\r\n                  })\r\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\r\n                } catch (error) {\r\n                  console.error('Could not deposit', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\r\n      }\r\n    }\r\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\r\n      return {\r\n        wrapType: WrapType.UNWRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\r\n                    `0x${inputAmount.raw.toString(16)}`,\r\n                  ])\r\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\r\n                } catch (error) {\r\n                  console.error('Could not withdraw', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\r\n      }\r\n    }\r\n    return NOT_APPLICABLE\r\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\r\n}\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nconst SafemoonWarning = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\r\n      <Text>• {t('Click on the settings icon')}</Text>\r\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\r\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\r\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\r\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SafemoonWarning\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst BondlyWarning = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\r\n}\r\n\r\nexport default BondlyWarning\r\n","import React, { useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\r\n\r\ninterface AcknowledgementProps {\r\n  handleContinueClick: () => void\r\n}\r\n\r\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\r\n  const { t } = useTranslation()\r\n  const [isConfirmed, setIsConfirmed] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox\r\n            name=\"confirmed\"\r\n            type=\"checkbox\"\r\n            checked={isConfirmed}\r\n            onChange={() => setIsConfirmed(!isConfirmed)}\r\n            scale=\"sm\"\r\n          />\r\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\r\n            {t('I understand')}\r\n          </Text>\r\n        </Flex>\r\n\r\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\r\n          {t('Continue')}\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Acknowledgement\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { WrappedTokenInfo } from 'state/lists/hooks'\r\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\r\nimport SafemoonWarning from './SafemoonWarning'\r\nimport BondlyWarning from './BondlyWarning'\r\nimport Acknowledgement from './Acknowledgement'\r\n\r\nconst StyledModalContainer = styled(ModalContainer)`\r\n  max-width: 440px;\r\n`\r\n\r\nconst MessageContainer = styled(Message)`\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n`\r\n\r\ninterface SwapWarningModalProps {\r\n  swapCurrency: WrappedTokenInfo\r\n  onDismiss?: () => void\r\n}\r\n\r\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\r\nconst usePreventModalOverlayClick = () => {\r\n  useEffect(() => {\r\n    const preventClickHandler = (e) => {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      return false\r\n    }\r\n\r\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\r\n      el.addEventListener('click', preventClickHandler, true)\r\n    })\r\n\r\n    return () => {\r\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\r\n        el.removeEventListener('click', preventClickHandler, true)\r\n      })\r\n    }\r\n  }, [])\r\n}\r\n\r\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  usePreventModalOverlayClick()\r\n\r\n  const TOKEN_WARNINGS = {\r\n    [SwapWarningTokensConfig.safemoon.address]: {\r\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\r\n      component: <SafemoonWarning />,\r\n    },\r\n    [SwapWarningTokensConfig.bondly.address]: {\r\n      symbol: SwapWarningTokensConfig.bondly.symbol,\r\n      component: <BondlyWarning />,\r\n    },\r\n  }\r\n\r\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\r\n\r\n  return (\r\n    <StyledModalContainer minWidth=\"280px\">\r\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\r\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\r\n      </ModalHeader>\r\n      <ModalBody p=\"24px\">\r\n        <MessageContainer variant=\"warning\" mb=\"24px\">\r\n          <Box>{SWAP_WARNING.component}</Box>\r\n        </MessageContainer>\r\n        <Acknowledgement handleContinueClick={onDismiss} />\r\n      </ModalBody>\r\n    </StyledModalContainer>\r\n  )\r\n}\r\n\r\nexport default SwapWarningModal\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\r\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\r\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\r\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\r\nimport AddressInputPanel from './components/AddressInputPanel'\r\nimport { GreyCard } from '../../components/Card'\r\nimport Column, { AutoColumn } from '../../components/Layout/Column'\r\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\r\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\r\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\r\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\r\nimport TradePrice from './components/TradePrice'\r\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\r\nimport ProgressSteps from './components/ProgressSteps'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\r\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\r\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\r\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\r\nimport { Field } from '../../state/swap/actions'\r\nimport {\r\n  useDefaultsFromURLSearch,\r\n  useDerivedSwapInfo,\r\n  useSwapActionHandlers,\r\n  useSwapState,\r\n} from '../../state/swap/hooks'\r\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\r\nimport CircleLoader from '../../components/Loader/CircleLoader'\r\nimport Page from '../Page'\r\nimport SwapWarningModal from './components/SwapWarningModal'\r\n\r\nconst Label = styled(Text)`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n`\r\n\r\nexport default function Swap({ history }: RouteComponentProps) {\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ]\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency],\r\n  )\r\n\r\n  // dismiss warning if all imported tokens are in active lists\r\n  const defaultTokens = useAllTokens()\r\n  const importTokensNotInDefault =\r\n    urlLoadedTokens &&\r\n    urlLoadedTokens.filter((token: Token) => {\r\n      return !(token.address in defaultTokens)\r\n    })\r\n\r\n  const { account } = useActiveWeb3React()\r\n\r\n  // for expert mode\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState()\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n\r\n  const {\r\n    wrapType,\r\n    execute: onWrap,\r\n    inputError: wrapInputError,\r\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const trade = showWrap ? undefined : v2Trade\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount,\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n      }\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n  const isValid = !swapInputError\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n\r\n  // modal and loading\r\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    tradeToConfirm: Trade | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  })\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const route = trade?.route\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\r\n  )\r\n  const noRoute = !route\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\r\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\r\n      return\r\n    }\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\r\n    swapCallback()\r\n      .then((hash) => {\r\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\r\n      })\r\n      .catch((error) => {\r\n        setSwapState({\r\n          attemptingTxn: false,\r\n          tradeToConfirm,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        })\r\n      })\r\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, t])\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode)\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\r\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\r\n\r\n  // swap warning state\r\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\r\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\r\n\r\n  const shouldShowSwapWarning = (swapCurrency) => {\r\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\r\n      const warningTokenData = warningTokenConfig[1]\r\n      return swapCurrency.address === warningTokenData.address\r\n    })\r\n    return Boolean(isWarningToken)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (swapWarningCurrency) {\r\n      onPresentSwapWarningModal()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [swapWarningCurrency])\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency) => {\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\r\n      if (showSwapWarning) {\r\n        setSwapWarningCurrency(inputCurrency)\r\n      } else {\r\n        setSwapWarningCurrency(null)\r\n      }\r\n    },\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    if (maxAmountInput) {\r\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\r\n    }\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency) => {\r\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\r\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\r\n      if (showSwapWarning) {\r\n        setSwapWarningCurrency(outputCurrency)\r\n      } else {\r\n        setSwapWarningCurrency(null)\r\n      }\r\n    },\r\n\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\r\n\r\n  const [onPresentImportTokenWarningModal] = useModal(\r\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (importTokensNotInDefault.length > 0) {\r\n      onPresentImportTokenWarningModal()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [importTokensNotInDefault.length])\r\n\r\n  const [onPresentConfirmModal] = useModal(\r\n    <ConfirmSwapModal\r\n      trade={trade}\r\n      originalTrade={tradeToConfirm}\r\n      onAcceptChanges={handleAcceptChanges}\r\n      attemptingTxn={attemptingTxn}\r\n      txHash={txHash}\r\n      recipient={recipient}\r\n      allowedSlippage={allowedSlippage}\r\n      onConfirm={handleSwap}\r\n      swapErrorMessage={swapErrorMessage}\r\n      customOnDismiss={handleConfirmDismiss}\r\n    />,\r\n    true,\r\n    true,\r\n    'confirmSwapModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n\r\n   \r\n\r\n      <AppBody>\r\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\r\n        <Wrapper id=\"swap-page\">\r\n          <AutoColumn gap=\"md\">\r\n            <CurrencyInputPanel\r\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\r\n              value={formattedAmounts[Field.INPUT]}\r\n              showMaxButton={!atMaxAmountInput}\r\n              currency={currencies[Field.INPUT]}\r\n              onUserInput={handleTypeInput}\r\n              onMax={handleMaxInput}\r\n              onCurrencySelect={handleInputSelect}\r\n              otherCurrency={currencies[Field.OUTPUT]}\r\n              id=\"swap-currency-input\"\r\n            />\r\n            <AutoColumn justify=\"space-between\">\r\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\r\n                <ArrowWrapper clickable>\r\n                  <ArrowDownIcon\r\n                    width=\"16px\"\r\n                    onClick={() => {\r\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                      onSwitchTokens()\r\n                    }}\r\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\r\n                  />\r\n                </ArrowWrapper>\r\n                {recipient === null && !showWrap && isExpertMode ? (\r\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\r\n                    {t('+ Add a send (optional)')}\r\n                  </Button>\r\n                ) : null}\r\n              </AutoRow>\r\n            </AutoColumn>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.OUTPUT]}\r\n              onUserInput={handleTypeOutput}\r\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\r\n              showMaxButton={false}\r\n              currency={currencies[Field.OUTPUT]}\r\n              onCurrencySelect={handleOutputSelect}\r\n              otherCurrency={currencies[Field.INPUT]}\r\n              id=\"swap-currency-output\"\r\n            />\r\n\r\n            {isExpertMode && recipient !== null && !showWrap ? (\r\n              <>\r\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\r\n                  <ArrowWrapper clickable={false}>\r\n                    <ArrowDownIcon width=\"16px\" />\r\n                  </ArrowWrapper>\r\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\r\n                    {t('- Remove send')}\r\n                  </Button>\r\n                </AutoRow>\r\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\r\n              </>\r\n            ) : null}\r\n\r\n            {showWrap ? null : (\r\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\r\n                {Boolean(trade) && (\r\n                  <RowBetween align=\"center\">\r\n                    <Label>{t('Price')}</Label>\r\n                    <TradePrice\r\n                      price={trade?.executionPrice}\r\n                      showInverted={showInverted}\r\n                      setShowInverted={setShowInverted}\r\n                    />\r\n                  </RowBetween>\r\n                )}\r\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\r\n                  <RowBetween align=\"center\">\r\n                    <Label>{t('Slippage Tolerance')}</Label>\r\n                    <Text bold color=\"primary\">\r\n                      {allowedSlippage / 100}%\r\n                    </Text>\r\n                  </RowBetween>\r\n                )}\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n          <Box mt=\"1rem\">\r\n            {swapIsUnsupported ? (\r\n              <Button width=\"100%\" disabled mb=\"4px\">\r\n                {t('Unsupported Asset')}\r\n              </Button>\r\n            ) : !account ? (\r\n              <ConnectWalletButton width=\"100%\" />\r\n            ) : showWrap ? (\r\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\r\n                {wrapInputError ??\r\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\r\n              </Button>\r\n            ) : noRoute && userHasSpecifiedInputOutput ? (\r\n              <GreyCard style={{ textAlign: 'center' }}>\r\n                <Text color=\"textSubtle\" mb=\"4px\">\r\n                  {t('Insufficient liquidity for this trade.')}\r\n                </Text>\r\n                {singleHopOnly && (\r\n                  <Text color=\"textSubtle\" mb=\"4px\">\r\n                    {t('Try enabling multi-hop trades.')}\r\n                  </Text>\r\n                )}\r\n              </GreyCard>\r\n            ) : showApproveFlow ? (\r\n              <RowBetween>\r\n                <Button\r\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\r\n                  onClick={approveCallback}\r\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                  width=\"48%\"\r\n                >\r\n                  {approval === ApprovalState.PENDING ? (\r\n                    <AutoRow gap=\"6px\" justify=\"center\">\r\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\r\n                    </AutoRow>\r\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                    t('Enabled')\r\n                  ) : (\r\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\r\n                  onClick={() => {\r\n                    if (isExpertMode) {\r\n                      handleSwap()\r\n                    } else {\r\n                      setSwapState({\r\n                        tradeToConfirm: trade,\r\n                        attemptingTxn: false,\r\n                        swapErrorMessage: undefined,\r\n                        txHash: undefined,\r\n                      })\r\n                      onPresentConfirmModal()\r\n                    }\r\n                  }}\r\n                  width=\"48%\"\r\n                  id=\"swap-button\"\r\n                  disabled={\r\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                  }\r\n                >\r\n                  {priceImpactSeverity > 3 && !isExpertMode\r\n                    ? t('Price Impact High')\r\n                    : priceImpactSeverity > 2\r\n                    ? t('Swap Anyway')\r\n                    : t('Swap')}\r\n                </Button>\r\n              </RowBetween>\r\n            ) : (\r\n              <Button\r\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\r\n                onClick={() => {\r\n                  if (isExpertMode) {\r\n                    handleSwap()\r\n                  } else {\r\n                    setSwapState({\r\n                      tradeToConfirm: trade,\r\n                      attemptingTxn: false,\r\n                      swapErrorMessage: undefined,\r\n                      txHash: undefined,\r\n                    })\r\n                    onPresentConfirmModal()\r\n                  }\r\n                }}\r\n                id=\"swap-button\"\r\n                width=\"100%\"\r\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\r\n              >\r\n                {swapInputError ||\r\n                  (priceImpactSeverity > 3 && !isExpertMode\r\n                    ? `Price Impact Too High`\r\n                    : priceImpactSeverity > 2\r\n                    ? t('Swap Anyway')\r\n                    : t('Swap'))}\r\n              </Button>\r\n            )}\r\n            {showApproveFlow && (\r\n              <Column style={{ marginTop: '1rem' }}>\r\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\r\n              </Column>\r\n            )}\r\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n          </Box>\r\n        </Wrapper>\r\n      </AppBody>\r\n      {!swapIsUnsupported ? (\r\n        <AdvancedSwapDetailsDropdown trade={trade} />\r\n      ) : (\r\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n","import { Percent } from '@pancakeswap/sdk'\r\nimport { ContextApi } from 'contexts/Localization/types'\r\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\r\n\r\n/**\r\n * Given the price impact, get user confirmation.\r\n *\r\n * @param priceImpactWithoutFee price impact of the trade without the fee.\r\n * @param t Translation\r\n */\r\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent, t: ContextApi['t']): boolean {\r\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\r\n    const confirmWord = 'confirm'\r\n    return (\r\n      // eslint-disable-next-line no-alert\r\n      window.prompt(\r\n        t(\r\n          'This swap has a price impact of at least %amount%%. Please type the word \"%word%\" to continue with this swap.',\r\n          {\r\n            amount: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\r\n            word: confirmWord,\r\n          },\r\n        ),\r\n      ) === confirmWord\r\n    )\r\n  }\r\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\r\n    // eslint-disable-next-line no-alert\r\n    return window.confirm(\r\n      t(\r\n        'This swap has a price impact of at least %amount%%. Please confirm that you would like to continue with this swap.',\r\n        {\r\n          amount: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\r\n        },\r\n      ),\r\n    )\r\n  }\r\n  return true\r\n}\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\nimport AddLiquidity from './index'\r\n\r\nexport function RedirectToAddLiquidity() {\r\n  return <Redirect to=\"/add/\" />\r\n}\r\n\r\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\r\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\r\n  const {\r\n    match: {\r\n      params: { currencyIdA },\r\n    },\r\n  } = props\r\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\r\n  if (match?.length) {\r\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\r\n  }\r\n\r\n  return <AddLiquidity {...props} />\r\n}\r\n\r\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\r\n  const {\r\n    match: {\r\n      params: { currencyIdA, currencyIdB },\r\n    },\r\n  } = props\r\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\r\n    return <Redirect to={`/add/${currencyIdA}`} />\r\n  }\r\n  return <AddLiquidity {...props} />\r\n}\r\n","import React from 'react'\r\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\r\n\r\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\r\n\r\nfunction RedirectOldRemoveLiquidityPathStructure({\r\n  match: {\r\n    params: { tokens },\r\n  },\r\n}: RouteComponentProps<{ tokens: string }>) {\r\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\r\n    return <Redirect to=\"/pool\" />\r\n  }\r\n  const [currency0, currency1] = tokens.split('-')\r\n\r\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\r\n}\r\nexport default RedirectOldRemoveLiquidityPathStructure\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\n\r\n// Redirects to swap but only replace the pathname\r\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\r\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\r\n}\r\n\r\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\r\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\r\n  const {\r\n    location,\r\n    location: { search },\r\n    match: {\r\n      params: { outputCurrency },\r\n    },\r\n  } = props\r\n\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        ...location,\r\n        pathname: '/swap',\r\n        search:\r\n          search && search.length > 1\r\n            ? `${search}&outputCurrency=${outputCurrency}`\r\n            : `?outputCurrency=${outputCurrency}`,\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { lazy } from 'react'\r\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { ResetCSS } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useEagerConnect from 'hooks/useEagerConnect'\r\nimport { usePollBlockNumber } from 'state/block/hooks'\r\nimport { usePollCoreFarmData } from 'state/farms/hooks'\r\nimport { useFetchProfile } from 'state/profile/hooks'\r\nimport { DatePickerPortal } from 'components/DatePicker'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\r\nimport { ToastListener } from './contexts/ToastsContext'\r\nimport PageLoader from './components/Loader/PageLoader'\r\nimport EasterEgg from './components/EasterEgg'\r\nimport history from './routerHistory'\r\n// Views included in the main bundle\r\nimport Pools from './views/Pools'\r\nimport Swap from './views/Swap'\r\nimport {\r\n  RedirectDuplicateTokenIds,\r\n  RedirectOldAddLiquidityPathStructure,\r\n  RedirectToAddLiquidity,\r\n} from './views/AddLiquidity/redirects'\r\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\r\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\nconst Profile = lazy(() => import('./views/Profile'))\r\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\r\nconst Liquidity = lazy(() => import('./views/Pool'))\r\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\r\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\r\n\r\n// This config is required for number formatting\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  usePollBlockNumber()\r\n  useEagerConnect()\r\n  useFetchProfile()\r\n  usePollCoreFarmData()\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <SuspenseWithChunkError fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/farms/auction\">\r\n              <FarmAuction />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Pools />\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n           \r\n         \r\n\r\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\r\n            <Route exact strict path=\"/swap\" component={Swap} />\r\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\r\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\r\n            <Route exact strict path=\"/find\" component={PoolFinder} />\r\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\r\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\r\n            <Route exact path=\"/add\" component={AddLiquidity} />\r\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\r\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\r\n            <Route exact path=\"/create\" component={AddLiquidity} />\r\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\r\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\r\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\r\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\r\n\r\n            {/* Redirect */}\r\n            <Route path=\"/pool\">\r\n              <Redirect to=\"/liquidity\" />\r\n            </Route>\r\n            <Route path=\"/staking\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/syrup\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/nft\">\r\n              <Redirect to=\"/collectibles\" />\r\n            </Route>\r\n\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </SuspenseWithChunkError>\r\n      </Menu>\r\n      <EasterEgg iterations={2} />\r\n      <ToastListener />\r\n      <DatePickerPortal />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { HelmetProvider } from 'react-helmet-async'\r\nimport { Provider } from 'react-redux'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { useThemeManager } from 'state/user/hooks'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { LanguageProvider } from 'contexts/Localization'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport { ToastsProvider } from 'contexts/ToastsContext'\r\nimport store from 'state'\r\n\r\nconst ThemeProviderWrapper = (props) => {\r\n  const [isDark] = useThemeManager()\r\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\r\n}\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ToastsProvider>\r\n          <HelmetProvider>\r\n            <ThemeProviderWrapper>\r\n              <LanguageProvider>\r\n                <RefreshContextProvider>\r\n                  <ModalProvider>{children}</ModalProvider>\r\n                </RefreshContextProvider>\r\n              </LanguageProvider>\r\n            </ThemeProviderWrapper>\r\n          </HelmetProvider>\r\n        </ToastsProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React, { useMemo, ReactNode } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\r\nimport { BLOCKED_ADDRESSES } from './config/constants'\r\nimport ListsUpdater from './state/lists/updater'\r\nimport MulticallUpdater from './state/multicall/updater'\r\nimport TransactionUpdater from './state/transactions/updater'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nfunction Updaters() {\r\n  return (\r\n    <>\r\n      <ListsUpdater />\r\n      <TransactionUpdater />\r\n      <MulticallUpdater />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Blocklist({ children }: { children: ReactNode }) {\r\n  const { account } = useActiveWeb3React()\r\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\r\n  if (blocked) {\r\n    return <div>Blocked address</div>\r\n  }\r\n  return <>{children}</>\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Blocklist>\r\n      <Providers>\r\n        <Updaters />\r\n        <App />\r\n      </Providers>\r\n    </Blocklist>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}